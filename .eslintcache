[{"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\index.js":"1","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\App.js":"2","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\routes.js":"3","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\sidenav.js":"4","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\login.js":"5","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\miCuenta.js":"6","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\changePAssword.js":"7","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\tablaDirectorio.js":"8","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpEmpleado.js":"9","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpCatAreas.js":"10","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpCatPersonal.js":"11","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpCatOficinas.js":"12","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\sideNavAdmin.js":"13","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\loginAdmin.js":"14","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpCatRoles.js":"15","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\resolvers\\checkTokenAdmin.js":"16","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\resolvers\\checkTokenEmpleados.js":"17","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpCatPuesto.js":"18","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\panelConexion\\panelConexion.js":"19","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\changePassword.js":"20","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\Graphql\\Graphql.js":"21","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\tablaDataEmpleados.js":"22","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\dashboard.js":"23","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\index.js":"24","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\App.js":"25","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\routes.js":"26","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\sidenav.js":"27","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\login.js":"28","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\miCuenta.js":"29","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\dashboard.js":"30","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\tablaDirectorio.js":"31","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\loginAdmin.js":"32","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\sideNavAdmin.js":"33","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpEmpleado.js":"34","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpCatPersonal.js":"35","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpCatAreas.js":"36","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpCatRoles.js":"37","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpCatOficinas.js":"38","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\changePassword.js":"39","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\panelConexion\\panelConexion.js":"40","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\resolvers\\checkTokenEmpleados.js":"41","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpCatPuesto.js":"42","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\changePAssword.js":"43","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\resolvers\\checkTokenAdmin.js":"44","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\Graphql\\Graphql.js":"45","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\tablaDataEmpleados.js":"46","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\fechaNotificaciones.js":"47","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\tablaDataBAjasEmpleado.js":"48"},{"size":165,"mtime":1655162083000,"results":"49","hashOfConfig":"50"},{"size":291,"mtime":1655162083000,"results":"51","hashOfConfig":"50"},{"size":3267,"mtime":1655764361070,"results":"52","hashOfConfig":"50"},{"size":4617,"mtime":1655313137277,"results":"53","hashOfConfig":"50"},{"size":7874,"mtime":1655162083000,"results":"54","hashOfConfig":"50"},{"size":10448,"mtime":1655162083000,"results":"55","hashOfConfig":"50"},{"size":6948,"mtime":1655162083000,"results":"56","hashOfConfig":"50"},{"size":6271,"mtime":1655750627010,"results":"57","hashOfConfig":"50"},{"size":38268,"mtime":1655826201359,"results":"58","hashOfConfig":"50"},{"size":13569,"mtime":1655764207925,"results":"59","hashOfConfig":"50"},{"size":11087,"mtime":1655764192509,"results":"60","hashOfConfig":"50"},{"size":28083,"mtime":1655764159061,"results":"61","hashOfConfig":"50"},{"size":10877,"mtime":1655760867013,"results":"62","hashOfConfig":"50"},{"size":7323,"mtime":1655162083000,"results":"63","hashOfConfig":"50"},{"size":7843,"mtime":1655764513275,"results":"64","hashOfConfig":"50"},{"size":126,"mtime":1655162083000,"results":"65","hashOfConfig":"50"},{"size":130,"mtime":1655162083000,"results":"66","hashOfConfig":"50"},{"size":16850,"mtime":1655764482340,"results":"67","hashOfConfig":"50"},{"size":3644,"mtime":1655162083000,"results":"68","hashOfConfig":"50"},{"size":6457,"mtime":1655763931284,"results":"69","hashOfConfig":"50"},{"size":224,"mtime":1655838994526,"results":"70","hashOfConfig":"50"},{"size":30152,"mtime":1655836227126,"results":"71","hashOfConfig":"50"},{"size":5373,"mtime":1655760046794,"results":"72","hashOfConfig":"50"},{"size":165,"mtime":1655839205000,"results":"73","hashOfConfig":"74"},{"size":291,"mtime":1655839205000,"results":"75","hashOfConfig":"74"},{"size":3362,"mtime":1656445957890,"results":"76","hashOfConfig":"74"},{"size":4617,"mtime":1655839205000,"results":"77","hashOfConfig":"74"},{"size":7816,"mtime":1656974170766,"results":"78","hashOfConfig":"74"},{"size":10214,"mtime":1656974169310,"results":"79","hashOfConfig":"74"},{"size":5126,"mtime":1656973984726,"results":"80","hashOfConfig":"74"},{"size":6434,"mtime":1656974167391,"results":"81","hashOfConfig":"74"},{"size":7221,"mtime":1656601703836,"results":"82","hashOfConfig":"74"},{"size":13545,"mtime":1656961241071,"results":"83","hashOfConfig":"74"},{"size":17681,"mtime":1656601881263,"results":"84","hashOfConfig":"74"},{"size":11087,"mtime":1655839205000,"results":"85","hashOfConfig":"74"},{"size":13569,"mtime":1656520615708,"results":"86","hashOfConfig":"74"},{"size":7843,"mtime":1655839205000,"results":"87","hashOfConfig":"74"},{"size":28083,"mtime":1655839205000,"results":"88","hashOfConfig":"74"},{"size":6457,"mtime":1655839205000,"results":"89","hashOfConfig":"74"},{"size":3644,"mtime":1655839205000,"results":"90","hashOfConfig":"74"},{"size":130,"mtime":1655839205000,"results":"91","hashOfConfig":"74"},{"size":16795,"mtime":1656601883527,"results":"92","hashOfConfig":"74"},{"size":6799,"mtime":1656974164154,"results":"93","hashOfConfig":"74"},{"size":126,"mtime":1655839205000,"results":"94","hashOfConfig":"74"},{"size":173,"mtime":1656974028961,"results":"95","hashOfConfig":"74"},{"size":32466,"mtime":1656973611039,"results":"96","hashOfConfig":"74"},{"size":19580,"mtime":1656601708739,"results":"97","hashOfConfig":"74"},{"size":30704,"mtime":1656962455313,"results":"98","hashOfConfig":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},"eh9lba",{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":3,"source":"108","usedDeprecatedRules":"101"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"101"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"101"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"101"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"101"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"101"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"101"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"101"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"101"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"101"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"101"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"147","messages":"148","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"101"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"1h5jsph",{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"160"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":3,"source":"108","usedDeprecatedRules":"160"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"170","messages":"171","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"172","messages":"173","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":2,"source":"174","usedDeprecatedRules":"160"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"160"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":2,"source":"182","usedDeprecatedRules":"160"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"160"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"160"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"160"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"160"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"160"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"160"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"160"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"160"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"160"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"160"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"160"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"160"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"160"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\index.js",[],["222","223"],"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\App.js",[],"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\routes.js",["224","225","226"],"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\sidenav.js",["227","228","229","230","231","232","233","234","235","236","237","238","239","240","241","242"],"import React, {Component} from 'react'\nimport { Layout, Menu, Avatar } from 'antd';\nimport { MDBIcon,MDBRow,MDBCol } from 'mdbreact';\nimport './sidenav.css'\nimport Index from './tablaDirectorio';\nimport { UserOutlined } from '@ant-design/icons';\nimport MiCuenta from './miCuenta'\nimport { FcGoogle } from \"react-icons/fc\";\nimport imagenCEAV from '../imagen/CEAVlogo.png'\nimport {\n  MDBContainer,\n  MDBBtn,\n  MDBModal,\n  MDBModalBody,\n  MDBModalHeader,\n  MDBModalFooter,\n  MDBPopover,\n  MDBPopoverBody,\n  MDBPopoverHeader,\n  MDBTooltip\n} from 'mdbreact';\n\nimport {  AppstoreOutlined, SettingOutlined } from '@ant-design/icons';\nconst { Header, Content, Footer} = Layout;\n\n\nclass side extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n          tablaInicio:true,\n          modal:true,\n          cuenta:false,\n\n        }\n        this.cerrar = this.cerrar.bind(this)\n        this.toggle = this.toggle.bind(this)\n    } \n    cerrar(){\n        this.props.history.push(\"/\")\n      }\n    // miCuenta(){\n    //   this.props.history.push(\"/miCuenta\")\n    // }  \n\n\n      \n      toggle = () => {\n        this.setState({\n          modal: !this.state.modal\n        });\n      }\n\n      tablaInicio(){\n        this.setState({tablaInicio:true});  \n        this.setState({cuenta:false});   \n        // this.setState({:false});      \n      }\n      MiCuenta(){\n        this.setState({tablaInicio:false});  \n        this.setState({cuenta:true}); \n      }\n    \n\n    render(){ \n        let tablaInicio;\n        let cuenta;\n        if(this.state.tablaInicio === true) {  \n            tablaInicio=\n            // <div>\n              <Index/>\n            // </div>\n          } \n\n          if(this.state.cuenta === true){\n            cuenta =\n            <MiCuenta/>\n          }\n         \n           let nombre = localStorage.getItem(\"nombre\")\n           let apellidos = localStorage.getItem(\"apellidos\") \n           let correo = localStorage.getItem(\"correo\")\n           \n\n           \n\n        return(\n            <React.Fragment>   \n              <nav class=\"navbar navbar-light bg-light\" >\n  <a class=\"navbar-brand\">\n    <img src={imagenCEAV} width=\"100\" height=\"40\" class=\"d-inline-block align-top\" alt=\"\" />   \n  </a>\n  <Menu className='avatar' mode=\"horizontal\" defaultSelectedKeys={['mail']}>                \n          <Menu.SubMenu key=\"SubMenu\"  icon={<UserOutlined style={{ fontSize: '28px', color: '#000' }}/>}>\n          <div class=\"card md-10\">\n            <div class=\"card-body\">\n              <MDBRow>\n              <MDBCol md=\"2\">  \n                <Avatar  style={{ backgroundColor: \"Background\", verticalAlign: 'middle',  }} size=\"large\" >{\"us\"}</Avatar>\n              </MDBCol>                            \n              <MDBCol md=\"10\">\n                <p class=\"card-title\"><h6><strong>{nombre}&nbsp;{apellidos}</strong></h6></p>                            \n                <p>{correo}</p>\n              </MDBCol>\n              </MDBRow>\n            </div>\n          </div>\n            <Menu.Item key=\"three\" onClick={e=>this.MiCuenta()} icon={<AppstoreOutlined />}>Ver cuenta</Menu.Item>\n            <Menu.Item key=\"three\" onClick={e=>this.tablaInicio()} icon={<AppstoreOutlined />}>Directorio</Menu.Item>   \n            <Menu.Item key=\"two\"  onClick={this.cerrar} icon={<AppstoreOutlined />}>Cerrar Sesión</Menu.Item>                      \n          </Menu.SubMenu>\n        </Menu>\n</nav>\n            \n      {/* <Header> \n        <center>\n                    <a>\n                    <img  style={{width:\"20%\",marginTop:\"3%\"}} />\n                    </a>\n                    </center> \n                    <br></br>\n                 \n         \n    </Header> */}\n      <Content>\n        {tablaInicio}\n        {cuenta}\n      </Content>\n      <Footer className='footer main'>\n      <center>\n      <FcGoogle />&nbsp;<a href=\"https://www.gob.mx/ceav\" target=\"_blank\">https://www.gob.mx/ceav</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <MDBIcon far icon=\"envelope\" />&nbsp;<a href=\"comunicacionsocial@ceav.gob.mx\" target=\"_blank\">comunicacionsocial@ceav.gob.mx</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <MDBIcon fab icon=\"twitter\" /><a href=\"@CEAVmex\" target=\"_blank\"> @CEAVmex</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <MDBIcon fab icon=\"facebook\" /><a href=\"https://www.facebook.com/CEAVmex\" target=\"_blank\"> @CEAVmex</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <MDBIcon fab icon=\"instagram\" /><a href=\"https://www.instagram.com/ceav_cs\" target=\"_blank\"> @ceav_cs</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;      \n      </center>\n      </Footer>  \n            </React.Fragment> \n        )\n    }\n}export default side","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\login.js",["243","244","245","246"],"import axios from 'axios'\nimport React,{Component} from 'react'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n import'bootstrap-css-only/css/bootstrap.min.css'; \nimport'mdbreact/dist/css/mdb.css';\nimport { MDBCol, MDBBtn, MDBCardBody, MDBView, MDBIcon,MDBRow} from 'mdbreact';\nimport { DialogUtility } from '@syncfusion/ej2-popups';\nimport { Form,Row} from 'reactstrap';\nimport './login.css'\nimport {API} from '../Graphql/Graphql'\nimport { Card } from 'antd';\nimport { Modal, Button as Boton , Input} from 'antd';\nimport {  UserOutlined} from '@ant-design/icons';\nimport swal from 'sweetalert';\nimport 'antd/dist/antd.css'\nimport Logo from '../imagen/CEAVlogo.png'\n\n\nclass login extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            user:\"\",\n            pass:\"\",\n            isModalVisible:false\n          }\n    }\n     componentWillMount(){\n        localStorage.removeItem(\"id_empleado\")\n        localStorage.removeItem(\"nombre\")\n        localStorage.removeItem(\"apellidos\")\n        localStorage.removeItem(\"correo\")\n        localStorage.removeItem(\"telefono\")\n        localStorage.removeItem(\"ext\")\n        localStorage.removeItem(\"area\")\n        localStorage.removeItem(\"puesto\")\n        localStorage.removeItem(\"ubicacion\")\n        localStorage.removeItem(\"TokenEmpleados\")\n    }\n    \n    onChangeInput =(e)=>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    \n    onSubmitBtn = (e)=>{        \n        e.preventDefault();            \n        axios({\n            url:API,\n            method:'post',\n            data:{\n                query:`\n                query{\n                    loginEmpleado(data:\"${[this.state.user,this.state.pass]}\"){\n                        id_empleado\n                        nombre\n                        apellidos\n                        correo\n                        telefono\n                        ext\n                        area\n                        puesto\n                        ubicacion                        \n                        message     \n                        token                            \n                   } \n                }\n                `\n            }   \n             }).then(response=>{\n                 console.log(\"esto es response\",response)\n                 let mensaje = response.data.data.loginEmpleado.message\n                if(mensaje ===\"login exitoso\"){                    \n                    localStorage.setItem(\"id_empleado\",response.data.data.loginEmpleado.id_empleado)                    \n                    localStorage.setItem(\"nombre\",response.data.data.loginEmpleado.nombre)   \n                    localStorage.setItem(\"apellidos\",response.data.data.loginEmpleado.apellidos) \n                    localStorage.setItem(\"correo\",response.data.data.loginEmpleado.correo)\n                    localStorage.setItem(\"telefono\",response.data.data.loginEmpleado.telefono) \n                    localStorage.setItem(\"ext\",response.data.data.loginEmpleado.ext) \n                    localStorage.setItem(\"area\",response.data.data.loginEmpleado.area)\n                    localStorage.setItem(\"puesto\",response.data.data.loginEmpleado.puesto) \n                    localStorage.setItem(\"ubicacion\",response.data.data.loginEmpleado.ubicacion)                                    \n                    localStorage.setItem(\"TokenEmpleados\",response.data.data.loginEmpleado.token)\n\n                    this.props.history.push(\"/side\")\n                      \n                      \n                    swal({\n                        title:\"Bienvenido!\",\n                        text:\"Inicio de sesión exitoso\",\n                        buttons: false,\n                      }); \n                   \n                }\n                else if(response.data.data.loginEmpleado.message === \"usuario o contraseña incorrecto\"){  \n                    swal({                        \n                        text: \"Email o Contraseña incorrecto\",\n                        icon:\"error\",\n                        buttons: false,\n                      }\n                     );                  \n                }else {\n                         \n                    swal({\n                        text:\"Algo salio mal, por favor vuelva a intentarlo\",\n                        icon:\"warning\",\n                        buttons: false,\n                      });            \n                }\n             })\n             .catch(err=>{\n                 console.log('error',err.response)\n             })\n             this.setState({user:\"\"})\n             this.setState({pass:\"\"})\n    }\n    showModal = () => {\n          this.setState({isModalVisible:true});\n      };\n    \n      handleOk = () => {\n        this.setState({isModalVisible:false});\n      };\n    \n      handleCancel = () => {\n        this.setState({isModalVisible:false});\n      };\n\n     render(){\n         let modal;\n         if(this.state.isModalVisible === true){\n             modal = <Modal title=\"Aviso!\" visible={this.state.isModalVisible} onOk={this.handleOk} onCancel={this.handleCancel}>\n             <h6>Inicio de sesión exitoso</h6>\n           </Modal>\n         }\n         let titulo = <center><strong><h3>Iniciar sesión</h3></strong></center>\n         return(\n            <React.Fragment>\n            \n                <div id=\"apppagesLogin\">\n                <MDBView>\n                    <MDBRow style={{marginTop:\"5%\"}}>\n                        <MDBCol md=\"6\" >\n                         <img src={Logo} className=\"logo\"></img>\n                        </MDBCol>\n                        <MDBCol md=\"4\"  >\n                            {/* <center> */}\n                        <Card title = {titulo} style={{width:\"80%\"}}  >       \n                <div className=\"h5 text-center \" > \n                  <MDBIcon far icon=\"user-circle\"   size='4x' style= {{color:\"#626263\"}} />  \n                </div>                          \n                <MDBCardBody>  \n                <Form onSubmit={this.onSubmitBtn}>\n                <center>\n                    <MDBCol md=\"12\">                     \n                    <label>Correo</label>\n                        <Input  prefix={<UserOutlined />} \n                        id=\"user\"\n                        type=\"email\"\n                        name=\"user\"\n                        placeholder=\"Correo\"\n                        onChange={this.onChangeInput}\n                        value={this.state.user}\n                        /> \n                      </MDBCol>                       \n                      <MDBCol md=\"12\"  style= {{marginTop:\"5%\"}}> \n                         <label>Contraseña</label>                        \n                        <Input.Password placeholder=\"Contraseña\"  \n                          id=\"pass\"\n                          type=\"password\"\n                          name=\"contrasena\"\n                          onChange={this.onChangeInput}\n                          value={this.state.pass}\n                         /> \n                       </MDBCol>        \n                       </center>\n                        <div style={{marginTop:\"5%\"}}>\n                        <center>\n                        <MDBBtn  color='success' type=\"submit\" size=\"sm\">\n                        iniciar sesión                            \n                        </MDBBtn>\n                        </center>\n                        </div>  \n                </Form> \n                </MDBCardBody>\n                 <center>¿No recuerdas tu contraseña?<a href=\"/passwordUpdate\">Cambiar contraseña</a> </center>\n            </Card>\n            {/* </center> */}\n                        </MDBCol>\n                    </MDBRow> \n                </MDBView>\n            </div>    \n            {modal}  \n           \n        </React.Fragment>\n        )\n    }\n}\nexport default login","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\miCuenta.js",["247","248","249","250","251","252","253"],"import React, {Component} from 'react'\nimport { MDBModal,MDBCol,MDBContainer,MDBRow,MDBCard,MDBCardBody,MDBCardTitle,\n        MDBCardText,MDBBtn,MDBIcon,MDBModalHeader,MDBModalBody,MDBModalFooter } from 'mdbreact'\nimport { Avatar,Form,Card  } from 'antd'\nimport { Col} from 'reactstrap'\n// import './catalogo.css'\nimport { UserOutlined, RightOutlined} from '@ant-design/icons';\nimport {API} from '../Graphql/Graphql'\nimport axios from 'axios'\nimport swal from 'sweetalert'\nclass MiCuentas extends Component{\n    constructor(props){\n        super(props)\n        this.state={ \n          modal1: false,\n          user:\"\",\n          pass:\"\",\n         dataEmpleados:[]\n\n        }\n        this.toggle1 = this.toggle1.bind(this)   \n    }\n\n    toggle1 = () => {\n      this.setState({\n        modal1: !this.state.modal1\n      });\n    }\n\n    cerrarSesion(){\n      this.props.history.push(\"/\")\n    }\n    \n    cerrar(){\n      this.setState({formularioInicio:true})\n      this.setState({formularioContraseña:false})\n    }\n\n    onChangeInput =(e)=>{\n      const {id,value} = e.target;\n      this.setState({\n          [id]:value\n      })\n  }\n  validacion(){\n     \n    if(this.state.user){\n        axios({\n            url:API,\n            method:'post',\n            data:{\n                query:`\n                query{\n                    getEmpleadosByCorreo(data:\"${[this.state.user]}\"){\n                        id_empleado\n                        nombre\n                        apellidos\n                        correo\n                        telefono\n                        ext\n                        area\n                        ubicacion\n                   } \n                }\n                `\n            }   \n             }).then(datos=>{\n                 console.log(\"esto es datos getEmpleadosByCorreo\",datos)\n                 if(datos.data.data.getEmpleadosByCorreo[0]){\n                     this.setState({dataEmpleados:datos.data.data.getEmpleadosByCorreo[0]})\n                 }else{\n                     swal({\n                       icon:\"error\",\n                       text:\"El correo proporcionado no ha sido encontrado\",\n                       button:false})\n                     this.setState({modal1:false})\n                     this.setState({user:[],pass:[]});   \n                 }\n             })\n             .catch(err=>{\n                 console.log('error',err)\n                 console.log('error',err.response)\n       })\n      }else{\n          swal({\n            icon:\"warning\",\n            text:\"Por favor ingrese un correo electrónico\",\n            button:false\n          })\n          this.setState({modal1:false})\n      } \n    }\n\n    onSubmitBtn = ()=>{ \n      // console.log.log(\"estado de dataEmpleados.id_empleado\", this.state.dataEmpleados) \n      if(this.state.pass){\n          axios({\n              url:API,\n              method:'post',\n              data:{                    \n                  query:`                    \n                  mutation{                        \n                      updatePasswordEmpleados(data:\"${[this.state.dataEmpleados.id_empleado,this.state.pass]}\"){\n                         message \n                     } \n                  }\n                  `\n              }   \n               }).then(datos=>{\n                   console.log(\"datos updatePasswordEmpleados\",datos)\n                   if(datos.data.data.updatePasswordEmpleados.message === \"actualización exitosa\"){\n                      swal({\n                        icon:\"success\",\n                        text:`Contraseña para ${this.state.dataEmpleados.correo} Actualizada`,\n                        button:false,\n                        timer: 3000,\n                      });\n                      localStorage.removeItem('TokenEmpleados')\n                      // sessionStorage.removeItem('TokenEmpleados')\n                      localStorage.removeItem('id_empleado')\n                      localStorage.removeItem('nombre')\n                      localStorage.removeItem('apellidos')\n                      localStorage.removeItem('correo')\n                      localStorage.removeItem('telefono')\n                      localStorage.removeItem('ext')\n                      localStorage.removeItem('area')\n                      localStorage.removeItem('puesto')\n                      localStorage.removeItem('ubicacion')\n                      setTimeout(function(){\n                        window.location.href = '/';\n                     }, 700);\n                     \n                   }else{\n                       swal({\n                         icon:\"warning\",\n                         text:\"Algo salió mal, por favor inténtelo nuevamente\",\n                         button:false,\n                         timer: 3000,\n                       })\n                   }\n               })\n               .catch(err=>{\n                   console.log('error',err)\n                   console.log('error',err.response)\n         })\n      }else{\n          alert({\n            icon:\"error\",\n            text:\"Por favor ingrese una contraseña válida\",\n            button:false,\n            timer: 3000,\n          })\n\n      }\n  }\n  cancelar(){\n    this.setState({toggle1:false})       \n}\n\n    render(){\n      let nombre = localStorage.getItem(\"nombre\")\n      let apellidos = localStorage.getItem(\"apellidos\")\n      let correo = localStorage.getItem(\"correo\")\n      let telefono = localStorage.getItem(\"telefono\")\n      let ext = localStorage.getItem(\"ext\")\n      let area = localStorage.getItem(\"area\")\n      let puesto = localStorage.getItem(\"puesto\")\n      let ubicacion = localStorage.getItem(\"ubicacion\")\n    \n        let formulario=\n        <MDBContainer style={{marginTop:\"2%\", marginBottom:\"5%\"}}>\n        <MDBRow>\n         <MDBCol md=\"4\">\n        <MDBCol style={{width:\"100%\"}} >\n         <MDBCard>          \n           <MDBCardBody>\n             <center>\n             <Avatar   className='useLogo' size={64}  style={{ backgroundColor: '#87d068' }} icon={<UserOutlined />} />           \n               <br></br>               \n             <MDBCardTitle>{nombre}&nbsp;{apellidos}</MDBCardTitle>\n             <MDBCardText><MDBIcon far icon=\"envelope\" />&nbsp;{correo}</MDBCardText>\n             {/* <MDBCardText><MDBIcon icon=\"phone\" />&nbsp;{telefono}&nbsp; Ext:{ext}</MDBCardText>\n             <MDBCardText>Area:{area}</MDBCardText>\n             <MDBCardText>Puesto:{puesto}</MDBCardText>\n             <MDBCardText><MDBIcon icon=\"map-marked-alt\" />&nbsp;{ubicacion}</MDBCardText> */}\n             <br></br>\n             <br></br>\n             <br></br>\n             <br></br>\n             <br></br>\n             <br></br>\n             </center>\n           </MDBCardBody>\n        </MDBCard>\n       </MDBCol> \n         </MDBCol>\n          <MDBCol md=\"8\">\n            <MDBCard>          \n            <MDBCardBody>\n              <center>\n              <MDBCardTitle>Contraseña</MDBCardTitle>\n              {/* <Avatar className='useLogo' size={64}  > */}\n                <MDBIcon icon=\"key mdb-gallery-view-icon\" size=\"4x\" style={{marginTop:\"1%\",marginBottom:\"3%\"}}/>\n                {/* </Avatar> */}\n              <MDBCardText>Aumente la seguridad de su contraseña o cámbiela si otra persona la sabe.</MDBCardText>\n              <MDBBtn onClick={this.toggle1}>CAMBIAR CONTRASEÑA <RightOutlined /></MDBBtn>\n              </center>\n            </MDBCardBody>\n          </MDBCard>           \n          </MDBCol>        \n        </MDBRow>\n      </MDBContainer>\n\n         let datosClientes;\n         if(this.state.dataEmpleados.id_empleado){\n        let rfc =  <strong>RFC</strong>\n           datosClientes =  <Card style={{width:\"70%\"}}>\n            <table>\n                <tr>\n                    <th width=\"30%\"><strong>Correo:</strong></th>\n                    <td width=\"70%\">{this.state.dataEmpleados.area}</td>\n                </tr>\n                <tr>\n                    <th><strong>Nombre:</strong></th>\n                    <td>{this.state.dataEmpleados.nombre}&nbsp;{this.state.dataEmpleados.apellidos}</td>\n                </tr>\n            </table>   \n            <center>\n            <MDBBtn  style={{marginTop:\"10%\"}} color='success' size=\"sm\" onClick={e=> this.onSubmitBtn()}>\n             Actualizar contraseña                        \n            </MDBBtn>\n            </center>\n            </Card>\n         }\n         let Buttonactualizar;\n         if(this.state.dataEmpleados.id_empleado){\n          Buttonactualizar= <div>\n          <center>\n         <MDBBtn  style={{marginTop:\"10%\"}} color='success' size=\"sm\" onClick={e=> this.onSubmitBtn()}>\n          Actualizar contraseña                        \n         </MDBBtn>\n         </center>\n         </div>\n         } \n\n      let modal1 =\n      <div>\n        <MDBContainer>\n        <MDBModal isOpen={this.state.modal1} toggle={this.toggle1}>\n          <MDBModalHeader toggle={this.toggle1}>Cambiar Contraseña</MDBModalHeader>\n          <MDBModalBody>\n          <Form  onSubmit={this.onSubmitBtn} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n                    <center>\n                <Col span={20}>                        \n                  <label><strong>correo</strong></label>                        \n                  <input id=\"user\" type=\"email\" name=\"user\" onChange={this.onChangeInput} value={this.state.user} required/>\n                  <label><strong>contraseña</strong></label>\n                  <input  id=\"pass\" type=\"password\" name=\"contrasena\" onChange={this.onChangeInput} value={this.state.pass} required/>                      \n                </Col> \n                  <div style= {{alignContent:\"space-between\"}} className=\"text-center\">\n                  <MDBBtn color=\"info\" size=\"sm\" onClick={e=> this.validacion()} >\n                    Validar                          \n                  </MDBBtn >\n                  <MDBBtn color=\"deep-orange\" size=\"sm\" onClick={this.toggle1} >\n                    Cancelar                        \n                  </MDBBtn>\n                  </div>   \n                  </center>         \n          </Form> \n                {Buttonactualizar}    \n          </MDBModalBody>\n          <MDBModalFooter>\n          </MDBModalFooter>\n        </MDBModal>\n      </MDBContainer>\n      </div>\n \n        return(\n            <React.Fragment>\n               {formulario}\n               {modal1}\n            </React.Fragment>\n        )   \n    }\n\n}export default MiCuentas","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\changePAssword.js",["254","255","256","257","258","259","260","261","262","263"],"import axios from 'axios'\nimport React,{Component} from 'react'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n import'bootstrap-css-only/css/bootstrap.min.css'; \nimport'mdbreact/dist/css/mdb.css';\nimport {  MDBRow,MDBIcon, MDBCol, MDBInput, MDBBtn, MDBCard,MDBCardBody, MDBView} from 'mdbreact';\nimport { Form } from 'reactstrap';\n// import './index.css'\nimport {API} from '../Graphql/Graphql'\nimport { Avatar,Card } from 'antd';\nimport { Form as form, Input, Button, Checkbox,Select,Col } from 'antd';\n\nclass loginAdminAlfa extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            user:\"\",\n            pass:\"\",\n            dataEmpleados:[]\n        }\n    }\n    //  componentWillMount(){\n     \n    // }\n    \n    onChangeInput =(e)=>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    \n    validacion(){\n        if(this.state.user){\n            axios({\n                url:API,\n                method:'post',\n                data:{\n                    query:`\n                    query{\n                        getEmpleadosByCorreo(data:\"${[this.state.user]}\"){\n                            id_empleado\n                            nombre\n                            apellidos\n                            correo\n                            telefono\n                            ext\n                            area\n                            ubicacion\n                       } \n                    }\n                    `\n                }   \n                 }).then(datos=>{\n                     console.log(\"esto es datos getEmpleadosByCorreo\",datos)\n                     if(datos.data.data.getEmpleadosByCorreo[0]){\n                         this.setState({dataEmpleados:datos.data.data.getEmpleadosByCorreo[0]})\n                     }else{\n                         alert(\"El correo proporcionado no ha sido encontrado\")\n                     }\n                 })\n                 .catch(err=>{\n                     console.log('error',err)\n                     console.log('error',err.response)\n           })\n        }else{\n            alert(\"Por favor ingrese un correo electrónico\")\n        }\n     \n    }\n\n    onSubmitBtn = ()=>{ \n        // console.log.log(\"estado de dataEmpleados.id_empleado\", this.state.dataEmpleados) \n        if(this.state.pass){\n            axios({\n                url:API,\n                method:'post',\n                data:{                    \n                    query:`                    \n                    mutation{                        \n                        updatePasswordEmpleados(data:\"${[this.state.dataEmpleados.id_empleado,this.state.pass]}\"){\n                           message \n                       } \n                    }\n                    `\n                }   \n                 }).then(datos=>{\n                     console.log(\"datos updatePasswordEmpleados\",datos)\n                     if(datos.data.data.updatePasswordEmpleados.message === \"actualización exitosa\"){\n                        alert(`Contraseña para ${this.state.dataEmpleados.correo} Actualizada`);\n                        window.location.reload()\n                     }else{\n                         alert(\"Algo salió mal, por favor inténtelo nuevamente\")\n                     }\n                 })\n                 .catch(err=>{\n                     console.log('error',err)\n                     console.log('error',err.response)\n           })\n        }else{\n            alert(\"Por favor ingrese una contraseña válida\")\n\n        }\n \n    }\n    cancelar(){\n        this.props.history.push(\"/\")\n    }\n  \n\n     render(){\n        // const layout = {\n        //     labelCol: { span: 20 },\n        //     wrapperCol: { span: 16 },\n        //   };\n        //   const { Option} = Select;\n\n         let datosClientes;\n         if(this.state.dataEmpleados.id_empleado){\n        let rfc =  <strong>RFC</strong>\n           datosClientes =  <Card style={{width:\"70%\"}}>\n            <table>\n                <tr>\n                    <th width=\"30%\"><strong>Correo:</strong></th>\n                    <td width=\"70%\">{this.state.dataEmpleados.area}</td>\n                </tr>\n                <tr>\n                    <th><strong>Nombre:</strong></th>\n                    <td>{this.state.dataEmpleados.nombre}&nbsp;{this.state.dataEmpleados.apellidos}</td>\n                </tr>\n            </table>   \n            <center>\n            <MDBBtn  style={{marginTop:\"10%\"}} color='success' size=\"sm\" onClick={e=> this.onSubmitBtn()}>\n             Actualizar contraseña                        \n            </MDBBtn>\n            </center>\n            </Card>\n         }\n         let titulo = <center><strong><h4>Actualizar contraseña</h4></strong></center>\n         return(\n            <React.Fragment>\n                <div id=\"apppages2\">\n               <MDBView>\n                <div style={{marginTop:\"3%\", marginLeft:\"8%\"}} >\n                <MDBCol md=\"5\">\n                <Card title = {titulo} style={{width:\"70%\"}}>       \n                          \n                <div className=\"h5 text-center mb-2\">            \n                    <MDBIcon far icon=\"user-circle\" size='4x' style= {{color:\"#626263\"}} />\n                </div>\n                                \n                <Form onSubmit={this.onSubmitBtn}  ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n                    <center>\n                <Col span={20}>\n                        \n                        <label><strong>correo</strong></label>                        \n                            <Input id=\"user\" type=\"email\" name=\"user\" onChange={this.onChangeInput} value={this.state.user} required/>\n                      \n                        <label><strong>contraseña</strong></label>\n                            <Input.Password  id=\"pass\" type=\"password\" name=\"contrasena\" onChange={this.onChangeInput} value={this.state.pass} required/>\n                        \n                      \n                </Col> \n                 \n                        <div   style= {{marginTop:\"3%\",marginLeft:\"6%\",display:\"flex\",alignContent:\"space-between\"}}>\n                        <MDBBtn color='primary' size=\"sm\" onClick={e=> this.validacion()}>\n                         Avanzar                            \n                        </MDBBtn>\n                        <MDBBtn  color='danger' size=\"sm\" onClick={e=> this.cancelar()}>\n                          Salir                        \n                        </MDBBtn>\n                        </div>   \n                        </center>         \n                </Form> \n              \n            </Card>\n            </MDBCol> \n            <MDBCol md=\"5\">\n            {datosClientes}     \n            </MDBCol>    \n            </div>\n            </MDBView>            \n            </div> \n                      \n        </React.Fragment>\n        )\n    }\n}\nexport default loginAdminAlfa","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\tablaDirectorio.js",["264","265","266","267","268","269","270","271","272","273","274","275","276","277","278","279","280"],"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpEmpleado.js",["281","282","283","284","285"],"import React, {Component} from 'react'\nimport { Card,Form as form, Input, Button, Radio, Form } from 'antd'\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Select,Space,DatePicker } from 'antd';\nimport axios from 'axios';\nimport {API} from '../Graphql/Graphql'\nimport swal from 'sweetalert';\nimport {MDBBtn, MDBRow,MDBCol} from 'mdbreact'\n\nclass signUpEmpleado extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            nombre:'',\n            apellidos:'',\n            correo:'',\n            curp:'',\n            rfc:'',\n            numEmpleado:'',\n            telefono:'',\n            ext:'',\n            // dependencia:'',\n            fechaAlta:'',\n            fechaBaja:'',\n            fechaNotificacionAlta:'',\n            fechaNotificacionBaja:'',\n            pass:'',\n            departamento:'',\n            fk_oficionas:'',\n            fk_area:'',\n            fk_puesto:'',\n            fk_personal:'',\n            tablaArea:[],\n            tablaOficina:[],\n            // tablaPersonal:[],\n            tablaPuesto:[],\n            getTablaNivel:[],\n            fk_nivel:''\n        }\n         this.capturarFechaA = this.capturarFechaA.bind(this)\n         this.capturarFechaB = this.capturarFechaB.bind(this)\n         this.handleChange1 = this.handleChange1.bind(this)\n         this.handleChange2 = this.handleChange2.bind(this)\n         this.handleChange3 = this.handleChange3.bind(this)\n         this.handleChange4 = this.handleChange4.bind(this)\n         this.handleChange5 = this.handleChange5.bind(this)\n         this.fNotificacion = this.fNotificacion.bind(this)\n         this.fNotificacionB = this.fNotificacionB.bind(this)\n\n    }\n    componentDidMount(){\n      axios({\n        url:API,\n        method:'post',\n        data:{\n          query:`\n            query{   \n              getTablaPuesto(data:\"${[]}\"){\n                id_puesto\n                puesto\n                message\n                } \n            }\n            `  }           \n         })\n       .then(response => { \n          this.setState({tablaPuesto:response.data.data.getTablaPuesto}) \n        })\n        .catch(err=>{\n           console.log('error' ,err.response)\n        })       \n  \n        // axios({\n        //   url:API,\n        //   method:'post',\n        //   data:{\n        //     query:`\n        //       query{   \n        //         getTablaPersonal(data:\"${[]}\"){\n        //           id_personal\n        //           tipoPersonal\n        //           message\n        //           } \n        //       }\n        //       `  }           \n        //    })\n        //  .then(response => { \n        //     this.setState({tablaPersonal:response.data.data.getTablaPersonal}) \n        //   })\n        //   .catch(err=>{\n        //      console.log('error' ,err.response)\n        //   })   \n          axios({\n            url:API,\n            method:'post',\n            data:{\n              query:`\n                query{   \n                  getTablaOficinas(data:\"${[]}\"){\n                    id_oficina\n                    nombreOficina\n                    calle\n                    numExterior\n                    numInterior\n                    colonia\n                    codigoPostal\n                    ciudad\n                    estado\n                    telefono1\n                    telefono2\n                    telefono1\n                    telefono3\n                    telefono1\n                    telefono4\n                    telefono5\n                    referencia\n                    message\n                    } \n                }\n                `  }           \n             })\n           .then(response => {           \n              this.setState({tablaOficina:response.data.data.getTablaOficinas}) \n            })\n            .catch(err=>{\n               console.log('error' ,err.response)\n            })  \n            axios({\n              url:API,\n              method:'post',\n              data:{\n                query:`\n                  query{   \n                    getTablaArea(data:\"${[]}\"){\n                      id_area\n                      nomeclatura\n                      numSerie\n                      nombreArea\n                      message\n                      } \n                  }\n                  `  }           \n               })\n             .then(response => { \n                this.setState({tablaArea:response.data.data.getTablaArea}) \n              })\n              .catch(err=>{\n                 console.log('error' ,err.response)\n              }) \n    }\n\n    onChangeInput =(e)=>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    } \n    handleChange1(value) { \n      this.setState({fk_oficionas:value}) \n  }\n    handleChange2(value) { \n        this.setState({fk_area:value})\n    }\n    handleChange3(value) { \n        this.setState({fk_puesto:value}) \n        axios({\n          url:API,\n          method:'post',\n          data:{\n            query:`\n              query{   \n                getTablaNivel(data:\"${[value]}\"){\n                  id\n                  nivel\n                  fk_puesto\n                  message\n                  } \n              }\n              `  }           \n           })\n         .then(response => { \n            this.setState({getTablaNivel:response.data.data.getTablaNivel}) \n          })\n          .catch(err=>{\n             console.log('error' ,err.response)\n          })\n    }\n    handleChange4(value){\n      this.setState({fk_personal:value})\n    }\n    handleChange5(value){      \n      this.setState({fk_nivel:value})\n    }\n\n\n    capturarFechaA(e){\n      if(e){\n        let fechaAltaEmp = e._d.toString();\n        this.setState({fechaAlta:fechaAltaEmp})\n      }\n    }\n    capturarFechaB(e){\n      if(e){\n        let fechaBajaEmp = e._d.toString();\n        this.setState({fechaBaja:fechaBajaEmp})\n      }\n    }\n\n    fNotificacion(e){\n      if(e){\n        let fechaN = e._d.toString();\n        this.setState({fechaNotificacionAlta:fechaN})\n      }\n    }\n    fNotificacionB(e){\n      if(e){\n        let fechaNB = e._d.toString();\n        this.setState({fechaNotificacionBaja:fechaNB})\n      }\n    }\n\n\n    onClear = () => {\n        this.setState({\n          nombre:'',\n          apellidos:'',\n          correo:'',\n          curp:'',\n          rfc:'',\n          numEmpleado:'',\n          telefono:'',\n          ext:'',\n          dependencia:'',\n          fechaAlta:'',\n          fechaBaja:'',\n          fechaNotificacion:'',\n          pass:'',\n        });        \n      } \n\n      onSubmitBtn = async (e)=>{ \n        let nombre = this.state.nombre.toUpperCase()\n        let apellidos = this.state.apellidos.toUpperCase()\n        let curp = this.state.curp.toUpperCase()\n        let rfc = this.state.rfc.toUpperCase()\n        let correo = this.state.correo\n        let numEmpleado = this.state.numEmpleado\n        let telefono = this.state.telefono\n        let ext = this.state.ext \n        // let dependencia = this.state.dependencia  \n        let fechaAlta = this.state.fechaAlta\n        let fechaBaja = this.state.fechaBaja\n        let fechaNotificacionAlta = this.state.fechaNotificacionAlta\n        let fechaNotificacionBaja = this.state.fechaNotificacionBaja\n        let pass = this.state.pass        \n        let departamento = this.state.departamento.toUpperCase() \n        let fk_oficionas = this.state.fk_oficionas        \n        let fk_area = this.state.fk_area\n        let fk_puesto = this.state.fk_puesto\n        let fk_personal = this.state.fk_personal\n        let fk_nivel = this.state.fk_nivel\n     if(fechaAlta  && nombre && apellidos && correo && numEmpleado && telefono  && pass && fk_oficionas && fk_area && fk_puesto && fk_nivel){  \n      await   axios({\n        url: API,\n        method: \"post\",\n        data: {\n          query: `\n            mutation{\n              sigUpEmpleado(data:\"${[nombre,apellidos,curp,rfc,correo,numEmpleado,telefono,ext,pass,departamento,fk_oficionas,fk_area,fk_puesto,fk_nivel,fk_personal]}\"){  \n                message\n                } \n            }\n            `\n        }\n      })\n        .then((response) => {     \n        }).catch((err) => {\n          console.log(\"error\", err.response);\n        }); \n        axios({\n          url: API,\n          method: \"post\",\n          data: {\n            query: `\n                    mutation{\n                    signupDataFechanotificaciones(data:\"${[fechaAlta,fechaBaja,fechaNotificacionAlta,fechaNotificacionBaja,numEmpleado]}\"){  \n                        message\n                        } \n                    }\n                    `\n          }\n        })\n          .then(response => {  \n          // if(response){\n              swal({              \n              title: \"Registro exitoso!\",               \n              icon: \"success\",\n              button:false,\n              timer: 3000\n            });  \n          }).catch((err) => {\n            console.log(\"error\", err.response);\n          });   \n            window.location.reload() \n               \n      }else{\n          swal({\n              text:\"complete los campos requeridos\",\n              icon:\"warning\"\n          })\n      }\n    };\n\n    render(){\n      const dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\n        const { Option } = Select;\n\n        let titulo = <center><h5><strong>REGISTRAR NUEVO USUARIO</strong></h5></center>\n       \n        let formulario=         \n        <Card title={titulo} style={{marginTop:\"2%\", width:\"95%\",marginLeft:\"3%\"}}>\n        <Form\n        labelCol={{ span: 4 }}\n        wrapperCol={{ span: 14 }}\n        layout=\"horizontal\"\n        >  \n        <Form onSubmit={this.onSubmitBtn}>   \n        <MDBRow>   \n        <MDBCol><Form.Item label=\"FECHA DE ALTA\" required> <DatePicker  style={{ width: 400 }} placeholder=\"10/01/2022\" onChange={this.capturarFechaA} format={dateFormatList} /></Form.Item></MDBCol>\n        <MDBCol><Form.Item label=\"FECHA DE BAJA\"> <DatePicker style={{ width: 400 }} placeholder=\"20/04/2023\" onChange={this.capturarFechaB} format={dateFormatList} /></Form.Item></MDBCol>\n        <MDBCol><Form.Item label=\"FECHA DE NOTIFICACIÓN\"> <DatePicker style={{ width: 400 }} placeholder=\"10/01/2022\" onChange={this.fNotificacion} format={dateFormatList} /></Form.Item></MDBCol>    \n        <MDBCol>        \n        <Form.Item  label=\"NOMBRE(S)\" required >\n            <Input style={{ width:400 }} placeholder=\"NOMBRE(S)\" id=\"nombre\" type=\"text\" name=\"nombre\" onChange={this.onChangeInput} value={this.state.nombre} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"APELLIDOS\" required>\n            <Input style={{ width: 400 }} placeholder=\"APELLIDOS\" id=\"apellidos\" type=\"text\" name=\"apellidos\" onChange={this.onChangeInput} value={this.state.apellidos} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"CURP\" >\n            <Input style={{ width: 400 }} placeholder=\"16 digitos\" id=\"curp\" type=\"text\" name=\"curp\" onChange={this.onChangeInput} value={this.state.curp} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"RFC\" >\n          <Input style={{ width: 400 }} placeholder=\"16 digitos\" id=\"rfc\" type=\"text\" name=\"rfc\" onChange={this.onChangeInput} value={this.state.rfc} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"CORREO\" required>\n          <Input style={{ width: 400 }} placeholder=\"ejemplo@ceav.gob.mx\" id=\"correo\" type=\"email\" name=\"correo\" onChange={this.onChangeInput} value={this.state.correo} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"Núm. EMPLEADO\" required>\n          <Input style={{ width: 400 }} placeholder=\"\" id=\"numEmpleado\" type=\"number\" name=\"numEmpleado\" onChange={this.onChangeInput} value={this.state.numEmpleado} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"TELEFONO\" >\n          <Input style={{ width: 400 }} placeholder=\"(55) 1000 2000\" id=\"telefono\" type=\"number\" name=\"telefono\" onChange={this.onChangeInput} value={this.state.telefono} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"EXT.\" >\n          <Input style={{ width: 400 }} placeholder=\"0000\" id=\"ext\" type=\"number\" name=\"ext\" onChange={this.onChangeInput} value={this.state.ext} />\n        </Form.Item>\n        </MDBCol>\n       <MDBCol>\n        <Form.Item label=\"DEPARTAMENTO\" >\n          <Input style={{ width: 400 }}  id=\"departamento\" type=\"departamento\" name=\"text\" onChange={this.onChangeInput} value={this.state.departamento} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item  label=\"CONTRASEÑA\" id=\"pass\" type=\"password\" name=\"pass\" onChange={this.onChangeInput} value={this.state.pass} required >\n        <Input.Password style={{ width: 400 }} placeholder=\"****\" />\n      </Form.Item>\n      </MDBCol>\n      <MDBCol>\n        <Form.Item label=\"NOMBRE DE LA OfICINA\" required>\n                  <Select\n                   onChange={this.handleChange1}\n                   showSearch\n                   style={{ width: 400 }}\n                   placeholder=\"SELECCIONE SU OFICINA\"\n                   optionFilterProp=\"children\"\n                   filterOption={(input, option) =>\n                   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                   }\n                   filterSort={(optionA, optionB) =>\n                   optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                   }   \n                  >\n                      { this.state.tablaOficina.map(rows=>{\n                          return (\n                          <option value  = {rows.id_oficina} >{rows.nombreOficina}</option>\n                          )\n                        })}\n                  </Select>\n               </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"AREA DE ADSCRIPCIÓN\" required>\n                  <Select\n                   onChange={this.handleChange2}\n                   showSearch\n                   style={{ width: 400 }}\n                   placeholder=\"SELECCIONE EL AREA DE ADSCRIPCIÓN\"\n                   optionFilterProp=\"children\"\n                   filterOption={(input, option) =>\n                   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                   }\n                   filterSort={(optionA, optionB) =>\n                   optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                   }   \n                  >\n                      { this.state.tablaArea.map(rows=>{\n                          return (\n                          <option value  = {rows.id_area} >{rows.nombreArea}</option>\n                          )\n                        })}\n                  </Select>\n               </Form.Item>\n\n       \n        </MDBCol>\n        <MDBCol> \n        <Form.Item label=\"DENOMINACIÓN DEL PUESTO\" required>\n                  <Select\n                   onChange={this.handleChange3}\n                   showSearch\n                   style={{ width: 400 }}\n                   placeholder=\"SELECCIONE LA DENOMINACIÓN DEL PUESTO\"\n                   optionFilterProp=\"children\"\n                   filterOption={(input, option) =>\n                   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                   }\n                   filterSort={(optionA, optionB) =>\n                   optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                   }   \n                  >\n                      { this.state.tablaPuesto.map(rows=>{\n                          return (\n                          <option value  = {rows.id_puesto} >{rows.puesto}</option>\n                          )\n                        })}\n                  </Select>\n               </Form.Item>\n        </MDBCol>\n        <MDBCol> \n        <Form.Item label=\"DENOMINACIÓN DEL NIVEL\" required>\n                  <Select\n                   onChange={this.handleChange5}\n                   showSearch\n                   style={{ width: 400 }}\n                   placeholder=\"SELECCIONE LA DENOMINACIÓN DEL NIVEL\"\n                   optionFilterProp=\"children\"\n                   filterOption={(input, option) =>\n                   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                   }\n                   filterSort={(optionA, optionB) =>\n                   optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                   }   \n                  >\n                      { this.state.getTablaNivel.map(rows=>{\n                          return (\n                          <option value  = {rows.id} >{rows.nivel}</option>\n                          )\n                        })}\n                  </Select>\n               </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"PERSONAL\" required>\n        <Select\n            onChange={this.handleChange4}\n            showSearch\n            style={{ width: 400 }}\n            placeholder=\"SELECCIONE LA DENOMINACIÓN DEL PERSONAL\"\n            optionFilterProp=\"children\"\n            filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            filterSort={(optionA, optionB) =>\n            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n            }\n        >             \n        <Option value=\"1\">EVENTUAL</Option>      \n        <Option value=\"2\">ESTRUCTURA</Option>         \n        </Select>   \n        </Form.Item> \n        </MDBCol>\n        <MDBCol> \n        {/* <Form.Item style={{marginTop:\"8%\"}}> */}\n        <div className=\"text-center\">                   \n            <Button  onClick={e=>this.onSubmitBtn()} style={{ background: \"#73d13d\" }}>GUARDAR</Button> &nbsp;&nbsp;&nbsp;\n            <Button  onClick={e=>this.onClear()} style={{background:\"#40a9ff\"}} >CANCELAR</Button>\n        </div> \n        {/* </Form.Item> */}\n        </MDBCol>   \n        </MDBRow>  \n        </Form>\n        </Form>       \n        </Card>\n        \n        return(\n            <React.Fragment>\n                  {formulario}              \n            </React.Fragment>\n      \n        )\n    }\n\n}export default signUpEmpleado\n\n// import React, {Component} from 'react'\n// import { Card,Form as form, Input, Button, Radio, Form } from 'antd'\n// import { InfoCircleOutlined } from '@ant-design/icons';\n// import { Select,Space,DatePicker } from 'antd';\n// import axios from 'axios';\n// import {API} from '../Graphql/Graphql'\n// import swal from 'sweetalert';\n// import {MDBBtn, MDBRow,MDBCol} from 'mdbreact'\n\n// class signUpEmpleado extends Component{\n//     constructor(props){\n//         super(props)\n//         this.state={\n//             nombre:'',\n//             apellidos:'',\n//             correo:'',\n//             curp:'',\n//             rfc:'',\n//             numEmpleado:'',\n//             telefono:'',\n//             ext:'',\n//             dependencia:'',\n//             fechaAlta:'',\n//             fechaBaja:'',\n//             fechaNotificacionAlta:'',\n//             fechaNotificacionBaja:'',\n//             pass:'',\n//             fk_oficionas:'',\n//             fk_area:'',\n//             fk_puesto:'',\n//             fk_personal:'',\n//             tablaArea:[],\n//             tablaOficina:[],\n//             // tablaPersonal:[],\n//             tablaPuesto:[],\n//             getTablaNivel:[],\n//             fk_nivel:''\n//         }\n//          this.capturarFechaA = this.capturarFechaA.bind(this)\n//          this.capturarFechaB = this.capturarFechaB.bind(this)\n//          this.handleChange1 = this.handleChange1.bind(this)\n//          this.handleChange2 = this.handleChange2.bind(this)\n//          this.handleChange3 = this.handleChange3.bind(this)\n//          this.handleChange4 = this.handleChange4.bind(this)\n//          this.handleChange5 = this.handleChange5.bind(this)\n//          this.fNotificacion = this.fNotificacion.bind(this)\n//          this.fNotificacionB = this.fNotificacionB.bind(this)\n\n//     }\n//     componentDidMount(){\n//       axios({\n//         url:API,\n//         method:'post',\n//         data:{\n//           query:`\n//             query{   \n//               getTablaPuesto(data:\"${[]}\"){\n//                 id_puesto\n//                 puesto\n//                 message\n//                 } \n//             }\n//             `  }           \n//          })\n//        .then(response => { \n//         //  console.log(\"esto es response de get\",response)\n//           this.setState({tablaPuesto:response.data.data.getTablaPuesto}) \n//         })\n//         .catch(err=>{\n//            console.log('error' ,err.response)\n//         })       \n  \n//         // axios({\n//         //   url:API,\n//         //   method:'post',\n//         //   data:{\n//         //     query:`\n//         //       query{   \n//         //         getTablaPersonal(data:\"${[]}\"){\n//         //           id_personal\n//         //           tipoPersonal\n//         //           message\n//         //           } \n//         //       }\n//         //       `  }           \n//         //    })\n//         //  .then(response => { \n//         //     this.setState({tablaPersonal:response.data.data.getTablaPersonal}) \n//         //   })\n//         //   .catch(err=>{\n//         //      console.log('error' ,err.response)\n//         //   })   \n//           axios({\n//             url:API,\n//             method:'post',\n//             data:{\n//               query:`\n//                 query{   \n//                   getTablaOficinas(data:\"${[]}\"){\n//                     id_oficina\n//                     nombreOficina\n//                     calle\n//                     numExterior\n//                     numInterior\n//                     colonia\n//                     codigoPostal\n//                     ciudad\n//                     estado\n//                     telefono1\n//                     telefono2\n//                     telefono1\n//                     telefono3\n//                     telefono1\n//                     telefono4\n//                     telefono5\n//                     referencia\n//                     message\n//                     } \n//                 }\n//                 `  }           \n//              })\n//            .then(response => { \n//           console.log(\"Data oficinas\",response.data.data.getTablaOficinas)\n//               this.setState({tablaOficina:response.data.data.getTablaOficinas}) \n//             })\n//             .catch(err=>{\n//                console.log('error' ,err.response)\n//             })  \n//             axios({\n//               url:API,\n//               method:'post',\n//               data:{\n//                 query:`\n//                   query{   \n//                     getTablaArea(data:\"${[]}\"){\n//                       id_area\n//                       nomeclatura\n//                       numSerie\n//                       nombreArea\n//                       message\n//                       } \n//                   }\n//                   `  }           \n//                })\n//              .then(response => { \n//                 this.setState({tablaArea:response.data.data.getTablaArea}) \n//               })\n//               .catch(err=>{\n//                  console.log('error' ,err.response)\n//               }) \n//     }\n\n//     onChangeInput =(e)=>{\n//         const {id,value} = e.target;\n//         this.setState({\n//             [id]:value\n//         })\n//     } \n//     handleChange1(value) { \n//       this.setState({fk_oficionas:value}) \n//   }\n//     handleChange2(value) { \n//         this.setState({fk_area:value})\n//     }\n//     handleChange3(value) { \n//         this.setState({fk_puesto:value}) \n//         axios({\n//           url:API,\n//           method:'post',\n//           data:{\n//             query:`\n//               query{   \n//                 getTablaNivel(data:\"${[value]}\"){\n//                   id\n//                   nivel\n//                   fk_puesto\n//                   message\n//                   } \n//               }\n//               `  }           \n//            })\n//          .then(response => { \n//            console.log(\"esto es response de get\",response)\n//             this.setState({getTablaNivel:response.data.data.getTablaNivel}) \n//           })\n//           .catch(err=>{\n//              console.log('error' ,err.response)\n//           })\n//     }\n//     handleChange4(value){\n//       this.setState({fk_personal:value})\n//     }\n//     handleChange5(value){\n//       console.log(\"handleChange5\",value)\n//       this.setState({fk_nivel:value})\n//     }\n\n\n//     capturarFechaA(e){\n//       if(e){\n//         let fechaAltaEmp = e._d.toString();\n//         this.setState({fechaAlta:fechaAltaEmp})\n//       }\n//     }\n//     capturarFechaB(e){\n//       if(e){\n//         let fechaBajaEmp = e._d.toString();\n//         this.setState({fechaBaja:fechaBajaEmp})\n//       }\n//     }\n\n//     fNotificacion(e){\n//       if(e){\n//         let fechaN = e._d.toString();\n//         this.setState({fechaNotificacionAlta:fechaN})\n//       }\n//     }\n//     fNotificacionB(e){\n//       if(e){\n//         let fechaNB = e._d.toString();\n//         this.setState({fechaNotificacionBaja:fechaNB})\n//       }\n//     }\n\n\n//     onClear = () => {\n//         this.setState({\n//           nombre:'',\n//           apellidos:'',\n//           correo:'',\n//           curp:'',\n//           rfc:'',\n//           numEmpleado:'',\n//           telefono:'',\n//           ext:'',\n//           dependencia:'',\n//           fechaAlta:'',\n//           fechaBaja:'',\n//           fechaNotificacion:'',\n//           pass:'',\n//         });        \n//       } \n\n//       onSubmitBtn = async (e)=>{ \n//         let nombre = this.state.nombre.toUpperCase()\n//         let apellidos = this.state.apellidos.toUpperCase()\n//         let curp = this.state.curp.toUpperCase()\n//         let rfc = this.state.rfc.toUpperCase()\n//         let correo = this.state.correo\n//         let numEmpleado = this.state.numEmpleado\n//         let telefono = this.state.telefono\n//         let ext = this.state.ext\n//         let dependencia = this.state.dependencia\n//         let fechaAlta = this.state.fechaAlta\n//         let fechaBaja = this.state.fechaBaja\n//         let fechaNotificacionAlta = this.state.fechaNotificacionAlta\n//         let fechaNotificacionBaja = this.state.fechaNotificacionBaja\n//         let pass = this.state.pass         \n//         let fk_oficionas = this.state.fk_oficionas        \n//         let fk_area = this.state.fk_area\n//         let fk_puesto = this.state.fk_puesto\n//         let fk_personal = this.state.fk_personal\n//         let fk_nivel = this.state.fk_nivel\n//      if(fechaAlta  && nombre && apellidos && correo && numEmpleado && telefono  && dependencia  && pass && fk_oficionas && fk_area && fk_puesto && fk_nivel){  \n//       await   axios({\n//         url: API,\n//         method: \"post\",\n//         data: {\n//           query: `\n//             mutation{\n//               sigUpEmpleado(data:\"${[nombre,apellidos,curp,rfc,correo,numEmpleado,telefono,ext,dependencia,pass,fk_oficionas,fk_area,fk_puesto,fk_nivel,fk_personal]}\"){  \n//                 message\n//                 } \n//             }\n//             `\n//         }\n//       })\n//         .then((response) => {     \n//         }).catch((err) => {\n//           console.log(\"error\", err.response);\n//         }); \n//         axios({\n//           url: API,\n//           method: \"post\",\n//           data: {\n//             query: `\n//                     mutation{\n//                     signupDataFechanotificaciones(data:\"${[fechaAlta,fechaBaja,fechaNotificacionAlta,fechaNotificacionBaja,numEmpleado]}\"){  \n//                         message\n//                         } \n//                     }\n//                     `\n//           }\n//         })\n//           .then(response => {  \n//           // if(response){\n//               swal({              \n//               title: \"Registro exitoso!\",               \n//               icon: \"success\",\n//               button:false,\n//               timer: 3000\n//             });  \n//           }).catch((err) => {\n//             console.log(\"error\", err.response);\n//           });   \n//             window.location.reload() \n               \n//       }else{\n//           swal({\n//               text:\"complete los campos requeridos\",\n//               icon:\"warning\"\n//           })\n//       }\n//     };\n\n//     render(){\n//       const dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\n//         const { Option } = Select;\n\n//         let titulo = <center><h5><strong>Registro de Empleado</strong></h5></center>\n       \n//         let formulario=         \n//         <Card title={titulo} style={{marginTop:\"2%\", width:\"95%\",marginLeft:\"3%\"}}>\n//         <Form\n//         labelCol={{ span: 4 }}\n//         wrapperCol={{ span: 14 }}\n//         layout=\"horizontal\"\n//         >  \n//         <Form onSubmit={this.onSubmitBtn}>   \n//         <MDBRow>   \n//         <MDBCol><Form.Item label=\"FECHA DE ALTA\" required> <DatePicker  style={{ width: 400 }} placeholder=\"10/01/2022\" onChange={this.capturarFechaA} format={dateFormatList} /></Form.Item></MDBCol>\n//         <MDBCol><Form.Item label=\"FECHA DE BAJA\"> <DatePicker style={{ width: 400 }} placeholder=\"20/04/2023\" onChange={this.capturarFechaB} format={dateFormatList} /></Form.Item></MDBCol>\n//         <MDBCol><Form.Item label=\"FECHA DE NOTIFICACIÓN\"> <DatePicker style={{ width: 400 }} placeholder=\"10/01/2022\" onChange={this.fNotificacion} format={dateFormatList} /></Form.Item></MDBCol>    \n//         <MDBCol>        \n//         <Form.Item  label=\"NOMBRE(S)\" required >\n//             <Input style={{ width:400 }} placeholder=\"NOMBRE(S)\" id=\"nombre\" type=\"text\" name=\"nombre\" onChange={this.onChangeInput} value={this.state.nombre} />\n//         </Form.Item>\n//         </MDBCol>\n//         <MDBCol>\n//         <Form.Item label=\"APELLIDOS\" required>\n//             <Input style={{ width: 400 }} placeholder=\"APELLIDOS\" id=\"apellidos\" type=\"text\" name=\"apellidos\" onChange={this.onChangeInput} value={this.state.apellidos} />\n//         </Form.Item>\n//         </MDBCol>\n//         <MDBCol>\n//         <Form.Item label=\"CURP\" >\n//             <Input style={{ width: 400 }} placeholder=\"16 digitos\" id=\"curp\" type=\"text\" name=\"curp\" onChange={this.onChangeInput} value={this.state.curp} />\n//         </Form.Item>\n//         </MDBCol>\n//         <MDBCol>\n//         <Form.Item label=\"RFC\" >\n//           <Input style={{ width: 400 }} placeholder=\"16 digitos\" id=\"rfc\" type=\"text\" name=\"rfc\" onChange={this.onChangeInput} value={this.state.rfc} />\n//         </Form.Item>\n//         </MDBCol>\n//         <MDBCol>\n//         <Form.Item label=\"CORREO\" required>\n//           <Input style={{ width: 400 }} placeholder=\"ejemplo@ceav.gob.mx\" id=\"correo\" type=\"email\" name=\"correo\" onChange={this.onChangeInput} value={this.state.correo} />\n//         </Form.Item>\n//         </MDBCol>\n//         <MDBCol>\n//         <Form.Item label=\"Núm. EMPLEADO\" required>\n//           <Input style={{ width: 400 }} placeholder=\"\" id=\"numEmpleado\" type=\"number\" name=\"numEmpleado\" onChange={this.onChangeInput} value={this.state.numEmpleado} />\n//         </Form.Item>\n//         </MDBCol>\n//         <MDBCol>\n//         <Form.Item label=\"TELEFONO\" >\n//           <Input style={{ width: 400 }} placeholder=\"(55) 1000 2000\" id=\"telefono\" type=\"number\" name=\"telefono\" onChange={this.onChangeInput} value={this.state.telefono} />\n//         </Form.Item>\n//         </MDBCol>\n//         <MDBCol>\n//         <Form.Item label=\"EXT.\" >\n//           <Input style={{ width: 400 }} placeholder=\"0000\" id=\"ext\" type=\"number\" name=\"ext\" onChange={this.onChangeInput} value={this.state.ext} />\n//         </Form.Item>\n//         </MDBCol>\n//         <MDBCol>\n//         <Form.Item label=\"DEPENDENCIA\" required>\n//           <Input style={{ width: 400 }} placeholder=\"CEAV\" id=\"dependencia\" type=\"text\" name=\"dependencia\" onChange={this.onChangeInput} value={this.state.dependencia} />\n//         </Form.Item>\n//         </MDBCol>       \n//         <MDBCol>\n//         <Form.Item  label=\"CONTRASEÑA\" id=\"pass\" type=\"password\" name=\"pass\" onChange={this.onChangeInput} value={this.state.pass} required >\n//         <Input.Password style={{ width: 400 }} placeholder=\"****\" />\n//       </Form.Item>\n//       </MDBCol>\n//       <MDBCol>\n//         <Form.Item label=\"NOMBRE DE LA OfICINA\" required>\n//                   <Select\n//                    onChange={this.handleChange1}\n//                    showSearch\n//                    style={{ width: 400 }}\n//                    placeholder=\"SELECCIONE SU OFICINA\"\n//                    optionFilterProp=\"children\"\n//                    filterOption={(input, option) =>\n//                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n//                    }\n//                    filterSort={(optionA, optionB) =>\n//                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n//                    }   \n//                   >\n//                       { this.state.tablaOficina.map(rows=>{\n//                           return (\n//                           <option value  = {rows.id_oficina} >{rows.nombreOficina}</option>\n//                           )\n//                         })}\n//                   </Select>\n//                </Form.Item>\n//         </MDBCol>\n//         <MDBCol>\n//         <Form.Item label=\"AREA DE ADSCRIPCIÓN\" required>\n//                   <Select\n//                    onChange={this.handleChange2}\n//                    showSearch\n//                    style={{ width: 400 }}\n//                    placeholder=\"SELECCIONE EL AREA DE ADSCRIPCIÓN\"\n//                    optionFilterProp=\"children\"\n//                    filterOption={(input, option) =>\n//                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n//                    }\n//                    filterSort={(optionA, optionB) =>\n//                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n//                    }   \n//                   >\n//                       { this.state.tablaArea.map(rows=>{\n//                           return (\n//                           <option value  = {rows.id_area} >{rows.nombreArea}</option>\n//                           )\n//                         })}\n//                   </Select>\n//                </Form.Item>\n\n       \n//         </MDBCol>\n//         <MDBCol> \n//         <Form.Item label=\"DENOMINACIÓN DEL PUESTO\" required>\n//                   <Select\n//                    onChange={this.handleChange3}\n//                    showSearch\n//                    style={{ width: 400 }}\n//                    placeholder=\"SELECCIONE LA DENOMINACIÓN DEL PUESTO\"\n//                    optionFilterProp=\"children\"\n//                    filterOption={(input, option) =>\n//                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n//                    }\n//                    filterSort={(optionA, optionB) =>\n//                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n//                    }   \n//                   >\n//                       { this.state.tablaPuesto.map(rows=>{\n//                           return (\n//                           <option value  = {rows.id_puesto} >{rows.puesto}</option>\n//                           )\n//                         })}\n//                   </Select>\n//                </Form.Item>\n//         </MDBCol>\n//         <MDBCol> \n//         <Form.Item label=\"DENOMINACIÓN DEL NIVEL\" required>\n//                   <Select\n//                    onChange={this.handleChange5}\n//                    showSearch\n//                    style={{ width: 400 }}\n//                    placeholder=\"SELECCIONE LA DENOMINACIÓN DEL NIVEL\"\n//                    optionFilterProp=\"children\"\n//                    filterOption={(input, option) =>\n//                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n//                    }\n//                    filterSort={(optionA, optionB) =>\n//                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n//                    }   \n//                   >\n//                       { this.state.getTablaNivel.map(rows=>{\n//                           return (\n//                           <option value  = {rows.id} >{rows.nivel}</option>\n//                           )\n//                         })}\n//                   </Select>\n//                </Form.Item>\n//         </MDBCol>\n//         <MDBCol>\n//         <Form.Item label=\"PERSONAL\" required>\n//         <Select\n//             onChange={this.handleChange4}\n//             showSearch\n//             style={{ width: 400 }}\n//             placeholder=\"SELECCIONE LA DENOMINACIÓN DEL PERSONAL\"\n//             optionFilterProp=\"children\"\n//             filterOption={(input, option) =>\n//             option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n//             }\n//             filterSort={(optionA, optionB) =>\n//             optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n//             }\n//         >             \n//         <Option value=\"1\">EVENTUAL</Option>      \n//         <Option value=\"2\">ESTRUCTURA</Option>         \n//         </Select>   \n//         </Form.Item> \n//         </MDBCol>\n//         <MDBCol> \n//         <Form.Item style={{marginTop:\"8%\"}}>\n//         <div className=\"text-center\">                   \n//             <Button  onClick={e=>this.onSubmitBtn()} style={{ background: \"#73d13d\" }}>GUARDAR</Button> &nbsp;&nbsp;&nbsp;\n//             <Button  onClick={e=>this.onClear()} style={{background:\"#40a9ff\"}} >CANCELAR</Button>\n//         </div> \n//         </Form.Item>\n//         </MDBCol>   \n//         </MDBRow>  \n//         </Form>\n//         </Form>       \n//         </Card>\n        \n//         return(\n//             <React.Fragment>\n//                   {formulario}              \n//             </React.Fragment>\n      \n//         )\n//     }\n\n// }export default signUpEmpleado","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpCatAreas.js",["286"],"import React, {Component} from 'react'\nimport { Card,Form , Input, Button,Select,Menu } from 'antd'\nimport axios from 'axios';\nimport {API} from '../Graphql/Graphql'\nimport swal from 'sweetalert';\nimport MUIDataTable from \"mui-datatables\";\nimport { Row,Col,Form as form } from 'reactstrap'\nimport { EditOutlined,IssuesCloseOutlined } from '@ant-design/icons';\nimport './sideNavAdmin.css'\nimport { MDBBtn,MDBIcon,MDBContainer,MDBModal,MDBModalBody,MDBModalHeader,MDBModalFooter,MDBRow,MDBCol } from 'mdbreact';\n\nclass catalogoArea extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            area:'',\n            nomeclatura:'',\n            numSerie:'',\n            tablaArea:[],            \n            inicioArea:true,\n            tablarenderArea:false,\n            ArrayArea:[],\n            modal:false,  \n            id_areaUpdate:\"\",     \n            nombreAreaUpdate:\"\",\n            nomeclaturaUpdate:\"\",\n            numSerieUpdate:\"\",\n            \n\n        }\n        this.toggle = this.toggle.bind(this)\n        this.onChangeInput2 = this.onChangeInput2.bind(this)\n    }\n    componentDidMount(){\n      axios({\n        url:API,\n        method:'post',\n        data:{\n          query:`\n            query{   \n              getTablaArea(data:\"${[]}\"){\n                id_area\n                nomeclatura\n                numSerie\n                nombreArea\n                message\n                } \n            }\n            `  }           \n         })\n       .then(response => { \n          this.setState({tablaArea:response.data.data.getTablaArea}) \n        })\n        .catch(err=>{\n           console.log('error' ,err.response)\n        }) \n    }\n\n    tablainicio(){\n      this.setState({inicioArea:true})\n      this.setState({tablarenderArea:false})\n    }\n    tablaArea(){\n      this.setState({inicioArea:false})\n      this.setState({tablarenderArea:true})\n    }\n    onClear = ()=>{\n        this.setState = {\n           area:'' \n        }       \n    }\n    onChangeInput = (e) =>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    onChangeInput2 = (e) => {\n      const { id, value } = e.target;  \n      console.log(\"e\",e.target)   \n      this.setState({\n        [id]: value\n      });\n    };\n    editar(id){ \n      this.setState({ArrayArea:id})  \n      this.setState({\n        id_areaUpdate:id.id_area,\n        nombreAreaUpdate:id.nombreArea,\n        nomeclaturaUpdate:id.nomeclatura,\n        numSerieUpdate:id.numSerie  \n      })\n          this.setState({\n            modal:!this.state.modal\n          });   \n    }\n    toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }   \n\n     onSubmitBtn =(e)=>{\n         let area = this.state.area.toUpperCase()\n         let nomeclatura = this.state.nomeclatura.toUpperCase()\n         let numSerie = this.state.numSerie\n        if(area){  \n            axios({\n           url: API,\n           method: \"post\",\n           data: {\n             query: `\n                     mutation{\n                        signupCatArea(data:\"${[nomeclatura,numSerie,area]}\"){  \n                         message\n                          } \n                     }\n                     `\n           }\n         })\n           .then((response) => { \n               console.log(\"esto es response\",response)       \n            if(response.data.data.signupCatArea.message === \"registro exitoso\"){\n                swal({              \n               title: \"\", \n               text:\"Registro exitoso!\",              \n               icon: \"success\",\n               button:false,\n               timer: 1500\n             });  \n             this.setState({area:[],nomeclatura:[],numSerie:[]})     \n             setTimeout(function(){\n              window.location.reload()\n               }, 1500);     \n           }else{\n            swal({\n               title:\"Error!\",\n               text: \"Algo salio mal, intentalo nuevamente\",\n               icon: \"error\",\n               button:false\n             }); \n           }          \n           }).catch((err) => {\n             console.log(\"error\", err.response);\n           });     \n     \n         }else{\n            swal({\n             title:\"Notificación del sistema\",\n             text: \"Por favor llene los campos obligatorios *\",\n             icon: \"warning\",             \n             button:false\n           }); \n         }        \n       };\n\n       onSubmitBtn2 = (e) => {\n        e.preventDefault(); \n        let id_areaUpdate = this.state.id_areaUpdate\n        let nombreAreaUpdate = this.state.nombreAreaUpdate.toUpperCase();\n        let nomeclaturaUpdate = this.state.nomeclaturaUpdate.toUpperCase();\n        let numSerieUpdate = this.state.numSerieUpdate\n         if( nombreAreaUpdate ){\n           axios({\n          url: API,\n          method: \"post\",\n          data: {\n            query: `\n             mutation{\n              updateArea(data:\"${[id_areaUpdate,nomeclaturaUpdate,numSerieUpdate,nombreAreaUpdate]}\"){ \n               message\n            } \n        }\n        `\n          }\n        })     \n          .then((response) => {   \n            if(response.data.data.updateArea.message===\"actualizacion exitosa\"){\n              swal({\n                title:\"\",\n                text:\"Los datos se actualizarón correctamente\",\n                icon:\"success\",\n                buttons:false,\n                timer:1000\n              })\n              this.setState({modal:false})\n              setTimeout(function(){\n                window.location.reload()\n                 }, 1500);\n            }  else{\n              swal({\n                title:\"\",\n                text:\"Algo salió mal.\",\n                icon:\"error\",\n                buttons:false,\n                timer:1000\n              })\n            }         \n            \n          })\n          .catch((err) => {\n            console.log(\"error\", err.response);           \n          }); \n        } else{\n          swal({\n            title:\"\",\n            text:\"Algo salió mal, por favor complete todos los campos  requeridos *\",\n            icon:\"warning\",\n            buttons:false,\n            timer:1000\n          })\n        }    \n       };\n\n\n\n    \n    render(){ \n      const { Option } = Select;\n      let formulario;\n      let tablaFormulario;\n      let botonEditar;  \n      let modal;\n\n      const options={ \n        filterType:\"drowpdawn\",\n        responsive: \"stacked\",\n        print:false,\n        download:false,\n        viewColumns:false,\n        filter: false,\n        elevation:1,\n        selectableRows:\"none\",\n        rowsPerPage:5,\n        textLabels:{\n        body: {\n          noMatch: \"Lo sentimos, no se encontraron registros coincidentes\",\n          toolTip: \" Ordenar\",\n          columnHeaderTooltip: column => `Sort for ${column.label}`\n        },\n        pagination: {\n          next: \"Página siguiente\",\n          previous: \"Página anterior\",\n          rowsPerPage: \"Filas por página:\",\n          displayRows: \"de\",\n        },\n        toolbar: {\n          search: \"Buscar\",\n          downloadCsv: \" Descargar CSV\",\n          print: \"Imprimir \",\n          viewColumns: \"Ver columnas\",\n          filterTable: \"Tabla de filtros\",\n        },\n        filter: {\n          all: \"Todos\",\n          title: \"FILTROS\",\n          reset: \"RESET\",\n        },\n        viewColumns: {\n          title: \"Mostrar columnas\",\n          titleAria: \"Mostrar / Ocultar columnas de tabla\",\n        },\n        selectedRows: {\n          text: \"fila (s) seleccionadas\",\n          delete: \"Eliminar\",\n          deleteAria: \"Eliminar filas seleccionadas\",\n        },      \n      }        \n      } \n\n let titulo=<h5><strong>ÁREA DE ADSCRIPCIÓN CEAV</strong></h5>\n     if(this.state.inicioArea === true){\n        formulario =         \n        <Card title={titulo} style={{marginTop:\"2%\", width:\"95%\",marginLeft:\"3%\"}}>\n          <Form\n              labelCol={{ span: 4 }}\n              wrapperCol={{ span: 14 }}\n              layout=\"horizontal\"\n            >\n            <Form onSubmitBtn={this.onSubmitBtn}>\n              <Form.Item label=\"NOMBRE DEL ÁREA\" required >\n                <Input style={{ width: 400 }}  id=\"area\" name=\"area\" type=\"text\" onChange={this.onChangeInput} value={this.state.area}/>\n              </Form.Item>  \n             <Form.Item label=\"NOMECLARUTA\">\n                <Input style={{ width: 400 }}  id=\"nomeclatura\" name=\"nomeclatura\" type=\"text\" onChange={this.onChangeInput} value={this.state.nomeclatura}/>\n              </Form.Item>   \n              <Form.Item label=\"NUMERO DE SERIE\">\n                <Input style={{ width: 400 }}  id=\"numSerie\" name=\"numSerie\" type=\"text\" onChange={this.onChangeInput} value={this.state.numSerie}/>\n              </Form.Item>   \n              <Form.Item>\n                <div className=\"text-center\">                   \n                <Button className='ant-btnText' onClick={e=>this.onSubmitBtn()} style={{ background: \"#73d13d\" }}>GUARDAR</Button> &nbsp;&nbsp;&nbsp;\n                <Button className='ant-btnText' onClick={e=>this.onClear()} style={{background:\"#40a9ff\"}} >CANCELAR</Button>\n                </div> \n              </Form.Item>\n            </Form>\n          </Form> \n        </Card>\n      }         \n\n      const columns = [\"ID\",\"NOMECLATURA\",\"NO. SERIE\",\"ÁREA\",\"EDITA\"]\n      let data = this.state.tablaArea.map((rows)=>{\n         botonEditar = <div>            \n                <Button type=\"link\" shape=\"circle\" size=\"large\"\n                  onClick={(e)=>this.editar(rows)}\n                  >\n                <MDBIcon icon=\"user-edit\" />\n                </Button>\n              </div>\n          return([rows.id_area,rows.nomeclatura,rows.numSerie,rows.nombreArea,botonEditar])\n        })\n        if(this.state.tablarenderArea === true){\n        tablaFormulario=\n        <Card>\n          <MUIDataTable    \n           title={\"ÁREAS REGISTRADAS\" }\n           data={data}\n           columns={columns}\n           options={options}\n           />\n        </Card>\n        }\n\n         modal=\n        <div>\n          <MDBContainer>\n        <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n          <MDBModalHeader toggle={this.toggle}>EDITAR ÁREA</MDBModalHeader>\n          <MDBModalBody>\n          <MDBContainer>\n          <form onSubmit={this.onSubmitBtn2}>\n              <MDBRow>\n                <MDBCol style={{marginTop:\"5%\", marginBotton:\"5%\"}}>\n                {/* <form onSubmit={this.onSubmitBtn2}> */}\n            <Row>\n              <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>NOMECLATURA:</strong></label>\n                         <input                                              \n                              id=\"nomeclaturaUpdate\"\n                              type=\"text\"\n                              name=\"nomeclaturaUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.nomeclaturaUpdate}\n                              className=\"form-control\"                                                      \n                              />\n                \n                </Col>\n                <Col xs=\"6\">       \n              <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>NO. SERIE: </strong></label>\n                          <input                                          \n                                id=\"numSerieUpdate\"\n                                type=\"text\"\n                                name=\"numSerieUpdate\"\n                                onChange={this.onChangeInput2}\n                                value={this.state.numSerieUpdate }\n                                className=\"form-control\"                                \n                                />\n              </Col> \n            </Row>\n            <Row>\n            <Col xs=\"12\">\n            <div className=\"form-group\">       \n                <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>NOMBRE ÁREA: </strong></label>\n                            <textarea\n                              className=\"form-control\"\n                              id=\"nombreAreaUpdate\"\n                              type=\"text\"\n                              name=\"nombreAreaUpdate\"\n                              rows=\"5\"\n                              value={this.state.nombreAreaUpdate }\n                              onChange={this.onChangeInput2}\n                            />\n            </div>\n              </Col>            \n            </Row>   \n           \n            <div style={{marginTop:\"3%\"}} className=\"text-center\">\n                <MDBBtn outline color=\"secondary\"  type=\"submit\" size='sm'>GUARDAR</MDBBtn>\n                <MDBBtn outline color=\"danger\" size='sm' onClick={e=>this.toggle()} >CANCELAR</MDBBtn>\n            </div>    \n          </MDBCol>\n        </MDBRow>\n        </form>\n      </MDBContainer>             \n          </MDBModalBody>\n          <MDBModalFooter>\n          </MDBModalFooter>\n        </MDBModal>\n      </MDBContainer>\n        </div>\n        return(\n          <React.Fragment>   \n          <Menu mode=\"horizontal\" className='menuSide' defaultSelectedKeys={['mail']}>\n            <Menu.Item key=\"mail\"  icon={<EditOutlined />} onClick={e=>this.tablainicio()}>\n            REGISTRAR ÁREA\n            </Menu.Item>\n            <Menu.Item key=\"mail\" icon={<IssuesCloseOutlined />} onClick={e=>this.tablaArea()}>\n            INF. ÁREA\n            </Menu.Item>\n            </Menu>\n            {formulario}\n            {tablaFormulario}\n            {modal}\n          </React.Fragment>\n        )\n    }\n    \n}export default catalogoArea","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpCatPersonal.js",["287"],"import React, {Component} from 'react'\nimport { Card,Form , Input, Button,Select,Menu  } from 'antd'\nimport axios from 'axios';\nimport {API} from '../Graphql/Graphql'\nimport swal from 'sweetalert';\nimport MUIDataTable from \"mui-datatables\";\nimport { Row,Col,Form as form } from 'reactstrap'\nimport { EditOutlined,IssuesCloseOutlined} from '@ant-design/icons';\nimport './sideNavAdmin.css'\nimport { MDBBtn,MDBContainer,MDBModal,MDBModalBody,MDBModalHeader,MDBModalFooter,MDBRow,MDBCol,MDBIcon } from 'mdbreact';\n\nclass catalogoPersonal extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n          tipoPersonal:'',\n          tablaPersonal:[],\n          inicioPersonal:true,\n          tablarenderPersonal:false,\n          ArrayPersonal:[],\n          modal:false,\n          id_personalUpdate:\"\",\n          tipoPersonalUpdate:\"\"\n        }\n        this.toggle = this.toggle.bind(this)\n    }\n\n    componentDidMount(){ \n      axios({\n        url:API,\n        method:'post',\n        data:{\n          query:`\n            query{   \n              getTablaPersonal(data:\"${[]}\"){\n                id_personal\n                tipoPersonal\n                message\n                } \n            }\n            `  }           \n         })\n       .then(response => { \n          this.setState({tablaPersonal:response.data.data.getTablaPersonal}) \n        })\n        .catch(err=>{\n           console.log('error' ,err.response)\n        })     \n  }\n\n    onClear = ()=>{\n        this.setState = {\n            tipoPersonal:''\n\n        }       \n    }\n    tablainicio(){\n     this.setState({inicioPersonal:true})\n     this.setState({tablarenderPersonal:false})\n    }\n    tablaPersonal(){\n     this.setState({inicioPersonal:false})\n     this.setState({tablarenderPersonal:true})\n    }   \n\n    onChangeInput = (e) =>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    onChangeInput2 = (e) => {\n      const { id, value } = e.target;  \n      this.setState({\n        [id]: value\n      });\n    };\n    editar(id){ \n      this.setState({ArrayPersonal:id})  \n      this.setState({\n        id_personalUpdate:id.id_personal,\n        tipoPersonalUpdate:id.tipoPersonal\n      })\n          this.setState({\n            modal:!this.state.modal\n          });   \n    }\n    toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }   \n\n     onSubmitBtn =(e)=>{\n         let tipoPersonal = this.state.tipoPersonal.toUpperCase()      \n        if(tipoPersonal){  \n            axios({\n           url: API,\n           method: \"post\",\n           data: {\n             query: `\n                     mutation{\n                        signupCatPersonal(data:\"${[tipoPersonal]}\"){  \n                         message\n                          } \n                     }\n                     `\n           }\n         })\n           .then((response) => { \n            if(response.data.data.signupCatPersonal.message === \"registro exitoso\"){\n                swal({              \n               title: \"\", \n               text:\"Registro exitoso!\",              \n               icon: \"success\",\n               button:false,\n               timer: 1500\n             });  \n             this.setState({tipoPersonal:[]})  \n             setTimeout(function(){\n              window.location.reload()\n               }, 1500);        \n           }else{\n            swal({\n               title:\"Error!\",\n               text: \"Algo salio mal, intentalo nuevamente\",\n               icon: \"error\",\n               button:false\n             }); \n           }          \n           }).catch((err) => {\n             console.log(\"error\", err.response);\n           });     \n     \n         }else{\n            swal({\n             title:\"Notificación del sistema\",\n             text: \"Por favor llene los campos obligatorios *\",\n             icon: \"warning\",             \n             button:false\n           }); \n         }        \n       };\n\n       onSubmitBtn2 = (e) => {\n        e.preventDefault(); \n        let id_personalUpdate = this.state.id_personalUpdate\n        let tipoPersonalUpdate = this.state.tipoPersonalUpdate.toUpperCase();\n         if( tipoPersonalUpdate ){\n           axios({\n          url: API,\n          method: \"post\",\n          data: {\n            query: `\n             mutation{\n              updatePersonal(data:\"${[id_personalUpdate,tipoPersonalUpdate]}\"){ \n               message\n            } \n        }\n        `\n          }\n        })     \n          .then((response) => {   \n            if(response.data.data.updatePersonal.message===\"actualizacion exitosa\"){\n              swal({\n                title:\"\",\n                text:\"Los datos se actualizarón correctamente\",\n                icon:\"success\",\n                buttons:false,\n                timer:1000\n              })\n              this.setState({modal:false})\n              setTimeout(function(){\n                window.location.reload()\n                 }, 1500);\n            }  else{\n              swal({\n                title:\"\",\n                text:\"Algo salió mal, por favor complete todos los campos  nuevamente\",\n                icon:\"warning\",\n                buttons:false,\n                timer:1000\n              })\n            }         \n            \n          })\n          .catch((err) => {\n            console.log(\"error\", err.response);           \n          }); \n        }      \n       };\n\n    \n    render(){ \n      const { Option } = Select;\n      let formulario;\n      let tablaFormulario;\n      let botonEditar;  \n      let modal;\n\n      const options={ \n        filterType:\"drowpdawn\",\n        responsive: \"stacked\",\n        print:false,\n        download:false,\n        viewColumns:false,\n        filter: false,\n        elevation:1,\n        selectableRows:\"none\",\n        rowsPerPage:5,\n        textLabels:{\n        body: {\n          noMatch: \"Lo sentimos, no se encontraron registros coincidentes\",\n          toolTip: \" Ordenar\",\n          columnHeaderTooltip: column => `Sort for ${column.label}`\n        },\n        pagination: {\n          next: \"Página siguiente\",\n          previous: \"Página anterior\",\n          rowsPerPage: \"Filas por página:\",\n          displayRows: \"de\",\n        },\n        toolbar: {\n          search: \"Buscar\",\n          downloadCsv: \" Descargar CSV\",\n          print: \"Imprimir \",\n          viewColumns: \"Ver columnas\",\n          filterTable: \"Tabla de filtros\",\n        },\n        filter: {\n          all: \"Todos\",\n          title: \"FILTROS\",\n          reset: \"RESET\",\n        },\n        viewColumns: {\n          title: \"Mostrar columnas\",\n          titleAria: \"Mostrar / Ocultar columnas de tabla\",\n        },\n        selectedRows: {\n          text: \"fila (s) seleccionadas\",\n          delete: \"Eliminar\",\n          deleteAria: \"Eliminar filas seleccionadas\",\n        },      \n      }        \n      } \n       let titulo=<h5><strong>TIPO PERSONAL CEAV</strong></h5>\n      if(this.state.inicioPersonal === true){\n        formulario =         \n        <Card title={titulo} style={{marginTop:\"2%\", width:\"95%\",marginLeft:\"3%\"}}>\n             <Form\n      labelCol={{ span: 4 }}\n      wrapperCol={{ span: 14 }}\n      layout=\"horizontal\"\n    >\n  <Form onSubmitBtn={this.onSubmitBtn}>\n      <Form.Item label=\" TIPO DE PERSONAL\" required >\n        <Input style={{ width: 400 }} placeholder=\"\" id=\"tipoPersonal\" name=\"tipoPersonal\" type=\"text\" onChange={this.onChangeInput} value={this.state.tipoPersonal}/>\n      </Form.Item>     \n      <Form.Item>\n        <div className=\"text-center\">                   \n                <Button className='ant-btnText' onClick={e=>this.onSubmitBtn()} style={{ background: \"#73d13d\" }}>GUARDAR</Button> &nbsp;&nbsp;&nbsp;\n                <Button className='ant-btnText' onClick={e=>this.onClear()} style={{background:\"#40a9ff\"}} >CANCELAR</Button>\n            </div> \n        </Form.Item>\n  </Form>\n    </Form> \n        </Card>\n        }\n\n          const columns = [\"ID\",\"TIPO PERSONAL\",\"EDITAR\"]\n          // let botonEditar;\n      \n\n          let data = this.state.tablaPersonal.map((rows)=>{\n            botonEditar = <div>            \n            <Button type=\"link\" shape=\"circle\" size=\"large\"\n              onClick={(e)=>this.editar(rows)}\n              >\n            <MDBIcon icon=\"user-edit\" />\n            </Button>\n          </div>\n            return([rows.id_personal,rows.tipoPersonal,botonEditar])\n          })\n          if(this.state.tablarenderPersonal === true){\n            tablaFormulario=      \n              <Card>\n                <MUIDataTable    \n                title={\"TIPO PERSONAL CEAV\" }\n                data={data}\n                columns={columns}\n                options={options}\n                />\n              </Card>    \n          }\n\n          modal=\n          <div>\n            <MDBContainer>\n          <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n            <MDBModalHeader toggle={this.toggle}>EDITAR PERSONAL</MDBModalHeader>\n            <MDBModalBody>\n            <MDBContainer>\n            <form onSubmit={this.onSubmitBtn2}>\n                <MDBRow>\n                  <MDBCol style={{marginTop:\"5%\", marginBotton:\"5%\"}}>\n                  {/* <form onSubmit={this.onSubmitBtn2}> */}\n              <Row>\n                <Col xs=\"6\">\n                <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>PERSONAL:</strong></label>\n                           <input                                              \n                                id=\"tipoPersonalUpdate\"\n                                type=\"text\"\n                                name=\"tipoPersonalUpdate\"\n                                onChange={this.onChangeInput2}\n                                value={this.state.tipoPersonalUpdate}\n                                className=\"form-control\"                                \n                                />\n                  \n                  </Col>                 \n              </Row>  \n              <div style={{marginTop:\"3%\"}} className=\"text-center\">\n                  <MDBBtn outline color=\"secondary\" type=\"submit\" size='sm'>GUARDAR</MDBBtn>\n                  <MDBBtn outline color=\"danger\"size='sm' onClick={e=>this.toggle()}>CANCELAR</MDBBtn>                   \n              </div>\n            </MDBCol>\n          </MDBRow>\n          </form>\n        </MDBContainer>             \n            </MDBModalBody>\n            <MDBModalFooter>\n            </MDBModalFooter>\n          </MDBModal>\n        </MDBContainer>\n          </div>\n        \n        return(\n      <React.Fragment>   \n      <Menu mode=\"horizontal\" className='menuSide' defaultSelectedKeys={['mail']}>\n        <Menu.Item key=\"mail\"  icon={<EditOutlined />} onClick={e=>this.tablainicio()}>\n        REGISTRAR PERSONAL\n        </Menu.Item>\n        <Menu.Item key=\"mail\" icon={<IssuesCloseOutlined />} onClick={e=>this.tablaPersonal()}>\n        INF. DEL PERSONAL\n        </Menu.Item>\n        </Menu>\n        {formulario}\n        {tablaFormulario}\n        {modal}\n      </React.Fragment>\n        )\n    }\n    \n}export default catalogoPersonal","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpCatOficinas.js",["288","289","290"],"import React, {Component} from 'react'\nimport { Card,Form as form, Input, Button, Select, Form,Menu } from 'antd'\nimport axios from 'axios';\nimport {API} from '../Graphql/Graphql'\nimport swal from 'sweetalert';\nimport {Row,Col} from 'reactstrap'\nimport {MDBBtn,MDBRow,MDBCol,MDBIcon,MDBContainer,MDBModal,MDBModalHeader,MDBModalBody,MDBModalFooter } from 'mdbreact'\nimport MUIDataTable from \"mui-datatables\";\nimport { MailOutlined,EditOutlined,IssuesCloseOutlined } from '@ant-design/icons';\nimport './sideNavAdmin.css'\n\nclass catalogoOficina extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            nombreOficina:'',\n            calle:'',\n            numExterior:'',\n            numInterior:'',\n            ciudad:'',\n            colonia:'',\n            estado:'',\n            cp:'',\n            telefono1:'',\n            telefono2:'',\n            telefono3:'',\n            telefono4:'',\n            telefono5:'',\n            referencia:'',\n            tablaOficina:[],\n            inicioOficina:true,\n            tablarenderOficina:false,\n            ArrayOficina:[],\n            modal:false,\n            id_oficinaUpdate:\"\",\n            nombreOficinaUpdate:\"\",\n            calleUpdate:\"\",\n            numExteriorUpdate:\"\",\n            numInteriorUpdate:\"\",\n            ciudadUpdate:\"\",\n            coloniaUpdate:\"\",            \n            estadoUpdate:\"\",\n            cpUpdate:\"\",\n            telefono1Update:\"\",\n            telefono2Update:\"\",\n            telefono3Update:\"\",\n            telefono4Update:\"\",\n            telefono5Update:\"\",\n            referenciaUpdate:\"\",\n            tablaEstados:[]\n        }\n        this.onClear = this.onClear.bind(this)\n        this.handleChange1 = this.handleChange1.bind(this)\n        this.toggle = this.toggle.bind(this)\n    }\n\n    componentDidMount(){ \n      axios({\n        url:API,\n        method:'post',\n        data:{\n          query:`\n            query{   \n              getTablaOficinas(data:\"${[]}\"){\n                id_oficina\n                nombreOficina\n                calle\n                numExterior\n                numInterior\n                colonia\n                codigoPostal\n                ciudad\n                estado\n                telefono1\n                telefono2\n                telefono1\n                telefono3\n                telefono1\n                telefono4\n                telefono5\n                referencia\n                message\n                } \n            }\n            `  }           \n         })\n       .then(response => { \n      console.log(\"Data oficinas\",response.data.data.getTablaOficinas)\n          this.setState({tablaOficina:response.data.data.getTablaOficinas}) \n        })\n        .catch(err=>{\n           console.log('error' ,err.response)\n        }) \n        axios({\n          url:API,\n          method:'post',\n          data:{\n            query:`\n              query{   \n                getTablaEstados(data:\"${[]}\"){\n                  id_entidad\n                  nombreEntidad\n                  message\n                  } \n              }\n              `  }           \n           })\n         .then(response => { \n        console.log(\"Data getTablaEstados\",response.data.data.getTablaEstados)\n            this.setState({tablaEstados:response.data.data.getTablaEstados}) \n          })\n          .catch(err=>{\n             console.log('error' ,err.response)\n          }) \n\n      }\n\n    onClear = ()=>{\n        this.setState = {\n            nombreOficina:'',\n            calle:'',\n            numExterior:'',\n            numInterior:'',\n            ciudad:'',\n            colonia:'',            \n            estado:'',\n            cp:'',\n            telefono1:'',\n            telefono2:'',\n            telefono3:'',\n            telefono4:'',\n            telefono5:'',\n            referencia:'',\n            tablaOficina:[],\n            inicioOficina:true,\n            tablarenderOficina:false\n        }       \n    }\n    tablainicio(){\n     this.setState({inicioOficina:true})\n     this.setState({tablarenderOficina:false})\n    }\n    tablaOficina(){\n      this.setState({inicioOficina:false})\n      this.setState({tablarenderOficina:true})\n    }\n\n    onChangeInput = (e) =>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    onChangeInput2 = (e) =>{\n      const {id,value} = e.target;\n      this.setState({\n          [id]:value\n      })\n  }\n  editar(id){ \n    this.setState({ArrayOficina:id})  \n    this.setState({\n      id_oficinaUpdate:id.id_oficina,\n      nombreOficinaUpdate:id.nombreOficina,\n      calleUpdate:id.calle,\n      numExteriorUpdate:id.numExterior,\n      numInteriorUpdate:id.numInterior,\n      coloniaUpdate:id.colonia,\n      cpUpdate:id.codigoPostal,\n      ciudadUpdate:id.ciudad,\n      estadoUpdate:id.estado,\n      telefono1Update:id.telefono1,\n      telefono2Update:id.telefono2,\n      telefono3Update:id.telefono3,\n      telefono4Update:id.telefono4,\n      telefono5Update:id.telefono5,\n      referenciaUpdate:id.referencia\n    })\n        this.setState({\n          modal:!this.state.modal\n        });   \n  }\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }  \n\n     handleChange1(value){\n      console.log(\"esto es value de estado\",value)\n         this.setState({estado:value})\n     }\n\n     onSubmitBtn =(e)=>{\n       let nombreOficina = this.state.nombreOficina.toUpperCase()\n         let calle = this.state.calle.toUpperCase()\n         let numExterior = this.state.numExterior\n         let numInterior = this.state.numInterior\n         let ciudad = this.state.ciudad.toUpperCase()\n         let colonia = this.state.colonia.toUpperCase()\n        //  let municipio = this.state.municipio\n         let estado = this.state.estado\n         let codigoPostal = this.state.cp\n         let telefono1 = this.state.telefono1\n         let telefono2 = this.state.telefono2\n         let telefono3 = this.state.telefono3\n         let telefono4 = this.state.telefono4\n         let telefono5 = this.state.telefono5\n         let referencia = this.state.referencia\n       console.log(\"data a insertar\",nombreOficina,calle,ciudad,colonia,estado,codigoPostal,telefono1)\n        \n        if(nombreOficina && calle && numExterior && ciudad && colonia  && estado && codigoPostal,telefono1){  \n            axios({\n           url: API,\n           method: \"post\",\n           data: {\n             query: `\n                     mutation{\n                      signupCatOficina(data:\"${[nombreOficina,calle,numExterior,numInterior,colonia,codigoPostal,ciudad,estado,telefono1,telefono2,telefono3,telefono4,telefono5,referencia]}\"){  \n                         message\n                          } \n                     }\n                     `\n           }\n         })\n           .then((response) => { \n               console.log(\"esto es response\",response)       \n            if(response.data.data.signupCatOficina.message === \"registro exitoso\"){\n                swal({              \n               title: \"\", \n               text:\"Registro exitoso!\",              \n               icon: \"success\",\n               button:false,\n               timer: 1500\n             });  \n             this.setState({nombreOficina:[],calle:[],numExterior:[],numInterior:[],ciudad:[],colonia:[],municipio:[],estado:[],cp:[],telefono1:[],telefono2:[],telefono3:[],telefono4:[],telefono5:[],referencia:[]})          \n             setTimeout(function(){\n              window.location.reload()\n               }, 1500);\n            }else{\n            swal({\n               title:\"Error!\",\n               text: \"Algo salio mal, intentalo nuevamente\",\n               icon: \"error\",\n               button:false\n             }); \n           }          \n           }).catch((err) => {\n             console.log(\"error\", err.response);\n           });     \n     \n         }else{\n            swal({\n             title:\"Notificación del sistema\",\n             text: \"Por favor llene los campos obligatorios *\",\n             icon: \"warning\",             \n             button:false\n           }); \n         }        \n       };\n\n      onSubmitBtn2 = (e) => {\n        e.preventDefault(); \n        let id_oficinaUpdate = this.state.id_oficinaUpdate;\n        let nombreOficinaUpdate = this.state.nombreOficinaUpdate.toUpperCase();\n        let calleUpdate = this.state.calleUpdate.toUpperCase();\n        let numExteriorUpdate = this.state.numExteriorUpdate;\n        let numInteriorUpdate = this.state.numInteriorUpdate;\n        let coloniaUpdate = this.state.coloniaUpdate.toUpperCase();\n        let cpUpdate = this.state.cpUpdate;\n        let ciudadUpdate = this.state.ciudadUpdate;\n        let estadoUpdate = this.state.estadoUpdate;\n        let telefono1Update = this.state.telefono1Update;\n        let telefono2Update = this.state.telefono2Update;\n        let telefono3Update = this.state.telefono3Update;\n        let telefono4Update = this.state.telefono4Update;\n        let telefono5Update = this.state.telefono5Update;\n        let referenciaUpdate = this.state.referenciaUpdate.toUpperCase()\n\n     \n         if( nombreOficinaUpdate && calleUpdate && numExteriorUpdate  && coloniaUpdate && cpUpdate && ciudadUpdate && estadoUpdate && telefono1Update){\n           axios({\n          url: API,\n          method: \"post\",\n          data: {\n            query: `\n             mutation{\n              updateOficina(data:\"${[id_oficinaUpdate,nombreOficinaUpdate,calleUpdate,numExteriorUpdate,numInteriorUpdate,coloniaUpdate,cpUpdate,ciudadUpdate,estadoUpdate,telefono1Update,telefono2Update,telefono3Update,telefono4Update,telefono5Update,referenciaUpdate]}\"){ \n               message\n            } \n        }\n        `\n          }\n        })     \n          .then((response) => {   \n            if(response.data.data.updateOficina.message===\"actualizacion exitosa\"){\n              swal({\n                title:\"\",\n                text:\"Los datos se actualizarón correctamente\",\n                icon:\"success\",\n                buttons:false,\n                timer:1000\n              })\n              this.setState({modal:false})\n              setTimeout(function(){\n                window.location.reload()\n                 }, 1500);\n            }  else{\n              swal({\n                title:\"\",\n                text:\"Algo salió mal, por favor complete todos los campos  nuevamente\",\n                icon:\"warning\",\n                buttons:false,\n                timer:1000\n              })\n            }         \n            \n          })\n          .catch((err) => {\n            console.log(\"error\", err.response);           \n          }); \n        }      \n       };\n\n    \n    render(){ \n      const { Option } = Select;\n      let formulario;\n      let tablaFormulario;\n      let botonEditar;  \n      let modal;\n        \n        const options={ \n          filterType:\"drowpdawn\",\n          responsive: \"stacked\",\n          print:false,\n          download:false,\n          viewColumns:false,\n          filter: false,\n          elevation:1,\n          selectableRows:\"none\",\n          rowsPerPage:5,\n          textLabels:{\n          body: {\n            noMatch: \"Lo sentimos, no se encontraron registros coincidentes\",\n            toolTip: \" Ordenar\",\n            columnHeaderTooltip: column => `Sort for ${column.label}`\n          },\n          pagination: {\n            next: \"Página siguiente\",\n            previous: \"Página anterior\",\n            rowsPerPage: \"Filas por página:\",\n            displayRows: \"de\",\n          },\n          toolbar: {\n            search: \"Buscar\",\n            downloadCsv: \" Descargar CSV\",\n            print: \"Imprimir \",\n            viewColumns: \"Ver columnas\",\n            filterTable: \"Tabla de filtros\",\n          },\n          filter: {\n            all: \"Todos\",\n            title: \"FILTROS\",\n            reset: \"RESET\",\n          },\n          viewColumns: {\n            title: \"Mostrar columnas\",\n            titleAria: \"Mostrar / Ocultar columnas de tabla\",\n          },\n          selectedRows: {\n            text: \"fila (s) seleccionadas\",\n            delete: \"Eliminar\",\n            deleteAria: \"Eliminar filas seleccionadas\",\n          },      \n        }        \n        }\n      let titulo=<h5><strong>OFICINAS DE CEAV</strong></h5>    \n      if(this.state.inicioOficina === true){\n        formulario=         \n        <Card title={titulo} style={{marginTop:\"2%\", width:\"95%\",marginLeft:\"3%\"}}>\n             <Form\n      labelCol={{ span: 4 }}\n      wrapperCol={{ span: 14 }}\n      layout=\"horizontal\"\n    >\n    <Form onSubmitBtn={this.onSubmitBtn}>\n    <MDBRow>      \n    <MDBCol>\n      <Form.Item label=\"NOMBRE OFICINA\" required >\n        <Input style={{ width: 400 }} placeholder=\"Angel Urraza #728\" id=\"nombreOficina\" name=\"nombreOficina\" type=\"text\" onChange={this.onChangeInput} value={this.state.nombreOficina}/>\n      </Form.Item>\n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"CALLE\" required >\n        <Input style={{ width: 400 }} placeholder=\"Angel Urraza #728\" id=\"calle\" name=\"calle\" type=\"text\" onChange={this.onChangeInput} value={this.state.calle}/>\n      </Form.Item>\n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"NO. EXTERIOR\" required >\n        <Input style={{ width: 400 }} placeholder=\"Angel Urraza #728\" id=\"numExterior\" name=\"numExterior\" type=\"text\" onChange={this.onChangeInput} value={this.state.numExterior}/>\n      </Form.Item>\n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"NO. INTERIOR\"  >\n        <Input style={{ width: 400 }} placeholder=\"Angel Urraza #728\" id=\"numInterior\" name=\"numInterior\" type=\"text\" onChange={this.onChangeInput} value={this.state.numInterior}/>\n      </Form.Item>\n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"CODIGO POSTAL\" required>\n      <Input style={{ width: 400 }} placeholder=\"C.P\" id=\"cp\" name=\"cp\" type=\"number\" onChange={this.onChangeInput} value={this.state.cp} />\n      </Form.Item> \n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"COLONIA\" required>\n      <Input style={{ width: 400 }} placeholder=\"centro\" id=\"colonia\" name=\"colonia\" type=\"text\" onChange={this.onChangeInput} value={this.state.colonia} />\n      </Form.Item>\n      </MDBCol> \n        <MDBCol>\n        <Form.Item label=\"ESTADO\" required>\n                  <Select\n                   onChange={this.handleChange1}\n                   showSearch\n                   style={{ width: 400 }}\n                   optionFilterProp=\"children\"\n                   filterOption={(input, option) =>\n                   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                   }\n                   filterSort={(optionA, optionB) =>\n                   optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                   }   \n                  >\n                      { this.state.tablaEstados.map(rows=>{\n                          return (\n                          <option value  = {rows.nombreEntidad}>{rows.nombreEntidad}</option>\n                          )\n                        })}\n                  </Select>\n               </Form.Item>\n        </MDBCol>      \n        <MDBCol>\n      <Form.Item label=\"MUNICIPIO/ALCALDIA\" required>\n      <Input style={{ width: 400 }} placeholder=\"cuidad de mexico\" id=\"ciudad\" name=\"ciudad\" type=\"text\" onChange={this.onChangeInput} value={this.state.ciudad} />\n      </Form.Item>\n      </MDBCol>      \n        <MDBCol>\n      <Form.Item label=\"TELEFONO 1\" required>\n      <Input style={{ width: 400 }} placeholder=\"5510002000\" id=\"telefono1\" name=\"telefono1\" type=\"number\" onChange={this.onChangeInput} value={this.state.telefono1} />\n      </Form.Item> \n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"TELEFONO 2\" >\n      <Input style={{ width: 400 }} placeholder=\"5510002000\" id=\"telefono2\" name=\"telefono2\" type=\"number\" onChange={this.onChangeInput} value={this.state.telefono2} />\n      </Form.Item> \n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"TELEFONO 3\" >\n      <Input style={{ width: 400 }} placeholder=\"5510002000\" id=\"telefono3\" name=\"telefono3\" type=\"number\" onChange={this.onChangeInput} value={this.state.telefono3} />\n      </Form.Item> \n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"TELEFONO 4\" >\n      <Input style={{ width: 400 }} placeholder=\"5510002000\" id=\"telefono4\" name=\"telefono4\" type=\"number\" onChange={this.onChangeInput} value={this.state.telefono4} />\n      </Form.Item>\n      </MDBCol>\n      <MDBCol> \n      <Form.Item label=\"TELEFONO 5\" >\n      <Input style={{ width: 400 }} placeholder=\"5510002000\" id=\"telefono5\" name=\"telefono5\" type=\"number\" onChange={this.onChangeInput} value={this.state.telefono5} />\n      </Form.Item> \n      </MDBCol>\n      <MDBCol>\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleFormControlTextarea1\">REFERENCIA DEL DOMICILIO</label>\n        <textarea\n          className=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          // rows=\"\"\n          onChange={this.onChangeInput}\n          value={this.state.referencia}\n          style={{ width: 400 }}\n        />\n      </div>\n      </MDBCol> \n        <div className=\"text-center\" style={{marginTop:\"3%\"}} >                   \n          <Button className='ant-btnText' onClick={e=>this.onSubmitBtn()} style={{ background: \"#73d13d\" }}>GUARDAR</Button> &nbsp;&nbsp;&nbsp;\n          <Button className='ant-btnText' onClick={e=>this.onClear()} style={{background:\"#40a9ff\"}} >CANCELAR</Button>\n        </div> \n      <MDBCol>\n      </MDBCol>\n      </MDBRow> \n    </Form>\n    </Form> \n        </Card>\n      }\n\n      const columns = [\"ID\",\"OFICINA\",\"CALLE\",\"NO. EXTERIOR\",\"C.P.\",\"MUNICIPIO/ALCALDIA\",\"ESTADO\",\"EDITAR\"]\n      let data = this.state.tablaOficina.map((rows)=>{ \n        botonEditar = <div>            \n        <Button type=\"link\" shape=\"circle\" size=\"large\"\n          onClick={(e)=>this.editar(rows)}\n          >\n        <MDBIcon icon=\"user-edit\" />\n        </Button>\n      </div>\n        return([rows.id_oficina,rows.nombreOficina,rows.calle,rows.numExterior,rows.codigoPostal,rows.ciudad,rows.estado,botonEditar])\n      })\n\n      if(this.state.tablarenderOficina === true){\n      tablaFormulario=\n        <Card>\n        <MUIDataTable    \n        title={\"OFICINAS REGISTRADAS\" }\n        data={data}\n        columns={columns}\n        options={options}\n        />\n      </Card>\n      }\n      modal=\n      <div>\n        <MDBContainer >\n      <MDBModal isOpen={this.state.modal} toggle={this.toggle} size=\"lg\" >\n        <MDBModalHeader toggle={this.toggle}>EDITAR OFICINA</MDBModalHeader>\n        <MDBModalBody>\n        <MDBContainer>\n        <form onSubmit={this.onSubmitBtn2}>\n          <Row>\n            <Col xs=\"6\">\n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>NOMBRE OFICINA:</strong></label>\n                       <input                                              \n                            id=\"nombreOficinaUpdate\"\n                            type=\"text\"\n                            name=\"nombreOficinaUpdate\"\n                            onChange={this.onChangeInput2}\n                            value={this.state.nombreOficinaUpdate}\n                            className=\"form-control\"                            \n                            />\n              \n              </Col>\n              <Col xs=\"6\">       \n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>CALLE:</strong></label>\n                        <input                                          \n                              id=\"calleUpdate\"\n                              type=\"text\"\n                              name=\"calleUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.calleUpdate }\n                              className=\"form-control\"                              \n                              />\n            </Col> \n          </Row>\n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>NO.EXTERIOR:</strong></label>\n              <input                                          \n                              id=\"numExteriorUpdate\"\n                              type=\"text\"\n                              name=\"numExteriorUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.numExteriorUpdate }\n                              className=\"form-control\"                              \n                              />\n            </Col>       \n            <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>NO.INTERIOR:</strong></label>\n              <input                                          \n                              id=\"numInteriorUpdate\"\n                              type=\"text\"\n                              name=\"numInteriorUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.numInteriorUpdate }\n                              className=\"form-control\"                              \n                              />\n            </Col>          \n          </Row> \n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>CODIGO POSTAL:</strong></label>\n              <input                                          \n                              id=\"cpUpdate\"\n                              type=\"number\"\n                              name=\"cpUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.cpUpdate }\n                              className=\"form-control\"                              \n                              />\n            </Col> \n            <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>COLONIA:</strong></label>\n              <input                                          \n                              id=\"numInteriorUpdate\"\n                              type=\"text\"\n                              name=\"numInteriorUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.coloniaUpdate }\n                              className=\"form-control\"                              \n                              />\n            </Col>  \n            </Row>  \n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" ><strong>ESTADO:</strong></label>\n               <select\n                    className=\"browser-default custom-select\"\n                    type=\"text\"\n                    name=\"estadoUpdate\"\n                    id=\"estadoUpdate\"\n                    onChange={this.onChangeInput2}\n                    value={this.state.estadoUpdate}\n                >\n                 { this.state.tablaEstados.map(rows=>{\n                          return (\n                          <option value  = {rows.nombreEntidad}>{rows.nombreEntidad}</option>\n                          )\n                        })}\n                </select> \n            </Col>  \n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>MUNICIPIO/ALCALDIA: </strong></label>\n              <input                                          \n                              id=\"numExteriorUpdate\"\n                              type=\"text\"\n                              name=\"numExteriorUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.ciudadUpdate }\n                              className=\"form-control\"                                                           \n                              />\n            </Col>       \n        \n          </Row> \n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>TELEFONO 1</strong></label>\n              <input                                          \n                              id=\"telefono1Update\"\n                              type=\"text\"\n                              name=\"telefono1Update\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.telefono1Update }\n                              className=\"form-control\"                              \n                              />\n            </Col>       \n            <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>TELEFONO 2</strong></label>\n              <input                                          \n                              id=\"telefono2Update\"\n                              type=\"text\"\n                              name=\"telefono2Update\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.telefono2Update }\n                              className=\"form-control\"                              \n                              />\n            </Col>          \n          </Row>\n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>TELEFONO 3 </strong></label>\n              <input                                          \n                              id=\"telefono3Update\"\n                              type=\"text\"\n                              name=\"telefono3Update\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.telefono3Update }\n                              className=\"form-control\"                              \n                              />\n            </Col>       \n            <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>TELEFONO 4</strong></label>\n              <input                                          \n                              id=\"telefono4Update\"\n                              type=\"text\"\n                              name=\"telefono4Update\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.telefono4Update }\n                              className=\"form-control\"                              \n                              />\n            </Col>          \n          </Row>\n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>TELEFONO 5 </strong></label>\n              <input                                          \n                              id=\"telefono5Update\"\n                              type=\"text\"\n                              name=\"telefono5Update\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.telefono5Update }\n                              className=\"form-control\"                              \n                              />\n            </Col>\n            <MDBCol>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlTextarea1\">REFERENCIA DEL DOMICILIO</label>\n              <textarea\n                className=\"form-control\"\n                id=\"referenciaUpdate\"\n                name=\"referenciaUpdate\"               \n                onChange={this.onChangeInput2}\n                value={this.state.referenciaUpdate}                \n              />\n            </div>\n          </MDBCol>\n         </Row>        \n            <div  className=\"text-center\">\n              <MDBBtn outline color=\"secondary\" size='sm' type=\"submit\"> GUARDAR </MDBBtn>\n              <MDBBtn outline color=\"danger\" size='sm' onClick={e=>this.toggle()}>CANCELAR</MDBBtn>                   \n            </div>\n      </form>\n    </MDBContainer>  \n           \n        </MDBModalBody>\n        <MDBModalFooter>\n        </MDBModalFooter>\n      </MDBModal>\n    </MDBContainer>\n      </div>\n        return(\n              <React.Fragment>   \n              <Menu mode=\"horizontal\" className='menuSide' defaultSelectedKeys={['mail']}>\n                <Menu.Item key=\"mail\"  icon={<EditOutlined />} onClick={e=>this.tablainicio()}>\n                REGISTRAR OFICINA\n                </Menu.Item>\n                <Menu.Item key=\"mail\" icon={<IssuesCloseOutlined />} onClick={e=>this.tablaOficina()}>\n                INF. OFICINAS\n                </Menu.Item>\n                </Menu>\n                {formulario}\n                {tablaFormulario}\n                {modal}\n              </React.Fragment>\n        )\n    }\n    \n}export default catalogoOficina","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\sideNavAdmin.js",["291","292","293","294","295","296","297","298","299","300","301","302","303"],"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\loginAdmin.js",["304","305","306","307"],"import axios from 'axios'\nimport React,{Component} from 'react'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n import'bootstrap-css-only/css/bootstrap.min.css'; \nimport'mdbreact/dist/css/mdb.css';\nimport { MDBCol, MDBBtn, MDBCardBody, MDBView, MDBIcon,MDBRow} from 'mdbreact';\nimport { DialogUtility } from '@syncfusion/ej2-popups';\nimport { Form,Row} from 'reactstrap';\n// import './login.css'\nimport {API} from '../Graphql/Graphql'\nimport { Card } from 'antd';\nimport { Modal, Button as Boton , Input} from 'antd';\nimport {  UserOutlined} from '@ant-design/icons';\nimport swal from 'sweetalert';\nimport 'antd/dist/antd.css'\nimport Logo from '../imagen/CEAVlogo.png'\nimport './loginAdmin.css'\n\n\nclass loginAdmin extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            user:\"\",\n            pass:\"\",\n            isModalVisible:false\n          }\n    }\n     componentWillMount(){\n        // localStorage.removeItem(\"id_empleado\")\n        // localStorage.removeItem(\"nombre\")\n        // localStorage.removeItem(\"apellidos\")\n        // localStorage.removeItem(\"correo\")\n        // localStorage.removeItem(\"telefono\")\n        // localStorage.removeItem(\"ext\")\n        // localStorage.removeItem(\"area\")\n        // localStorage.removeItem(\"puesto\")\n        // localStorage.removeItem(\"ubicacion\")\n        localStorage.removeItem(\"TokenAdmin\")\n    }\n    \n    onChangeInput =(e)=>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    \n    onSubmitBtn = (e)=>{        \n        e.preventDefault();            \n        axios({\n            url:API,\n            method:'post',\n            data:{\n                query:`\n                query{\n                    loginDataAdmin(data:\"${[this.state.user,this.state.pass]}\"){\n                        id_admin\n                        nombre\n                        apellidos\n                        correo                   \n                        message     \n                        token                            \n                   } \n                }\n                `\n            }   \n             }).then(response=>{\n                 console.log(\"esto es response\",response)\n                 let mensaje = response.data.data.loginDataAdmin.message\n                if(mensaje ===\"login exitoso\"){                    \n                    localStorage.setItem(\"id_admin\",response.data.data.loginDataAdmin.id_admin)                    \n                    localStorage.setItem(\"nombre\",response.data.data.loginDataAdmin.nombre)   \n                    localStorage.setItem(\"apellidos\",response.data.data.loginDataAdmin.apellidos) \n                    localStorage.setItem(\"correo\",response.data.data.loginDataAdmin.correo)                                  \n                    localStorage.setItem(\"TokenAdmin\",response.data.data.loginDataAdmin.token)\n\n                    this.props.history.push(\"/sideNavAdmin\")\n                      \n                      \n                    swal({\n                        title:\"Bienvenido!\",\n                        text:\"Inicio de sesión exitoso\",\n                        buttons: false,\n                      }); \n                   \n                }\n                else if(response.data.data.loginDataAdmin.message === \"usuario o contraseña incorrecto\"){  \n                    swal({                        \n                        text: \"Email o Contraseña incorrecto\",\n                        icon:\"error\",\n                        buttons: false,\n                      }\n                     );                  \n                }else {\n                         \n                    swal({\n                        text:\"Algo salio mal,por favor vuelva a intentarlo\",\n                        icon:\"warning\",\n                        buttons: false,\n                      });            \n                }\n             })\n             .catch(err=>{\n                 console.log('error',err.response)\n             })\n             this.setState({user:\"\"})\n             this.setState({pass:\"\"})\n    }\n    showModal = () => {\n          this.setState({isModalVisible:true});\n      };\n    \n      handleOk = () => {\n        this.setState({isModalVisible:false});\n      };\n    \n      handleCancel = () => {\n        this.setState({isModalVisible:false});\n      };\n\n     render(){\n         let modal;\n         if(this.state.isModalVisible === true){\n             modal = <Modal title=\"Aviso!\" visible={this.state.isModalVisible} onOk={this.handleOk} onCancel={this.handleCancel}>\n             <h6>Inicio de sesión exitoso</h6>\n           </Modal>\n         }\n         let titulo = <center><strong><h3>Iniciar sesión</h3></strong></center>\n         return(\n            <React.Fragment>\n            \n                <div id=\"apppagesLoginAdmin\">\n                <MDBView>\n                    <MDBRow style={{marginTop:\"5%\"}}>\n                        <MDBCol md=\"6\" >\n                         <img src={Logo} className=\"logo\"></img>\n                        </MDBCol>\n                        <MDBCol md=\"4\"  >\n                            {/* <center> */}\n                        <Card title = {titulo} style={{width:\"80%\"}}  >       \n                <div className=\"h5 text-center \" > \n                  <MDBIcon far icon=\"user-circle\"   size='4x' style= {{color:\"#626263\"}} />  \n                </div>                          \n                <MDBCardBody>  \n                <Form onSubmit={this.onSubmitBtn}>\n                <center>\n                    <MDBCol md=\"12\">                     \n                    <label>Correo</label>\n                        <Input  prefix={<UserOutlined />} \n                        id=\"user\"\n                        type=\"email\"\n                        name=\"user\"\n                        placeholder=\"Correo\"\n                        onChange={this.onChangeInput}\n                        value={this.state.user}\n                        /> \n                      </MDBCol>                       \n                      <MDBCol md=\"12\"  style= {{marginTop:\"5%\"}}> \n                         <label>Contraseña</label>                        \n                        <Input.Password placeholder=\"Contraseña\"  \n                          id=\"pass\"\n                          type=\"password\"\n                          name=\"contrasena\"\n                          onChange={this.onChangeInput}\n                          value={this.state.pass}\n                         /> \n                       </MDBCol>        \n                       </center>\n                        <div style={{marginTop:\"5%\"}}>\n                        <center>\n                        <MDBBtn  color='success' type=\"submit\" size=\"sm\">\n                        iniciar sesión                            \n                        </MDBBtn>\n                        </center>\n                        </div>  \n                </Form> \n                </MDBCardBody>\n                 <center>¿No recuerdas tu contraseña?<a href=\"/passwordUpdate\">Cambiar contraseña</a> </center>\n            </Card>\n            {/* </center> */}\n                        </MDBCol>\n                    </MDBRow> \n                </MDBView>\n            </div>    \n            {modal}  \n           \n        </React.Fragment>\n        )\n    }\n}\nexport default loginAdmin","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpCatRoles.js",["308","309","310","311","312","313","314","315"],"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\resolvers\\checkTokenAdmin.js",["316"],"export default ()=>{\n    if(localStorage.getItem(\"TokenAdmin\")){\n        return true\n\n    }else{\n        return false\n\n    }\n}","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\resolvers\\checkTokenEmpleados.js",["317"],"export default ()=>{\n    if(localStorage.getItem(\"TokenEmpleados\")){\n        return true\n\n    }else{\n        return false\n\n    }\n}","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\signUpCatPuesto.js",["318"],"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\panelConexion\\panelConexion.js",["319","320","321","322","323","324"],"import React,{Component} from 'react'\nimport {Button, Card} from 'antd'\nimport { MDBContainer, MDBRow,MDBView} from \"mdbreact\";\nimport { MDBBtn,MDBCard,MDBCardBody,MDBCardImage,MDBCardTitle,MDBCardText,MDBCol } from 'mdbreact';\nimport img1 from '../imagen/imgRolAdmin.svg'\nimport img2 from '../imagen/imgAdmin.svg'\nimport img3 from '../imagen/imgUser.svg'\n// import I from '../imagen';\nimport { UserOutlined, RightOutlined} from '@ant-design/icons';\n\n\n class PanelConexion extends Component{\n     constructor(props){\n        super(props)\n        this.state = {\n\n        }\n     }\n\n     direccionamientoAdmin(){\n        this.props.history.push(\"/\")\n     }\n     direccionamientoUser(){\n        this.props.history.push(\"/\")\n     }\n     direccionamientoRegistro(){\n        this.props.history.push(\"/\")\n     }\n     render(){\n         let formulario=\n          <div>\n               <MDBContainer style ={{ marginTop:\"10%\"}}>\n                <MDBRow>\n                  \n                    <MDBCol md=\"4\">\n                    <a href='/'>\n                    <MDBCol >\n                    <MDBView hover zoom>              \n                    <MDBCard  >\n                        <MDBCardImage className=\"img-fluid\" src={img1}\n                        waves />\n                        <MDBCardBody>\n                        <MDBCardTitle><center>Registrar Administrador</center></MDBCardTitle>\n                        <div className=\"text-center\">\n                        <MDBBtn size=\"sm\" onClick={this.direccionamientoRegistro} >Ir <RightOutlined /></MDBBtn>\n                        </div>\n                        </MDBCardBody>\n                    </MDBCard>\n                    </MDBView>\n                    </MDBCol> \n                    </a>                  \n                    </MDBCol>\n\n                    <MDBCol md=\"4\">\n                    <a href='/'>\n                    <MDBCol >\n                    <MDBView hover zoom>    \n                        <MDBCard>\n                        <MDBCardImage className=\"img-fluid\" src={img2}\n                            waves />\n                        <MDBCardBody>\n                            <MDBCardTitle><center>Portal Administración</center></MDBCardTitle>\n                            <div className=\"text-center\">\n                        <MDBBtn size=\"sm\" onClick={this.direccionamientoAdmin} >Ir <RightOutlined /></MDBBtn>\n                        </div>\n                        </MDBCardBody>\n                        </MDBCard>\n                        </MDBView>    \n                    </MDBCol>\n                    </a>\n                    </MDBCol>\n                    <MDBCol md=\"4\">\n                    <a href=''>\n                    <MDBCol >\n                    <MDBView hover zoom>    \n                    <MDBCard>\n                        <img className=\"img-fluid\" src={img3} />\n                        <MDBCardBody>\n                        <MDBCardTitle><center>Portal Usuarios</center></MDBCardTitle>\n                        <div className=\"text-center\">\n                        <MDBBtn size=\"sm\" onClick={this.direccionamientoUser} >Ir <RightOutlined /></MDBBtn>\n                        </div>\n                        </MDBCardBody>\n                    </MDBCard>\n                    </MDBView>    \n                    </MDBCol>\n                    </a>   \n                    </MDBCol>\n                    <MDBCol>  \n                    </MDBCol>\n                </MDBRow>\n                </MDBContainer>\n          </div>\n         return(\n             <React.Fragment>\n               {formulario}\n            </React.Fragment>\n         )\n     }\n }export default PanelConexion","D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\changePassword.js",["325","326","327","328","329","330","331","332","333","334","335"],"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\Graphql\\Graphql.js",[],"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\adminCEAV\\tablaDataEmpleados.js",["336","337"],"D:\\Users\\lizbeth.cuevas\\OneDrive - CEAV\\Documentos\\RESPALDO DE PROYECTO\\proyect_CEAV2022-master\\src\\components\\usuarioCEAV\\dashboard.js",["338","339","340","341","342","343","344","345","346","347","348","349"],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\index.js",[],["350","351"],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\App.js",[],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\routes.js",["352","353","354"],"import React,{Component} from 'react';\nimport {BrowserRouter as Router , Switch ,Route, Redirect} from 'react-router-dom'\nimport './App.css';\n\nimport login from './components/usuarioCEAV/login'\nimport passwordUpdate from './components/usuarioCEAV/changePAssword'\nimport singUp from './components/adminCEAV/signUpEmpleado'\nimport checkTokenEmpleados from './components/resolvers/checkTokenEmpleados';\nimport side from './components/usuarioCEAV/sidenav'\nimport miCuenta from './components/usuarioCEAV/miCuenta'\n\nimport panelConexion from './components/panelConexion/panelConexion'\n\nimport dataEmpleados from './components/usuarioCEAV/tablaDirectorio'\n\n\n//  *****************DIRECTORIO***********\nimport Dashboard from './components/usuarioCEAV/dashboard';\n// *******PANEL ADMIN *************\nimport checkTokenAdmin from './components/resolvers/checkTokenAdmin';\nimport loginAdmin from './components/adminCEAV/loginAdmin'\nimport sideNavAdmin from './components/adminCEAV/sideNavAdmin'\nimport catalogoArea from './components/adminCEAV/signUpCatAreas'\nimport catalogoOficinas from './components/adminCEAV/signUpCatOficinas'\nimport catalogoPersonal from './components/adminCEAV/signUpCatPersonal'\nimport catalogoRoles from './components/adminCEAV/signUpCatRoles'\nimport catalogoPuesto from './components/adminCEAV/signUpCatPuesto';\nimport pass from './components/adminCEAV/changePassword'\nimport notificaciones from './components/adminCEAV/fechaNotificaciones'\n \nclass App extends Component{\n\nrender(){\n  const PrivateRouteEmpleados = ({component:Component,...rest})=>(\n    <Route {...rest  } render={(props) => checkTokenEmpleados() === true ? <Component {...props}/> : <Redirect to=\"/\"/>}/>\n      )\n      const PrivateRouteAdmin = ({component:Component,...rest})=>(\n        <Route {...rest  } render={(props) => checkTokenAdmin() === true ? <Component {...props}/> : <Redirect to=\"/admin\"/>}/>\n          )\n \n\n  return(\n    <Router>\n    <Switch>\n      <main>  \n\n       <Route exact path = \"/\" component={Dashboard}/>  \n       \n       <Route exact path={\"/admin\"} component={loginAdmin}/>\n       <PrivateRouteEmpleados exact path={\"/empleados\"} component={dataEmpleados}/>    \n       <PrivateRouteEmpleados exact path={\"/side\"} component={side}/>\n       <PrivateRouteEmpleados exact path={\"/miCuenta\"} component={miCuenta}/>\n       <PrivateRouteEmpleados exact path = \"/passwordUpdate\" component={passwordUpdate}/> \n       {/* <Route exact path={\"/panel\"} component={panelConexion}/> */}\n       {/* <Route exact path={\"/panelPrueba\"} component={panelPrueba}/> */}\n       \n       <PrivateRouteAdmin exact path={\"/sideNavAdmin\"} component={sideNavAdmin}/>\n       <PrivateRouteAdmin exact path={\"/area\"} component={catalogoArea}/>\n       <PrivateRouteAdmin exact path={\"/oficinas\"} component={catalogoOficinas}/>\n       <PrivateRouteAdmin exact path={\"/personal\"} component={catalogoPersonal}/>\n       <PrivateRouteAdmin exact path={\"/puesto\"} component={catalogoPuesto}/>\n       <PrivateRouteAdmin exact path={\"/roles\"} component={catalogoRoles}/>\n       <PrivateRouteAdmin exact path={\"/cambioPass\"} component={pass}/>\n       <PrivateRouteAdmin exact path= \"/notificaciones\" component={notificaciones}/>\n\n       {/* <Route exact path={\"/sideNavAdmin\"} component={sideNavAdmin}/> */}\n      </main>  \n       </Switch>          \n       </Router>\n  )\n}\n}\nexport default App","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\sidenav.js",["355","356","357","358","359","360","361","362","363","364","365","366","367","368","369","370"],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\login.js",["371","372","373","374"],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\miCuenta.js",["375","376","377","378","379","380","381"],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\dashboard.js",["382","383","384","385","386","387","388","389","390","391","392","393"],"import React, {Component} from 'react'\nimport { Layout, Menu, Avatar,Select } from 'antd';\nimport { MDBIcon,MDBRow,MDBCol } from 'mdbreact';\nimport './sidenav.css'\nimport { FcGoogle } from \"react-icons/fc\";\nimport imagenCEAV from '../imagen/CEAVlogo.png'\n  import axios from 'axios'\nimport {API} from '../Graphql/Graphql';\nimport MUIDataTable from \"mui-datatables\";\nimport {  Card, Form as form} from 'antd';\nimport ceav from '../imagen/logo.png'\n\nconst { Header, Content, Footer} = Layout;\n\nclass Dashboard extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n          tablaInicio:true,\n          tablaEmpledos:[],\n          modal:false,\n          tablaInicio:true,\n          dataID:[],\n          nombreR:\"\",\n          apellidosR:\"\",\n          correoR:\"\",\n          telefono:\"\",\n          nombre:\"\",\n\n\n        }\n\n    } \n    async componentWillMount(){\n        await axios({\n               url:API,\n               method:'post',\n               data:{\n                 query:`\n                   query{   \n                    getTablaDataEmpleadoUser(data:\"${[]}\"){\n                        id_empleado\n                        nombre\n                        apellidos        \n                        correo\n                        numEmpleado\n                        telefono\n                        ext\n                        dependencia\n                        statusEmpleado\n                        departamento\n                        nombreArea\n                        puesto               \n                        message\n                       } \n                   }\n                   `  }           \n                })\n              .then(response => { \n                 this.setState({tablaEmpledos:response.data.data.getTablaDataEmpleadoUser}) \n               })\n               .catch(err=>{\n                  console.log('error' ,err.response)\n               })    \n       }\n\n    render(){ \n        let tablaInicio;\n        let data1;\n        let array=[];\n\n        const options={ \n            filterType:\"drowpdawn\",\n            responsive: \"stacked\",\n            print:false,\n            download:false,\n            viewColumns:false,\n            elevation:0,\n            selectableRows:\"none\",\n            textLabels:{\n            body: {\n              noMatch: \"Lo sentimos, no se encontraron registros coincidentes\",\n              toolTip: \" Ordenar\",\n              columnHeaderTooltip: column => `Sort for ${column.label}`\n            },\n            pagination: {\n              next: \"Página siguiente\",\n              previous: \"Página anterior\",\n              rowsPerPage: \"Filas por página:\",\n              displayRows: \"de\",\n            },\n            toolbar: {\n              search: \"Buscar\",\n              downloadCsv: \" Descargar CSV\",\n              print: \"Imprimir \",\n              viewColumns: \"Ver columnas\",\n              filterTable: \"Tabla de filtros\",\n            },\n            filter: {\n              all: \"Todos\",\n              title: \"FILTROS\",\n              reset: \"RESET\",\n            },\n            viewColumns: {\n              title: \"Mostrar columnas\",\n              titleAria: \"Mostrar / Ocultar columnas de tabla\",\n            },\n            selectedRows: {\n              text: \"fila (s) seleccionadas\",\n              delete: \"Eliminar\",\n              deleteAria: \"Eliminar filas seleccionadas\",\n            },      \n          }        \n          } \n\n          const columns = [\"NO. EMPLEADO\",\"NOMBRE\",\"APELLIDOS\",\"CORREO\",\"EXT.\",\"PUESTO\",\"UNIDAD ADMINISTRATIVA\"];  \n          this.state.tablaEmpledos.map((rows)=>{ \n           if(rows.statusEmpleado ===\"true\") {\n             array.push(rows)\n           }\n         })\n              data1 = array.map((rows)=>{                \n                    return([rows.numEmpleado,rows.nombre,rows.apellidos,rows.correo,rows.ext,rows.puesto,rows.nombreArea,])\n  \n                  })           \n\n     tablaInicio = \n     <center>\n          <div style={{ width:'95%'}}>            \n            <Card  style={{marginTop:\"1%\",width:\"90%\"}}>  \n            <MUIDataTable                \n            title={\"DIRECTORIO CEAV\" }\n            data={data1}\n            columns={columns}\n            options={options}\n            />\n            </Card>             \n            </div> \n            </center>\n           \n\n        return(\n            <React.Fragment>   \n              <nav class=\"navbar navbar-light bg-light\" >\n                <a class=\"navbar-brand\">\n                    <img src={imagenCEAV} width=\"100\" height=\"40\" class=\"d-inline-block align-top\" alt=\"\" />   \n                </a>\n              </nav>\n\n      <Content>\n        {tablaInicio}  \n      </Content>\n      <Footer className='footer main'>\n      <center>\n      <FcGoogle />&nbsp;<a href=\"https://www.gob.mx/ceav\" target=\"_blank\">www.gob.mx/ceav</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n      <MDBIcon/><img src={ceav} width=\"30\" height=\"30\"  alt=\"\" /><a href=\"http://intranet/\" target=\"_blank\">intranet/</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n     </center>\n      </Footer>  \n            </React.Fragment> \n        )\n    }\n}export default Dashboard","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\tablaDirectorio.js",["394","395","396","397","398","399","400","401","402","403","404","405","406","407","408","409","410","411"],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\loginAdmin.js",["412","413","414","415"],"import axios from 'axios'\nimport React,{Component} from 'react'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n import'bootstrap-css-only/css/bootstrap.min.css'; \nimport'mdbreact/dist/css/mdb.css';\nimport { MDBCol, MDBBtn, MDBCardBody, MDBView, MDBIcon,MDBRow} from 'mdbreact';\nimport { DialogUtility } from '@syncfusion/ej2-popups';\nimport { Form,Row} from 'reactstrap';\n// import './login.css'\nimport {API} from '../Graphql/Graphql'\nimport { Card } from 'antd';\nimport { Modal, Button as Boton , Input} from 'antd';\nimport {  UserOutlined} from '@ant-design/icons';\nimport swal from 'sweetalert';\nimport 'antd/dist/antd.css'\nimport Logo from '../imagen/CEAVlogo.png'\nimport './loginAdmin.css'\n\n\nclass loginAdmin extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            user:\"\",\n            pass:\"\",\n            isModalVisible:false\n          }\n    }\n     componentWillMount(){\n        // localStorage.removeItem(\"id_empleado\")\n        // localStorage.removeItem(\"nombre\")\n        // localStorage.removeItem(\"apellidos\")\n        // localStorage.removeItem(\"correo\")\n        // localStorage.removeItem(\"telefono\")\n        // localStorage.removeItem(\"ext\")\n        // localStorage.removeItem(\"area\")\n        // localStorage.removeItem(\"puesto\")\n        // localStorage.removeItem(\"ubicacion\")\n        localStorage.removeItem(\"TokenAdmin\")\n    }\n    \n    onChangeInput =(e)=>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    \n    onSubmitBtn = (e)=>{        \n        e.preventDefault();            \n        axios({\n            url:API,\n            method:'post',\n            data:{\n                query:`\n                query{\n                    loginDataAdmin(data:\"${[this.state.user,this.state.pass]}\"){\n                        id_admin\n                        nombre\n                        apellidos\n                        correo                   \n                        message     \n                        token                            \n                   } \n                }\n                `\n            }   \n             }).then(response=>{\n                 let mensaje = response.data.data.loginDataAdmin.message\n                if(mensaje ===\"login exitoso\"){                    \n                    localStorage.setItem(\"id_admin\",response.data.data.loginDataAdmin.id_admin)                    \n                    localStorage.setItem(\"nombre\",response.data.data.loginDataAdmin.nombre)   \n                    localStorage.setItem(\"apellidos\",response.data.data.loginDataAdmin.apellidos) \n                    localStorage.setItem(\"correo\",response.data.data.loginDataAdmin.correo)                                  \n                    localStorage.setItem(\"TokenAdmin\",response.data.data.loginDataAdmin.token)\n                    this.props.history.push(\"/sideNavAdmin\")   \n                    swal({\n                        title:\"Bienvenido!\",\n                        text:\"Inicio de sesión exitoso\",\n                        buttons: false,\n                      }); \n                   \n                }\n                else if(response.data.data.loginDataAdmin.message === \"usuario o contraseña incorrecto\"){  \n                    swal({                        \n                        text: \"Email o Contraseña incorrecto\",\n                        icon:\"error\",\n                        buttons: false,\n                      }\n                     );                  \n                }else {\n                         \n                    swal({\n                        text:\"Algo salio mal,por favor vuelva a intentarlo\",\n                        icon:\"warning\",\n                        buttons: false,\n                      });            \n                }\n             })\n             .catch(err=>{\n                 console.log('error',err.response)\n             })\n             this.setState({user:\"\"})\n             this.setState({pass:\"\"})\n    }\n    showModal = () => {\n          this.setState({isModalVisible:true});\n      };\n    \n      handleOk = () => {\n        this.setState({isModalVisible:false});\n      };\n    \n      handleCancel = () => {\n        this.setState({isModalVisible:false});\n      };\n\n     render(){\n         let modal;\n         if(this.state.isModalVisible === true){\n             modal = <Modal title=\"Aviso!\" visible={this.state.isModalVisible} onOk={this.handleOk} onCancel={this.handleCancel}>\n             <h6>Inicio de sesión exitoso</h6>\n           </Modal>\n         }\n         let titulo = <center><strong><h3>Iniciar sesión</h3></strong></center>\n         return(\n            <React.Fragment>\n            \n                <div id=\"apppagesLoginAdmin\">\n                <MDBView>\n                    <MDBRow style={{marginTop:\"5%\"}}>\n                        <MDBCol md=\"6\" >\n                         <img src={Logo} className=\"logo\"></img>\n                        </MDBCol>\n                        <MDBCol md=\"4\"  >\n                            {/* <center> */}\n                        <Card title = {titulo} style={{width:\"80%\"}}  >       \n                <div className=\"h5 text-center \" > \n                  <MDBIcon far icon=\"user-circle\"   size='4x' style= {{color:\"#626263\"}} />  \n                </div>                          \n                <MDBCardBody>  \n                <Form onSubmit={this.onSubmitBtn}>\n                <center>\n                    <MDBCol md=\"12\">                     \n                    <label>Correo</label>\n                        <Input  prefix={<UserOutlined />} \n                        id=\"user\"\n                        type=\"email\"\n                        name=\"user\"\n                        placeholder=\"Correo\"\n                        onChange={this.onChangeInput}\n                        value={this.state.user}\n                        /> \n                      </MDBCol>                       \n                      <MDBCol md=\"12\"  style= {{marginTop:\"5%\"}}> \n                         <label>Contraseña</label>                        \n                        <Input.Password placeholder=\"Contraseña\"  \n                          id=\"pass\"\n                          type=\"password\"\n                          name=\"contrasena\"\n                          onChange={this.onChangeInput}\n                          value={this.state.pass}\n                         /> \n                       </MDBCol>        \n                       </center>\n                        <div style={{marginTop:\"5%\"}}>\n                        <center>\n                        <MDBBtn  color='success' type=\"submit\" size=\"sm\">\n                        iniciar sesión                            \n                        </MDBBtn>\n                        </center>\n                        </div>  \n                </Form> \n                </MDBCardBody>\n                 <center>¿No recuerdas tu contraseña?<a href=\"/passwordUpdate\">Cambiar contraseña</a> </center>\n            </Card>\n            {/* </center> */}\n                        </MDBCol>\n                    </MDBRow> \n                </MDBView>\n            </div>    \n            {modal}  \n           \n        </React.Fragment>\n        )\n    }\n}\nexport default loginAdmin","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\sideNavAdmin.js",["416","417","418","419","420","421","422","423","424","425","426","427"],"\nimport React,{Component} from 'react'\nimport { Layout,Menu } from 'antd';\nimport { DesktopOutlined,UsergroupAddOutlined } from '@ant-design/icons';\nimport axios from 'axios';\nimport {API} from '../Graphql/Graphql'\nimport TablaArea from './signUpCatAreas'\nimport TablaOficina from './signUpCatOficinas'\nimport TablaPersonal from './signUpCatPersonal'\n// import TablaPuesto from './signUpCatPuesto'\nimport TablaPuestos from './signUpCatPuesto'\nimport TablaRoles from './signUpCatRoles'\nimport TablaEmpleado from './signUpEmpleado'\nimport TablaChangepass from './changePassword';\nimport TablaDirectorio from './tablaDataEmpleados'\n// import\nimport { FcGoogle } from \"react-icons/fc\";\nimport { MDBIcon } from 'mdbreact'\nimport { GrGroup } from \"react-icons/gr\";\nimport { MenuUnfoldOutlined,MenuFoldOutlined ,SolutionOutlined,IdcardOutlined,BankOutlined } from '@ant-design/icons';\nimport './sideNavAdmin.css'\nimport imagenCEAV from '../imagen/CEAVlogo.png'\nimport tablaDataEmpleado from './tablaDataEmpleados';\nimport Fechanotificaciones  from './fechaNotificaciones'\nimport TablaBajas from './tablaDataBAjasEmpleado'\nimport ceav from '../imagen/logo.png'\n\nclass sideNavAdmin extends Component{\n    constructor(props){\n        super(props)\n        this.state={     \n            sideNavTablaDirectorio:true, \n            sideNavArea:false,\n            sideNavOficinas:false,\n            sideNavPersonal:false,\n            sideNavPuesto:false,\n            sideNavRoles:false,\n            sideNavEmpleados:false,\n            sideNavChangePass:false,\n            sideNavTablaDirectorio:true,\n            sideFechasNotificaciones:false,\n            sideTablaBajas:false,\n            collapsed:false, \n            tablaArea:[],\n            tablaOficina:[],\n            tablaPersonal:[],\n            tablaPuesto:[],\n            tablaEmpleados:[],\n            tablaDataEmpleados:[],\n            // fechaNotificaciones:[]\n           \n        }\n    }\n\n    toggle = () => {\n        this.setState({\n          collapsed: !this.state.collapsed,\n        });\n      };\n\n      sideNavTablaDirectorio(){\n        this.setState({sideNavTablaDirectorio:true})\n        this.setState({sideNavArea:false})\n        this.setState({sideNavOficinas:false})\n        this.setState({sideNavPersonal:false})\n        this.setState({sideNavPuesto:false})\n        this.setState({sideNavRoles:false})\n        this.setState({sideNavEmpleados:false})  \n        this.setState({sideNavChangePass:false})\n        this.setState({sideFechasNotificaciones:false})\n        this.setState({sideTablaBajas:false})\n\n      }       \n      sideNavArea(){\n        this.setState({sideNavTablaDirectorio:false})\n        this.setState({sideNavArea:true})\n        this.setState({sideNavOficinas:false})\n        this.setState({sideNavPersonal:false})\n        this.setState({sideNavPuesto:false})\n        this.setState({sideNavRoles:false})\n        this.setState({sideNavEmpleados:false})  \n        this.setState({sideNavChangePass:false}) \n        this.setState({sideFechasNotificaciones:false})\n        this.setState({sideTablaBajas:false})\n      }\n      sideNavOficinas(){\n        this.setState({sideNavTablaDirectorio:false})\n        this.setState({sideNavArea:false})\n        this.setState({sideNavOficinas:true})\n        this.setState({sideNavPersonal:false})\n        this.setState({sideNavPuesto:false})\n        this.setState({sideNavRoles:false})\n        this.setState({sideNavEmpleados:false})  \n        this.setState({sideNavChangePass:false})\n        this.setState({sideFechasNotificaciones:false})\n        this.setState({sideTablaBajas:false}) \n      }\n      sideNavPersonal(){\n        this.setState({sideNavTablaDirectorio:false})\n        this.setState({sideNavArea:false})\n        this.setState({sideNavOficinas:false})\n        this.setState({sideNavPersonal:true})\n        this.setState({sideNavPuesto:false})\n        this.setState({sideNavRoles:false})\n        this.setState({sideNavEmpleados:false})  \n        this.setState({sideNavChangePass:false}) \n        this.setState({sideFechasNotificaciones:false})     \n        this.setState({sideTablaBajas:false}) \n      }\n      sideNavPuesto(){\n        this.setState({sideNavTablaDirectorio:false})\n        this.setState({sideNavArea:false})\n        this.setState({sideNavOficinas:false})\n        this.setState({sideNavPersonal:false})\n        this.setState({sideNavPuesto:true})\n        this.setState({sideNavRoles:false})\n        this.setState({sideNavEmpleados:false})  \n        this.setState({sideNavChangePass:false}) \n        this.setState({sideFechasNotificaciones:false}) \n        this.setState({sideTablaBajas:false}) \n      }\n      sideNavRoles(){\n        this.setState({sideNavTablaDirectorio:false})\n        this.setState({sideNavArea:false})\n        this.setState({sideNavOficinas:false})\n        this.setState({sideNavPersonal:false})\n        this.setState({sideNavPuesto:false})\n        this.setState({sideNavRoles:true})\n        this.setState({sideNavEmpleados:false})  \n        this.setState({sideNavChangePass:false}) \n        this.setState({sideFechasNotificaciones:false}) \n        this.setState({sideTablaBajas:false})   \n      }\n      sideNavEmpleados(){\n        this.setState({sideNavTablaDirectorio:false})\n        this.setState({sideNavArea:false})\n        this.setState({sideNavOficinas:false})\n        this.setState({sideNavPersonal:false})\n        this.setState({sideNavPuesto:false})\n        this.setState({sideNavRoles:false})\n        this.setState({sideNavEmpleados:true})  \n        this.setState({sideNavChangePass:false}) \n        this.setState({sideFechasNotificaciones:false}) \n        this.setState({sideTablaBajas:false}) \n      }\n      sideNavChangePass(){\n        this.setState({sideNavTablaDirectorio:false})\n        this.setState({sideNavArea:false})\n        this.setState({sideNavOficinas:false})\n        this.setState({sideNavPersonal:false})\n        this.setState({sideNavPuesto:false})\n        this.setState({sideNavRoles:false})\n        this.setState({sideNavEmpleados:false})  \n        this.setState({sideNavChangePass:true})\n        this.setState({sideFechasNotificaciones:false})\n        this.setState({sideTablaBajas:false})\n      } \n      sideFechasNotificaciones(){\n        this.setState({sideNavTablaDirectorio:false})\n        this.setState({sideNavArea:false})\n        this.setState({sideNavOficinas:false})\n        this.setState({sideNavPersonal:false})\n        this.setState({sideNavPuesto:false})\n        this.setState({sideNavRoles:false})\n        this.setState({sideNavEmpleados:false})  \n        this.setState({sideNavChangePass:false})\n        this.setState({sideFechasNotificaciones:true})\n        this.setState({sideTablaBajas:false})\n      }\n      sideTablaBajas(){\n        this.setState({sideNavTablaDirectorio:false})\n        this.setState({sideNavArea:false})\n        this.setState({sideNavOficinas:false})\n        this.setState({sideNavPersonal:false})\n        this.setState({sideNavPuesto:false})\n        this.setState({sideNavRoles:false})\n        this.setState({sideNavEmpleados:false})  \n        this.setState({sideNavChangePass:false})\n        this.setState({sideFechasNotificaciones:false})\n        this.setState({sideTablaBajas:true})\n      }\n\n\n      cerrar(){\n        this.props.history.push(\"/\")\n      }\n    render(){\n        const { Header, Footer, Sider, Content } = Layout;\n\n        let tablaArea;\n        let tablaOficina;\n        let tablaPersonal;\n        let tablaPuesto;\n        let tablaRoles;\n        let tablaEmpleados;\n        let tablaChangePass;\n        let tablaDataEmpleado;\n        let tablaFechaNotificaciones\n        let tablaBajasEmpleados;\n\n         if(this.state.sideNavArea ===true){\n            tablaArea= \n            <div>\n           <TablaArea/>\n           </div>\n         }\n         if(this.state.sideNavOficinas === true){\n            tablaOficina=\n            <div>\n             <TablaOficina/>\n             </div>\n        }\n        if(this.state.sideNavPersonal === true){\n            tablaPersonal=\n            <div>\n            <TablaPersonal/>\n            </div>\n        }\n        if(this.state.sideNavPuesto === true){\n            tablaPuesto=\n            <div>\n            <TablaPuestos/>\n            </div>\n\n        }\n        if(this.state.sideNavRoles === true){\n            tablaRoles=\n            <div>\n            <TablaRoles/>\n            </div>\n        }\n        if(this.state.sideNavEmpleados === true){\n            tablaEmpleados=\n            <div>\n            <TablaEmpleado/>\n            </div>\n        }\n         if(this.state.sideNavChangePass === true){\n           tablaChangePass=\n           <div>\n             <TablaChangepass/>\n           </div>\n         }\n         if(this.state.sideNavTablaDirectorio === true){\n           tablaDataEmpleado=\n           <div>\n             <TablaDirectorio/>\n           </div>\n         } \n         if(this.state.sideFechasNotificaciones === true)\n         tablaFechaNotificaciones = \n         <div>\n          <Fechanotificaciones/>\n         </div>\n         if(this.state.sideTablaBajas === true){\n          tablaBajasEmpleados = \n          <div>\n            <TablaBajas/>\n          </div>\n         }\n \n\n        let menu=\n        <div>\n        <Menu theme=\"light\" mode=\"inline\" className='ant-menu1' defaultSelectedKeys={['1']}>       \n        <Menu.Item key=\"1\" onClick={e=>this.sideNavArea()} icon={<MDBIcon icon=\"chalkboard-teacher\" style={{ fontSize: '20px', color:'#000' }}/>}>           \n          ÁREAS              \n        </Menu.Item>\n        <Menu.Item key=\"2\"  onClick={e=>this.sideNavOficinas()} icon={<MDBIcon far icon=\"building\" style={{ fontSize: '20px', color: '#000' }}/>} >           \n          OFICINAS              \n        </Menu.Item>\n        <Menu.Item key=\"3\"  onClick={e=>this.sideNavPersonal()} icon={<MDBIcon icon=\"users-cog\" style={{ fontSize: '20px', color: '#000' }} />}>           \n          PERSONAL              \n        </Menu.Item>\n        <Menu.Item key=\"4\"  onClick={e=>this.sideNavPuesto()}  icon={<IdcardOutlined  style={{ fontSize: '25px', color: '#000' }} />}>           \n          PUESTOS              \n        </Menu.Item>\n        <Menu.Item key=\"5\" onClick={e=>this.sideNavRoles()}  icon={<UsergroupAddOutlined style={{ fontSize: '25px', color: '#000' }} />}>           \n         ROLES              \n        </Menu.Item>\n        <Menu.Item key=\"6\"  onClick={e=>this.sideNavEmpleados()} icon={<SolutionOutlined style={{ fontSize: '25px', color: '#000' }} />}>           \n         USUARIOS              \n        </Menu.Item>\n        {/* <Menu.Item key=\"7\"  onClick={e=>this.sideNavChangePass()} icon={<MDBIcon icon=\"key\"  style={{ fontSize: '20px', color: '#000' }} />}>           \n         restablecer contraseña              \n        </Menu.Item> */}\n        <Menu.Item key=\"8\"  onClick={e=>this.sideNavTablaDirectorio()} icon={<MDBIcon icon=\"pencil-alt\" style={{ fontSize: '20px', color: '#000' }} />}>           \n         EDITA USUARIO              \n        </Menu.Item>\n        <Menu.Item key=\"9\"  onClick={e=>this.sideFechasNotificaciones()} icon={<MDBIcon icon=\"user-clock\"  style={{ fontSize: '20px', color: '#000' }} />}>           \n         NOTIFICACIÓN ALTA Y BAJAS              \n        </Menu.Item>\n        <Menu.Item key=\"10\" onClick={e=>this.sideTablaBajas()} icon={<MDBIcon icon=\"user-alt-slash\"  style={{ fontSize: '20px', color: '#000' }} />}>           \n          LISTA DE BAJAS          \n        </Menu.Item>\n        <Menu.Item key=\"11\" onClick={e=>this.cerrar()} icon={<MDBIcon icon=\"door-open\" style={{ fontSize: '20px', color: '#000' }} />}>           \n          CERRAR SESIÓN            \n        </Menu.Item>\n        </Menu>\n        </div>\n        return(\n            <React.Fragment> \n                <Layout>     \n                <Sider trigger={null} className=\"site-layout-background\" collapsible collapsed={this.state.collapsed}>  \n                <center> \n                    <a>\n                    <img src={imagenCEAV} style={{width:\"70%\",marginTop:\"3%\"}} />\n                    </a>\n                    </center> \n                    <br></br>\n                    {menu}\n                </Sider>\n                <Layout className=\"site-layout\" >       \n                    <Header className=\"site-layout-background1\"  >   \n                    {React.createElement(this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined, {\n                        className: 'trigger',\n                        onClick: this.toggle,              \n                    }) } \n                    </Header>         \n                        {tablaArea}\n                        {tablaOficina}\n                        {tablaPersonal}\n                        {tablaPuesto}\n                        {tablaRoles}\n                        {tablaEmpleados}\n                        {tablaChangePass}\n                        {tablaDataEmpleado}\n                        {tablaFechaNotificaciones}\n                        {tablaBajasEmpleados}\n                </Layout>\n                </Layout>                \n                <Footer  className='footer main'>\n                <center>\n                <FcGoogle />&nbsp;<a href=\"https://www.gob.mx/ceav\" target=\"_blank\">www.gob.mx/ceav</a> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                <MDBIcon/><img src={ceav} width=\"30\" height=\"30\"  alt=\"\" /><a href=\"http://intranet/\" target=\"_blank\">intranet/</a>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                </center>\n                </Footer>\n                \n            </React.Fragment>\n        )\n        }\n}export default sideNavAdmin","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpEmpleado.js",["428","429","430","431","432"],"import React, {Component} from 'react'\nimport { Card,Form as form, Input, Button, Radio, Form } from 'antd'\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Select,Space,DatePicker } from 'antd';\nimport axios from 'axios';\nimport {API} from '../Graphql/Graphql'\nimport swal from 'sweetalert';\nimport {MDBBtn, MDBRow,MDBCol} from 'mdbreact'\n\nclass signUpEmpleado extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            nombre:'',\n            apellidos:'',\n            correo:'',\n            curp:'',\n            rfc:'',\n            numEmpleado:'',\n            telefono:'',\n            ext:'',\n            // dependencia:'',\n            fechaAlta:'',\n            fechaBaja:'',\n            fechaNotificacionAlta:'',\n            fechaNotificacionBaja:'',\n            pass:'',\n            departamento:'',\n            fk_oficionas:'',\n            fk_area:'',\n            fk_puesto:'',\n            fk_personal:'',\n            tablaArea:[],\n            tablaOficina:[],\n            // tablaPersonal:[],\n            tablaPuesto:[],\n            getTablaNivel:[],\n            fk_nivel:''\n        }\n         this.capturarFechaA = this.capturarFechaA.bind(this)\n         this.capturarFechaB = this.capturarFechaB.bind(this)\n         this.handleChange1 = this.handleChange1.bind(this)\n         this.handleChange2 = this.handleChange2.bind(this)\n         this.handleChange3 = this.handleChange3.bind(this)\n         this.handleChange4 = this.handleChange4.bind(this)\n         this.handleChange5 = this.handleChange5.bind(this)\n         this.fNotificacion = this.fNotificacion.bind(this)\n         this.fNotificacionB = this.fNotificacionB.bind(this)\n\n    }\n    componentDidMount(){\n      axios({\n        url:API,\n        method:'post',\n        data:{\n          query:`\n            query{   \n              getTablaPuesto(data:\"${[]}\"){\n                id_puesto\n                puesto\n                message\n                } \n            }\n            `  }           \n         })\n       .then(response => { \n          this.setState({tablaPuesto:response.data.data.getTablaPuesto}) \n        })\n        .catch(err=>{\n           console.log('error' ,err.response)\n        })  \n          axios({\n            url:API,\n            method:'post',\n            data:{\n              query:`\n                query{   \n                  getTablaOficinas(data:\"${[]}\"){\n                    id_oficina\n                    nombreOficina\n                    calle\n                    numExterior\n                    numInterior\n                    colonia\n                    codigoPostal\n                    ciudad\n                    estado\n                    telefono1\n                    telefono2\n                    telefono1\n                    telefono3\n                    telefono1\n                    telefono4\n                    telefono5\n                    referencia\n                    message\n                    } \n                }\n                `  }           \n             })\n           .then(response => {           \n              this.setState({tablaOficina:response.data.data.getTablaOficinas}) \n            })\n            .catch(err=>{\n               console.log('error' ,err.response)\n            })  \n            axios({\n              url:API,\n              method:'post',\n              data:{\n                query:`\n                  query{   \n                    getTablaArea(data:\"${[]}\"){\n                      id_area\n                      nomeclatura\n                      numSerie\n                      nombreArea\n                      message\n                      } \n                  }\n                  `  }           \n               })\n             .then(response => { \n                this.setState({tablaArea:response.data.data.getTablaArea}) \n              })\n              .catch(err=>{\n                 console.log('error' ,err.response)\n              }) \n    }\n\n    onChangeInput =(e)=>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    } \n    handleChange1(value) { \n      this.setState({fk_oficionas:value}) \n  }\n    handleChange2(value) { \n        this.setState({fk_area:value})\n    }\n    handleChange3(value) { \n        this.setState({fk_puesto:value}) \n        axios({\n          url:API,\n          method:'post',\n          data:{\n            query:`\n              query{   \n                getTablaNivel(data:\"${[value]}\"){\n                  id\n                  nivel\n                  fk_puesto\n                  message\n                  } \n              }\n              `  }           \n           })\n         .then(response => { \n            this.setState({getTablaNivel:response.data.data.getTablaNivel}) \n          })\n          .catch(err=>{\n             console.log('error' ,err.response)\n          })\n    }\n    handleChange4(value){\n      this.setState({fk_personal:value})\n    }\n    handleChange5(value){      \n      this.setState({fk_nivel:value})\n    }\n\n\n    capturarFechaA(e){\n      if(e){\n        let fechaAltaEmp = e._d.toString();\n        this.setState({fechaAlta:fechaAltaEmp})\n      }\n    }\n    capturarFechaB(e){\n      if(e){\n        let fechaBajaEmp = e._d.toString();\n        this.setState({fechaBaja:fechaBajaEmp})\n      }\n    }\n\n    fNotificacion(e){\n      if(e){\n        let fechaN = e._d.toString();\n        this.setState({fechaNotificacionAlta:fechaN})\n      }\n    }\n    fNotificacionB(e){\n      if(e){\n        let fechaNB = e._d.toString();\n        this.setState({fechaNotificacionBaja:fechaNB})\n      }\n    }\n\n\n    onClear = () => {\n        this.setState({\n          nombre:'',\n          apellidos:'',\n          correo:'',\n          curp:'',\n          rfc:'',\n          numEmpleado:'',\n          telefono:'',\n          ext:'',\n          dependencia:'',\n          fechaAlta:'',\n          fechaBaja:'',\n          fechaNotificacion:'',\n          pass:'',\n        });        \n      } \n\n      onSubmitBtn = async (e)=>{ \n        let nombre = this.state.nombre.toUpperCase()\n        let apellidos = this.state.apellidos.toUpperCase()\n        let curp = this.state.curp.toUpperCase()\n        let rfc = this.state.rfc.toUpperCase()\n        let correo = this.state.correo\n        let numEmpleado = this.state.numEmpleado\n        let telefono = this.state.telefono\n        let ext = this.state.ext \n        // let dependencia = this.state.dependencia  \n        let fechaAlta = this.state.fechaAlta\n        let fechaBaja = this.state.fechaBaja\n        let fechaNotificacionAlta = this.state.fechaNotificacionAlta\n        let fechaNotificacionBaja = this.state.fechaNotificacionBaja\n        let pass = this.state.pass        \n        let departamento = this.state.departamento.toUpperCase() \n        let fk_oficionas = this.state.fk_oficionas        \n        let fk_area = this.state.fk_area\n        let fk_puesto = this.state.fk_puesto\n        let fk_personal = this.state.fk_personal\n        let fk_nivel = this.state.fk_nivel\n     if(fechaAlta  && nombre && apellidos && correo && numEmpleado && telefono  && fk_oficionas && fk_area && fk_puesto && fk_nivel){  \n      await   axios({\n        url: API,\n        method: \"post\",\n        data: {\n          query: `\n            mutation{\n              sigUpEmpleado(data:\"${[nombre,apellidos,curp,rfc,correo,numEmpleado,telefono,ext,pass,departamento,fk_oficionas,fk_area,fk_puesto,fk_nivel,fk_personal]}\"){  \n                message\n                } \n            }\n            `\n        }\n      })\n        .then((response) => {     \n        }).catch((err) => {\n          console.log(\"error\", err.response);\n        }); \n        axios({\n          url: API,\n          method: \"post\",\n          data: {\n            query: `\n                    mutation{\n                    signupDataFechanotificaciones(data:\"${[fechaAlta,fechaBaja,fechaNotificacionAlta,fechaNotificacionBaja,numEmpleado]}\"){  \n                        message\n                        } \n                    }\n                    `\n          }\n        })\n          .then(response => {  \n          // if(response){\n              swal({              \n              title: \"Registro exitoso!\",               \n              icon: \"success\",\n              button:false,\n              timer: 3000\n            });  \n          }).catch((err) => {\n            console.log(\"error\", err.response);\n          });   \n            window.location.reload() \n               \n      }else{\n          swal({\n              text:\"complete los campos requeridos\",\n              icon:\"warning\"\n          })\n      }\n    };\n\n    render(){\n      const dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\n        const { Option } = Select;\n\n        let titulo = <center><h5><strong>REGISTRAR NUEVO USUARIO</strong></h5></center>\n       \n        let formulario=         \n        <Card title={titulo} style={{marginTop:\"2%\", width:\"95%\",marginLeft:\"3%\"}}>\n        <Form\n        labelCol={{ span: 4 }}\n        wrapperCol={{ span: 14 }}\n        layout=\"horizontal\"\n        >  \n        <Form onSubmit={this.onSubmitBtn}>   \n        <MDBRow>   \n        <MDBCol><Form.Item label=\"FECHA DE ALTA\" required> <DatePicker  style={{ width: 400 }} placeholder=\"10/01/2022\" onChange={this.capturarFechaA} format={dateFormatList} /></Form.Item></MDBCol>\n        <MDBCol><Form.Item label=\"FECHA DE BAJA\"> <DatePicker style={{ width: 400 }} placeholder=\"20/04/2023\" onChange={this.capturarFechaB} format={dateFormatList} /></Form.Item></MDBCol>\n        <MDBCol><Form.Item label=\"FECHA DE NOTIFICACIÓN\"> <DatePicker style={{ width: 400 }} placeholder=\"10/01/2022\" onChange={this.fNotificacion} format={dateFormatList} /></Form.Item></MDBCol>    \n        <MDBCol>        \n        <Form.Item  label=\"NOMBRE(S)\" required >\n            <Input style={{ width:400 }} placeholder=\"NOMBRE(S)\" id=\"nombre\" type=\"text\" name=\"nombre\" onChange={this.onChangeInput} value={this.state.nombre} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"APELLIDOS\" required>\n            <Input style={{ width: 400 }} placeholder=\"APELLIDOS\" id=\"apellidos\" type=\"text\" name=\"apellidos\" onChange={this.onChangeInput} value={this.state.apellidos} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"CURP\" >\n            <Input style={{ width: 400 }} placeholder=\"16 digitos\" id=\"curp\" type=\"text\" name=\"curp\" onChange={this.onChangeInput} value={this.state.curp} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"RFC\" >\n          <Input style={{ width: 400 }} placeholder=\"16 digitos\" id=\"rfc\" type=\"text\" name=\"rfc\" onChange={this.onChangeInput} value={this.state.rfc} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"CORREO\" required>\n          <Input style={{ width: 400 }} placeholder=\"ejemplo@ceav.gob.mx\" id=\"correo\" type=\"email\" name=\"correo\" onChange={this.onChangeInput} value={this.state.correo} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"Núm. EMPLEADO\" required>\n          <Input style={{ width: 400 }} placeholder=\"\" id=\"numEmpleado\" type=\"number\" name=\"numEmpleado\" onChange={this.onChangeInput} value={this.state.numEmpleado} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"TELEFONO\" >\n          <Input style={{ width: 400 }} placeholder=\"(55) 1000 2000\" id=\"telefono\" type=\"number\" name=\"telefono\" onChange={this.onChangeInput} value={this.state.telefono} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"EXT.\" >\n          <Input style={{ width: 400 }} placeholder=\"0000\" id=\"ext\" type=\"number\" name=\"ext\" onChange={this.onChangeInput} value={this.state.ext} />\n        </Form.Item>\n        </MDBCol>\n       <MDBCol>\n        <Form.Item label=\"DEPARTAMENTO\" >\n          <Input style={{ width: 400 }}  id=\"departamento\" type=\"departamento\" name=\"text\" onChange={this.onChangeInput} value={this.state.departamento} />\n        </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item  label=\"CONTRASEÑA\" id=\"pass\" type=\"password\" name=\"pass\" onChange={this.onChangeInput} value={this.state.pass}  >\n        <Input.Password style={{ width: 400 }} placeholder=\"****\" />\n      </Form.Item>\n      </MDBCol>\n      <MDBCol>\n        <Form.Item label=\"NOMBRE DE LA OfICINA\" required>\n                  <Select\n                   onChange={this.handleChange1}\n                   showSearch\n                   style={{ width: 400 }}\n                   placeholder=\"SELECCIONE SU OFICINA\"\n                   optionFilterProp=\"children\"\n                   filterOption={(input, option) =>\n                   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                   }\n                   filterSort={(optionA, optionB) =>\n                   optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                   }   \n                  >\n                      { this.state.tablaOficina.map(rows=>{\n                          return (\n                          <option value  = {rows.id_oficina} >{rows.nombreOficina}</option>\n                          )\n                        })}\n                  </Select>\n               </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"AREA DE ADSCRIPCIÓN\" required>\n                  <Select\n                   onChange={this.handleChange2}\n                   showSearch\n                   style={{ width: 400 }}\n                   placeholder=\"SELECCIONE EL AREA DE ADSCRIPCIÓN\"\n                   optionFilterProp=\"children\"\n                   filterOption={(input, option) =>\n                   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                   }\n                   filterSort={(optionA, optionB) =>\n                   optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                   }   \n                  >\n                      { this.state.tablaArea.map(rows=>{\n                          return (\n                          <option value  = {rows.id_area} >{rows.nombreArea}</option>\n                          )\n                        })}\n                  </Select>\n               </Form.Item>\n\n       \n        </MDBCol>\n        <MDBCol> \n        <Form.Item label=\"DENOMINACIÓN DEL PUESTO\" required>\n                  <Select\n                   onChange={this.handleChange3}\n                   showSearch\n                   style={{ width: 400 }}\n                   placeholder=\"SELECCIONE LA DENOMINACIÓN DEL PUESTO\"\n                   optionFilterProp=\"children\"\n                   filterOption={(input, option) =>\n                   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                   }\n                   filterSort={(optionA, optionB) =>\n                   optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                   }   \n                  >\n                      { this.state.tablaPuesto.map(rows=>{\n                          return (\n                          <option value  = {rows.id_puesto} >{rows.puesto}</option>\n                          )\n                        })}\n                  </Select>\n               </Form.Item>\n        </MDBCol>\n        <MDBCol> \n        <Form.Item label=\"DENOMINACIÓN DEL NIVEL\" required>\n                  <Select\n                   onChange={this.handleChange5}\n                   showSearch\n                   style={{ width: 400 }}\n                   placeholder=\"SELECCIONE LA DENOMINACIÓN DEL NIVEL\"\n                   optionFilterProp=\"children\"\n                   filterOption={(input, option) =>\n                   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                   }\n                   filterSort={(optionA, optionB) =>\n                   optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                   }   \n                  >\n                      { this.state.getTablaNivel.map(rows=>{\n                          return (\n                          <option value  = {rows.id} >{rows.nivel}</option>\n                          )\n                        })}\n                  </Select>\n               </Form.Item>\n        </MDBCol>\n        <MDBCol>\n        <Form.Item label=\"PERSONAL\" required>\n        <Select\n            onChange={this.handleChange4}\n            showSearch\n            style={{ width: 400 }}\n            placeholder=\"SELECCIONE LA DENOMINACIÓN DEL PERSONAL\"\n            optionFilterProp=\"children\"\n            filterOption={(input, option) =>\n            option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            filterSort={(optionA, optionB) =>\n            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n            }\n        >             \n        <Option value=\"1\">EVENTUAL</Option>      \n        <Option value=\"2\">ESTRUCTURA</Option>         \n        </Select>   \n        </Form.Item> \n        </MDBCol>\n        <MDBCol> \n        {/* <Form.Item style={{marginTop:\"8%\"}}> */}\n        <div className=\"text-center\">                   \n            <Button  onClick={e=>this.onSubmitBtn()} style={{ background: \"#73d13d\" }}>GUARDAR</Button> &nbsp;&nbsp;&nbsp;\n            <Button  onClick={e=>this.onClear()} style={{background:\"#40a9ff\"}} >CANCELAR</Button>\n        </div> \n        {/* </Form.Item> */}\n        </MDBCol>   \n        </MDBRow>  \n        </Form>\n        </Form>       \n        </Card>\n        \n        return(\n            <React.Fragment>\n                  {formulario}              \n            </React.Fragment>\n      \n        )\n    }\n\n}export default signUpEmpleado\n","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpCatPersonal.js",["433"],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpCatAreas.js",["434"],"import React, {Component} from 'react'\nimport { Card,Form , Input, Button,Select,Menu } from 'antd'\nimport axios from 'axios';\nimport {API} from '../Graphql/Graphql'\nimport swal from 'sweetalert';\nimport MUIDataTable from \"mui-datatables\";\nimport { Row,Col,Form as form } from 'reactstrap'\nimport { EditOutlined,IssuesCloseOutlined } from '@ant-design/icons';\nimport './sideNavAdmin.css'\nimport { MDBBtn,MDBIcon,MDBContainer,MDBModal,MDBModalBody,MDBModalHeader,MDBModalFooter,MDBRow,MDBCol } from 'mdbreact';\n\nclass catalogoArea extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            area:'',\n            nomeclatura:'',\n            numSerie:'',\n            tablaArea:[],            \n            inicioArea:true,\n            tablarenderArea:false,\n            ArrayArea:[],\n            modal:false,  \n            id_areaUpdate:'',     \n            nombreAreaUpdate:'',\n            nomeclaturaUpdate:'',\n            numSerieUpdate:'',\n            \n\n        }\n        this.toggle = this.toggle.bind(this)\n        this.onChangeInput2 = this.onChangeInput2.bind(this)\n    }\n    componentDidMount(){\n      axios({\n        url:API,\n        method:'post',\n        data:{\n          query:`\n            query{   \n              getTablaArea(data:\"${[]}\"){\n                id_area\n                nomeclatura\n                numSerie\n                nombreArea\n                message\n                } \n            }\n            `  }           \n         })\n       .then(response => { \n          this.setState({tablaArea:response.data.data.getTablaArea}) \n        })\n        .catch(err=>{\n           console.log('error' ,err.response)\n        }) \n    }\n\n    tablainicio(){\n      this.setState({inicioArea:true})\n      this.setState({tablarenderArea:false})\n    }\n    tablaArea(){\n      this.setState({inicioArea:false})\n      this.setState({tablarenderArea:true})\n    }\n    onClear = ()=>{\n        this.setState = {\n           area:'' \n        }       \n    }\n    onChangeInput = (e) =>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    onChangeInput2 = (e) => {\n      const { id, value } = e.target;  \n      // console.log(\"e\",e.target)   \n      this.setState({\n        [id]: value\n      });\n    };\n    editar(id){ \n      this.setState({ArrayArea:id})  \n      this.setState({\n        id_areaUpdate:id.id_area,\n        nombreAreaUpdate:id.nombreArea,\n        nomeclaturaUpdate:id.nomeclatura,\n        numSerieUpdate:id.numSerie  \n      })\n          this.setState({\n            modal:!this.state.modal\n          });   \n    }\n    toggle = () => {\n      this.setState({\n        modal: !this.state.modal\n      });\n    }   \n\n     onSubmitBtn =(e)=>{\n         let area = this.state.area.toUpperCase()\n         let nomeclatura = this.state.nomeclatura.toUpperCase()\n         let numSerie = this.state.numSerie\n        if(area){  \n            axios({\n           url: API,\n           method: \"post\",\n           data: {\n             query: `\n                     mutation{\n                        signupCatArea(data:\"${[nomeclatura,numSerie,area]}\"){  \n                         message\n                          } \n                     }\n                     `\n           }\n         })\n           .then((response) => { \n            if(response.data.data.signupCatArea.message === \"registro exitoso\"){\n                swal({              \n               title: \"\", \n               text:\"Registro exitoso!\",              \n               icon: \"success\",\n               button:false,\n               timer: 1500\n             });  \n             this.setState({area:[],nomeclatura:[],numSerie:[]})     \n             setTimeout(function(){\n              window.location.reload()\n               }, 1500);     \n           }else{\n            swal({\n               title:\"Error!\",\n               text: \"Algo salio mal, intentalo nuevamente\",\n               icon: \"error\",\n               button:false\n             }); \n           }          \n           }).catch((err) => {\n             console.log(\"error\", err.response);\n           });     \n     \n         }else{\n            swal({\n             title:\"Notificación del sistema\",\n             text: \"Por favor llene los campos obligatorios *\",\n             icon: \"warning\",             \n             button:false\n           }); \n         }        \n       };\n\n       onSubmitBtn2 = (e) => {\n        e.preventDefault(); \n        let id_areaUpdate = this.state.id_areaUpdate\n        let nombreAreaUpdate = this.state.nombreAreaUpdate.toUpperCase();\n        let nomeclaturaUpdate = this.state.nomeclaturaUpdate.toUpperCase();\n        let numSerieUpdate = this.state.numSerieUpdate\n         if( nombreAreaUpdate ){\n           axios({\n          url: API,\n          method: \"post\",\n          data: {\n            query: `\n             mutation{\n              updateArea(data:\"${[id_areaUpdate,nomeclaturaUpdate,numSerieUpdate,nombreAreaUpdate]}\"){ \n               message\n            } \n        }\n        `\n          }\n        })     \n          .then((response) => {   \n            if(response.data.data.updateArea.message===\"actualizacion exitosa\"){\n              swal({\n                title:\"\",\n                text:\"Los datos se actualizarón correctamente\",\n                icon:\"success\",\n                buttons:false,\n                timer:1000\n              })\n              this.setState({modal:false})\n              setTimeout(function(){\n                window.location.reload()\n                 }, 1500);\n            }  else{\n              swal({\n                title:\"\",\n                text:\"Algo salió mal.\",\n                icon:\"error\",\n                buttons:false,\n                timer:1000\n              })\n            }         \n            \n          })\n          .catch((err) => {\n            console.log(\"error\", err.response);           \n          }); \n        } else{\n          swal({\n            title:\"\",\n            text:\"Algo salió mal, por favor complete todos los campos  requeridos *\",\n            icon:\"warning\",\n            buttons:false,\n            timer:1000\n          })\n        }    \n       };\n\n\n\n    \n    render(){ \n      const { Option } = Select;\n      let formulario;\n      let tablaFormulario;\n      let botonEditar;  \n      let modal;\n\n      const options={ \n        filterType:\"drowpdawn\",\n        responsive: \"stacked\",\n        print:false,\n        download:false,\n        viewColumns:false,\n        filter: false,\n        elevation:1,\n        selectableRows:\"none\",\n        rowsPerPage:5,\n        textLabels:{\n        body: {\n          noMatch: \"Lo sentimos, no se encontraron registros coincidentes\",\n          toolTip: \" Ordenar\",\n          columnHeaderTooltip: column => `Sort for ${column.label}`\n        },\n        pagination: {\n          next: \"Página siguiente\",\n          previous: \"Página anterior\",\n          rowsPerPage: \"Filas por página:\",\n          displayRows: \"de\",\n        },\n        toolbar: {\n          search: \"Buscar\",\n          downloadCsv: \" Descargar CSV\",\n          print: \"Imprimir \",\n          viewColumns: \"Ver columnas\",\n          filterTable: \"Tabla de filtros\",\n        },\n        filter: {\n          all: \"Todos\",\n          title: \"FILTROS\",\n          reset: \"RESET\",\n        },\n        viewColumns: {\n          title: \"Mostrar columnas\",\n          titleAria: \"Mostrar / Ocultar columnas de tabla\",\n        },\n        selectedRows: {\n          text: \"fila (s) seleccionadas\",\n          delete: \"Eliminar\",\n          deleteAria: \"Eliminar filas seleccionadas\",\n        },      \n      }        \n      } \n\n let titulo=<h5><strong>ÁREA DE ADSCRIPCIÓN CEAV</strong></h5>\n     if(this.state.inicioArea === true){\n        formulario =         \n        <Card title={titulo} style={{marginTop:\"2%\", width:\"95%\",marginLeft:\"3%\"}}>\n          <Form\n              labelCol={{ span: 4 }}\n              wrapperCol={{ span: 14 }}\n              layout=\"horizontal\"\n            >\n            <Form onSubmitBtn={this.onSubmitBtn}>\n              <Form.Item label=\"NOMBRE DEL ÁREA\" required >\n                <Input style={{ width: 400 }}  id=\"area\" name=\"area\" type=\"text\" onChange={this.onChangeInput} value={this.state.area}/>\n              </Form.Item>  \n             <Form.Item label=\"NOMECLARUTA\">\n                <Input style={{ width: 400 }}  id=\"nomeclatura\" name=\"nomeclatura\" type=\"text\" onChange={this.onChangeInput} value={this.state.nomeclatura}/>\n              </Form.Item>   \n              <Form.Item label=\"NUMERO DE SERIE\">\n                <Input style={{ width: 400 }}  id=\"numSerie\" name=\"numSerie\" type=\"text\" onChange={this.onChangeInput} value={this.state.numSerie}/>\n              </Form.Item>   \n              <Form.Item>\n                <div className=\"text-center\">                   \n                <Button className='ant-btnText' onClick={e=>this.onSubmitBtn()} style={{ background: \"#73d13d\" }}>GUARDAR</Button> &nbsp;&nbsp;&nbsp;\n                <Button className='ant-btnText' onClick={e=>this.onClear()} style={{background:\"#40a9ff\"}} >CANCELAR</Button>\n                </div> \n              </Form.Item>\n            </Form>\n          </Form> \n        </Card>\n      }         \n\n      const columns = [\"ID\",\"NOMECLATURA\",\"NO. SERIE\",\"ÁREA\",\"EDITA\"]\n      let data = this.state.tablaArea.map((rows)=>{\n         botonEditar = <div>            \n                <Button type=\"link\" shape=\"circle\" size=\"large\"\n                  onClick={(e)=>this.editar(rows)}\n                  >\n                <MDBIcon icon=\"user-edit\" />\n                </Button>\n              </div>\n          return([rows.id_area,rows.nomeclatura,rows.numSerie,rows.nombreArea,botonEditar])\n        })\n        if(this.state.tablarenderArea === true){\n        tablaFormulario=\n        <Card>\n          <MUIDataTable    \n           title={\"ÁREAS REGISTRADAS\" }\n           data={data}\n           columns={columns}\n           options={options}\n           />\n        </Card>\n        }\n\n         modal=\n        <div>\n          <MDBContainer>\n        <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n          <MDBModalHeader toggle={this.toggle}>EDITAR ÁREA</MDBModalHeader>\n          <MDBModalBody>\n          <MDBContainer>\n          <form onSubmit={this.onSubmitBtn2}>\n              <MDBRow>\n                <MDBCol style={{marginTop:\"5%\", marginBotton:\"5%\"}}>\n                {/* <form onSubmit={this.onSubmitBtn2}> */}\n            <Row>\n              <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>NOMECLATURA:</strong></label>\n                         <input                                              \n                              id=\"nomeclaturaUpdate\"\n                              type=\"text\"\n                              name=\"nomeclaturaUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.nomeclaturaUpdate}\n                              className=\"form-control\"                                                      \n                              />\n                \n                </Col>\n                <Col xs=\"6\">       \n              <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>NO. SERIE: </strong></label>\n                          <input                                          \n                                id=\"numSerieUpdate\"\n                                type=\"text\"\n                                name=\"numSerieUpdate\"\n                                onChange={this.onChangeInput2}\n                                value={this.state.numSerieUpdate }\n                                className=\"form-control\"                                \n                                />\n              </Col> \n            </Row>\n            <Row>\n            <Col xs=\"12\">\n            <div className=\"form-group\">       \n                <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>NOMBRE ÁREA: </strong></label>\n                            <textarea\n                              className=\"form-control\"\n                              id=\"nombreAreaUpdate\"\n                              type=\"text\"\n                              name=\"nombreAreaUpdate\"\n                              rows=\"5\"\n                              value={this.state.nombreAreaUpdate }\n                              onChange={this.onChangeInput2}\n                            />\n            </div>\n              </Col>            \n            </Row>   \n           \n            <div style={{marginTop:\"3%\"}} className=\"text-center\">\n                <MDBBtn outline color=\"secondary\"  type=\"submit\" size='sm'>GUARDAR</MDBBtn>\n                <MDBBtn outline color=\"danger\" size='sm' onClick={e=>this.toggle()} >CANCELAR</MDBBtn>\n            </div>    \n          </MDBCol>\n        </MDBRow>\n        </form>\n      </MDBContainer>             \n          </MDBModalBody>\n          <MDBModalFooter>\n          </MDBModalFooter>\n        </MDBModal>\n      </MDBContainer>\n        </div>\n        return(\n          <React.Fragment>   \n          <Menu mode=\"horizontal\" className='menuSide' defaultSelectedKeys={['mail']}>\n            <Menu.Item key=\"mail\"  icon={<EditOutlined />} onClick={e=>this.tablainicio()}>\n            REGISTRAR ÁREA\n            </Menu.Item>\n            <Menu.Item key=\"mail\" icon={<IssuesCloseOutlined />} onClick={e=>this.tablaArea()}>\n            INF. ÁREA\n            </Menu.Item>\n            </Menu>\n            {formulario}\n            {tablaFormulario}\n            {modal}\n          </React.Fragment>\n        )\n    }\n    \n}export default catalogoArea","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpCatRoles.js",["435","436","437","438","439","440","441","442"],"import React, {Component} from 'react'\nimport { Card,Form as form, Input, Button, Radio, Form } from 'antd'\nimport { InfoCircleOutlined } from '@ant-design/icons';\nimport { Select,Space,DatePicker,Menu } from 'antd';\nimport axios from 'axios';\nimport {API} from '../Graphql/Graphql'\nimport swal from 'sweetalert';\nimport {MDBBtn}     from 'mdbreact'\nimport { EditOutlined,IssuesCloseOutlined } from '@ant-design/icons';\nimport MUIDataTable from \"mui-datatables\";\n\nclass catalogoArea extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            nombre:'',\n            apellidos:'',\n            correo:'',\n            pass:'',\n            tablaAdmin:[],\n            inicioAdmin:true,\n            tablarenderAdmin:false\n        }\n    }\n    componentDidMount(){\n      axios({\n        url:API,\n        method:'post',\n        data:{\n          query:`\n            query{   \n              getTablaAdmin(data:\"${[]}\"){\n                id_admin\n                nombre\n                apellidos\n                correo\n                message\n                } \n            }\n            `  }           \n         })\n       .then(response => { \n          this.setState({tablaAdmin:response.data.data.getTablaAdmin}) \n        })\n        .catch(err=>{\n           console.log('error' ,err.response)\n        }) \n    }\n    onClear = ()=>{\n        this.state = {\n          nombre:'',\n          apellidos:'',\n          correo:'',\n          pass:'',\n        }       \n    }\n\n    onChangeInput = (e) =>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    \n    tablainicio(){\n      this.setState({inicioAdmin:true})\n      this.setState({tablarenderAdmin:false})\n    }\n    tablaAdmin(){\n      this.setState({inicioAdmin:false})\n      this.setState({tablarenderAdmin:true})\n    }\n\n     onSubmitBtn =(e)=>{\n       let nombre = this.state.nombre.toUpperCase()\n       let apellidos = this.state.apellidos.toUpperCase()\n       let correo = this.state.correo\n       let pass = this.state.pass\n        if(nombre && apellidos && correo && pass){  \n            axios({\n           url: API,\n           method: \"post\",\n           data: {\n             query: `\n                     mutation{\n                      signupDataAdmin(data:\"${[nombre,apellidos,correo,pass]}\"){  \n                         message\n                          } \n                     }\n                     `\n           }\n         })\n           .then((response) => { \n            if(response.data.data.signupDataAdmin.message === \"Registro exitoso\"){\n                swal({              \n               title: \"\", \n               text:\"Registro exitoso!\",              \n               icon: \"success\",\n               button:false,\n               timer: 1500\n             });setTimeout(function(){\n              window.location.reload()\n               }, 1500);          \n           }else if(response.data.data.signupDataAdmin.message === \"el usuario se encuntra registrado\"){\n            swal({\n               title:\"Error!\",\n               text: \"El usuario ya se encuntra registrado\",\n               icon: \"error\",\n               button:false\n             }); \n           }          \n           }).catch((err) => {\n             console.log(\"error\", err.response);\n           });     \n     \n         }else{\n            swal({\n             title:\"Notificación del sistema\",\n             text: \"Por favor llene los campos obligatorios *\",\n             icon: \"warning\",             \n             button:false\n           }); \n         }        \n       };\n\n    \n    render(){ \n      let formulario;\n      let tablaFormulario;\n      const { Option } = Select;\n      const options={ \n        filterType:\"drowpdawn\",\n        responsive: \"stacked\",\n        print:false,\n        download:false,\n        viewColumns:false,\n        filter: false,\n        elevation:1,\n        selectableRows:\"none\",\n        rowsPerPage:5,\n        textLabels:{\n        body: {\n          noMatch: \"Lo sentimos, no se encontraron registros coincidentes\",\n          toolTip: \" Ordenar\",\n          columnHeaderTooltip: column => `Sort for ${column.label}`\n        },\n        pagination: {\n          next: \"Página siguiente\",\n          previous: \"Página anterior\",\n          rowsPerPage: \"Filas por página:\",\n          displayRows: \"de\",\n        },\n        toolbar: {\n          search: \"Buscar\",\n          downloadCsv: \" Descargar CSV\",\n          print: \"Imprimir \",\n          viewColumns: \"Ver columnas\",\n          filterTable: \"Tabla de filtros\",\n        },\n        filter: {\n          all: \"Todos\",\n          title: \"FILTROS\",\n          reset: \"RESET\",\n        },\n        viewColumns: {\n          title: \"Mostrar columnas\",\n          titleAria: \"Mostrar / Ocultar columnas de tabla\",\n        },\n        selectedRows: {\n          text: \"fila (s) seleccionadas\",\n          delete: \"Eliminar\",\n          deleteAria: \"Eliminar filas seleccionadas\",\n        },      \n      }        \n      } \n\n      let titulo=<h5><strong>NUEVO ADMINISTRADOR DE CEAV</strong></h5>\n   if(this.state.inicioAdmin === true){\n         formulario =         \n        <Card title={titulo} style={{marginTop:\"2%\", width:\"95%\",marginLeft:\"3%\"}}>\n             <Form\n      labelCol={{ span: 4 }}\n      wrapperCol={{ span: 14 }}\n      layout=\"horizontal\"\n    >\n      <Form onSubmitBtn={this.onSubmitBtn}>\n      <Form.Item label=\"NOMBRE(S)\" required >\n        <Input style={{ width: 400 }} placeholder=\"ejemplo.ceav.gob.mx\" id=\"nombre\" name=\"nombre\" type=\"text\" onChange={this.onChangeInput} value={this.state.nombre}/>\n      </Form.Item> \n      <Form.Item label=\"APELLIDOS\" required >\n        <Input style={{ width: 400 }} placeholder=\"ejemplo.ceav.gob.mx\" id=\"apellidos\" name=\"apellidos\" type=\"text\" onChange={this.onChangeInput} value={this.state.apellidos}/>\n      </Form.Item> \n      <Form.Item label=\"CORREO\" required >\n        <Input style={{ width: 400 }} placeholder=\"ejemplo.ceav.gob.mx\" id=\"correo\" name=\"correo\" type=\"text\" onChange={this.onChangeInput} value={this.state.correo}/>\n      </Form.Item> \n      <Form.Item label=\"CONTRASEÑA\" required >\n        <Input.Password style={{ width: 400 }} placeholder=\"****\" id=\"pass\" name=\"pass\" type=\"text\" onChange={this.onChangeInput} value={this.state.pass} />\n      </Form.Item>     \n      <Form.Item>\n        <div className=\"text-center\">                   \n                <Button className='ant-btnText' onClick={e=>this.onSubmitBtn()} style={{ background: \"#73d13d\" }}>Guardar</Button> &nbsp;&nbsp;&nbsp;\n                <Button className='ant-btnText' onClick={e=>this.onClear()} style={{background:\"#40a9ff\"}} >Cancelar</Button>\n            </div> \n        </Form.Item>   \n        </Form>     \n    </Form> \n        </Card>\n    }\n\n    const columns = [\"ID\",\"NOMBRE\",\"APELLIDO\",\"CORREO\"]\n    let data = this.state.tablaAdmin.map((rows)=>{\n     \n        return([rows.id_admin,rows.nombre,rows.apellidos,rows.correo])\n      })\n      if(this.state.tablarenderAdmin === true){\n      tablaFormulario=\n      <Card>\n        <MUIDataTable    \n        title={\"ADMINISTRADORES REGISTRADOS\" }\n        data={data}\n        columns={columns}\n        options={options}\n        />\n      </Card>\n      }\n\n        return(\n            <React.Fragment>   \n            <Menu mode=\"horizontal\" className='menuSide' defaultSelectedKeys={['mail']}>\n              <Menu.Item key=\"mail\"  icon={<EditOutlined />} onClick={e=>this.tablainicio()}>\n              REGISTRAR ADMINISTRADOR\n              </Menu.Item>\n              <Menu.Item key=\"mail\" icon={<IssuesCloseOutlined />} onClick={e=>this.tablaAdmin()}>\n              INF.ADMINISTRADOR\n              </Menu.Item>\n              </Menu>\n              {formulario}\n              {tablaFormulario}              \n            </React.Fragment>\n        )\n    }\n    \n}export default catalogoArea","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpCatOficinas.js",["443","444","445"],"import React, {Component} from 'react'\nimport { Card,Form as form, Input, Button, Select, Form,Menu } from 'antd'\nimport axios from 'axios';\nimport {API} from '../Graphql/Graphql'\nimport swal from 'sweetalert';\nimport {Row,Col} from 'reactstrap'\nimport {MDBBtn,MDBRow,MDBCol,MDBIcon,MDBContainer,MDBModal,MDBModalHeader,MDBModalBody,MDBModalFooter } from 'mdbreact'\nimport MUIDataTable from \"mui-datatables\";\nimport { MailOutlined,EditOutlined,IssuesCloseOutlined } from '@ant-design/icons';\nimport './sideNavAdmin.css'\n\nclass catalogoOficina extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            nombreOficina:'',\n            calle:'',\n            numExterior:'',\n            numInterior:'',\n            ciudad:'',\n            colonia:'',\n            estado:'',\n            cp:'',\n            telefono1:'',\n            telefono2:'',\n            telefono3:'',\n            telefono4:'',\n            telefono5:'',\n            referencia:'',\n            tablaOficina:[],\n            inicioOficina:true,\n            tablarenderOficina:false,\n            ArrayOficina:[],\n            modal:false,\n            id_oficinaUpdate:\"\",\n            nombreOficinaUpdate:\"\",\n            calleUpdate:\"\",\n            numExteriorUpdate:\"\",\n            numInteriorUpdate:\"\",\n            ciudadUpdate:\"\",\n            coloniaUpdate:\"\",            \n            estadoUpdate:\"\",\n            cpUpdate:\"\",\n            telefono1Update:\"\",\n            telefono2Update:\"\",\n            telefono3Update:\"\",\n            telefono4Update:\"\",\n            telefono5Update:\"\",\n            referenciaUpdate:\"\",\n            tablaEstados:[]\n        }\n        this.onClear = this.onClear.bind(this)\n        this.handleChange1 = this.handleChange1.bind(this)\n        this.toggle = this.toggle.bind(this)\n    }\n\n    componentDidMount(){ \n      axios({\n        url:API,\n        method:'post',\n        data:{\n          query:`\n            query{   \n              getTablaOficinas(data:\"${[]}\"){\n                id_oficina\n                nombreOficina\n                calle\n                numExterior\n                numInterior\n                colonia\n                codigoPostal\n                ciudad\n                estado\n                telefono1\n                telefono2\n                telefono1\n                telefono3\n                telefono1\n                telefono4\n                telefono5\n                referencia\n                message\n                } \n            }\n            `  }           \n         })\n       .then(response => { \n          this.setState({tablaOficina:response.data.data.getTablaOficinas}) \n        })\n        .catch(err=>{\n           console.log('error' ,err.response)\n        }) \n        axios({\n          url:API,\n          method:'post',\n          data:{\n            query:`\n              query{   \n                getTablaEstados(data:\"${[]}\"){\n                  id_entidad\n                  nombreEntidad\n                  message\n                  } \n              }\n              `  }           \n           })\n         .then(response => { \n            this.setState({tablaEstados:response.data.data.getTablaEstados}) \n          })\n          .catch(err=>{\n             console.log('error' ,err.response)\n          }) \n\n      }\n\n    onClear = ()=>{\n        this.setState = {\n            nombreOficina:'',\n            calle:'',\n            numExterior:'',\n            numInterior:'',\n            ciudad:'',\n            colonia:'',            \n            estado:'',\n            cp:'',\n            telefono1:'',\n            telefono2:'',\n            telefono3:'',\n            telefono4:'',\n            telefono5:'',\n            referencia:'',\n            tablaOficina:[],\n            inicioOficina:true,\n            tablarenderOficina:false\n        }       \n    }\n    tablainicio(){\n     this.setState({inicioOficina:true})\n     this.setState({tablarenderOficina:false})\n    }\n    tablaOficina(){\n      this.setState({inicioOficina:false})\n      this.setState({tablarenderOficina:true})\n    }\n\n    onChangeInput = (e) =>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    onChangeInput2 = (e) =>{\n      const {id,value} = e.target;\n      this.setState({\n          [id]:value\n      })\n  }\n  editar(id){ \n    this.setState({ArrayOficina:id})  \n    this.setState({\n      id_oficinaUpdate:id.id_oficina,\n      nombreOficinaUpdate:id.nombreOficina,\n      calleUpdate:id.calle,\n      numExteriorUpdate:id.numExterior,\n      numInteriorUpdate:id.numInterior,\n      coloniaUpdate:id.colonia,\n      cpUpdate:id.codigoPostal,\n      ciudadUpdate:id.ciudad,\n      estadoUpdate:id.estado,\n      telefono1Update:id.telefono1,\n      telefono2Update:id.telefono2,\n      telefono3Update:id.telefono3,\n      telefono4Update:id.telefono4,\n      telefono5Update:id.telefono5,\n      referenciaUpdate:id.referencia\n    })\n        this.setState({\n          modal:!this.state.modal\n        });   \n  }\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }  \n\n     handleChange1(value){\n         this.setState({estado:value})\n     }\n\n     onSubmitBtn =(e)=>{\n       let nombreOficina = this.state.nombreOficina.toUpperCase()\n         let calle = this.state.calle.toUpperCase()\n         let numExterior = this.state.numExterior\n         let numInterior = this.state.numInterior\n         let ciudad = this.state.ciudad.toUpperCase()\n         let colonia = this.state.colonia.toUpperCase()\n        //  let municipio = this.state.municipio\n         let estado = this.state.estado\n         let codigoPostal = this.state.cp\n         let telefono1 = this.state.telefono1\n         let telefono2 = this.state.telefono2\n         let telefono3 = this.state.telefono3\n         let telefono4 = this.state.telefono4\n         let telefono5 = this.state.telefono5\n         let referencia = this.state.referencia\n        \n        if(nombreOficina && calle && numExterior && ciudad && colonia  && estado && codigoPostal,telefono1){  \n            axios({\n           url: API,\n           method: \"post\",\n           data: {\n             query: `\n                     mutation{\n                      signupCatOficina(data:\"${[nombreOficina,calle,numExterior,numInterior,colonia,codigoPostal,ciudad,estado,telefono1,telefono2,telefono3,telefono4,telefono5,referencia]}\"){  \n                         message\n                          } \n                     }\n                     `\n           }\n         })\n           .then((response) => { \n            if(response.data.data.signupCatOficina.message === \"registro exitoso\"){\n                swal({              \n               title: \"\", \n               text:\"Registro exitoso!\",              \n               icon: \"success\",\n               button:false,\n               timer: 1500\n             });  \n             this.setState({nombreOficina:[],calle:[],numExterior:[],numInterior:[],ciudad:[],colonia:[],municipio:[],estado:[],cp:[],telefono1:[],telefono2:[],telefono3:[],telefono4:[],telefono5:[],referencia:[]})          \n             setTimeout(function(){\n              window.location.reload()\n               }, 1500);\n            }else{\n            swal({\n               title:\"Error!\",\n               text: \"Algo salio mal, intentalo nuevamente\",\n               icon: \"error\",\n               button:false\n             }); \n           }          \n           }).catch((err) => {\n             console.log(\"error\", err.response);\n           });     \n     \n         }else{\n            swal({\n             title:\"Notificación del sistema\",\n             text: \"Por favor llene los campos obligatorios *\",\n             icon: \"warning\",             \n             button:false\n           }); \n         }        \n       };\n\n      onSubmitBtn2 = (e) => {\n        e.preventDefault(); \n        let id_oficinaUpdate = this.state.id_oficinaUpdate;\n        let nombreOficinaUpdate = this.state.nombreOficinaUpdate.toUpperCase();\n        let calleUpdate = this.state.calleUpdate.toUpperCase();\n        let numExteriorUpdate = this.state.numExteriorUpdate;\n        let numInteriorUpdate = this.state.numInteriorUpdate;\n        let coloniaUpdate = this.state.coloniaUpdate.toUpperCase();\n        let cpUpdate = this.state.cpUpdate;\n        let ciudadUpdate = this.state.ciudadUpdate;\n        let estadoUpdate = this.state.estadoUpdate;\n        let telefono1Update = this.state.telefono1Update;\n        let telefono2Update = this.state.telefono2Update;\n        let telefono3Update = this.state.telefono3Update;\n        let telefono4Update = this.state.telefono4Update;\n        let telefono5Update = this.state.telefono5Update;\n        let referenciaUpdate = this.state.referenciaUpdate.toUpperCase()\n\n     \n         if( nombreOficinaUpdate && calleUpdate && numExteriorUpdate  && coloniaUpdate && cpUpdate && ciudadUpdate && estadoUpdate && telefono1Update){\n           axios({\n          url: API,\n          method: \"post\",\n          data: {\n            query: `\n             mutation{\n              updateOficina(data:\"${[id_oficinaUpdate,nombreOficinaUpdate,calleUpdate,numExteriorUpdate,numInteriorUpdate,coloniaUpdate,cpUpdate,ciudadUpdate,estadoUpdate,telefono1Update,telefono2Update,telefono3Update,telefono4Update,telefono5Update,referenciaUpdate]}\"){ \n               message\n            } \n        }\n        `\n          }\n        })     \n          .then((response) => {   \n            if(response.data.data.updateOficina.message===\"actualizacion exitosa\"){\n              swal({\n                title:\"\",\n                text:\"Los datos se actualizarón correctamente\",\n                icon:\"success\",\n                buttons:false,\n                timer:1000\n              })\n              this.setState({modal:false})\n              setTimeout(function(){\n                window.location.reload()\n                 }, 1500);\n            }  else{\n              swal({\n                title:\"\",\n                text:\"Algo salió mal, por favor complete todos los campos  nuevamente\",\n                icon:\"warning\",\n                buttons:false,\n                timer:1000\n              })\n            }         \n            \n          })\n          .catch((err) => {\n            console.log(\"error\", err.response);           \n          }); \n        }      \n       };\n\n    \n    render(){ \n      const { Option } = Select;\n      let formulario;\n      let tablaFormulario;\n      let botonEditar;  \n      let modal;\n        \n        const options={ \n          filterType:\"drowpdawn\",\n          responsive: \"stacked\",\n          print:false,\n          download:false,\n          viewColumns:false,\n          filter: false,\n          elevation:1,\n          selectableRows:\"none\",\n          rowsPerPage:5,\n          textLabels:{\n          body: {\n            noMatch: \"Lo sentimos, no se encontraron registros coincidentes\",\n            toolTip: \" Ordenar\",\n            columnHeaderTooltip: column => `Sort for ${column.label}`\n          },\n          pagination: {\n            next: \"Página siguiente\",\n            previous: \"Página anterior\",\n            rowsPerPage: \"Filas por página:\",\n            displayRows: \"de\",\n          },\n          toolbar: {\n            search: \"Buscar\",\n            downloadCsv: \" Descargar CSV\",\n            print: \"Imprimir \",\n            viewColumns: \"Ver columnas\",\n            filterTable: \"Tabla de filtros\",\n          },\n          filter: {\n            all: \"Todos\",\n            title: \"FILTROS\",\n            reset: \"RESET\",\n          },\n          viewColumns: {\n            title: \"Mostrar columnas\",\n            titleAria: \"Mostrar / Ocultar columnas de tabla\",\n          },\n          selectedRows: {\n            text: \"fila (s) seleccionadas\",\n            delete: \"Eliminar\",\n            deleteAria: \"Eliminar filas seleccionadas\",\n          },      \n        }        \n        }\n      let titulo=<h5><strong>OFICINAS DE CEAV</strong></h5>    \n      if(this.state.inicioOficina === true){\n        formulario=         \n        <Card title={titulo} style={{marginTop:\"2%\", width:\"95%\",marginLeft:\"3%\"}}>\n             <Form\n      labelCol={{ span: 4 }}\n      wrapperCol={{ span: 14 }}\n      layout=\"horizontal\"\n    >\n    <Form onSubmitBtn={this.onSubmitBtn}>\n    <MDBRow>      \n    <MDBCol>\n      <Form.Item label=\"NOMBRE OFICINA\" required >\n        <Input style={{ width: 400 }} placeholder=\"Angel Urraza #728\" id=\"nombreOficina\" name=\"nombreOficina\" type=\"text\" onChange={this.onChangeInput} value={this.state.nombreOficina}/>\n      </Form.Item>\n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"CALLE\" required >\n        <Input style={{ width: 400 }} placeholder=\"Angel Urraza #728\" id=\"calle\" name=\"calle\" type=\"text\" onChange={this.onChangeInput} value={this.state.calle}/>\n      </Form.Item>\n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"NO. EXTERIOR\" required >\n        <Input style={{ width: 400 }} placeholder=\"Angel Urraza #728\" id=\"numExterior\" name=\"numExterior\" type=\"text\" onChange={this.onChangeInput} value={this.state.numExterior}/>\n      </Form.Item>\n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"NO. INTERIOR\"  >\n        <Input style={{ width: 400 }} placeholder=\"Angel Urraza #728\" id=\"numInterior\" name=\"numInterior\" type=\"text\" onChange={this.onChangeInput} value={this.state.numInterior}/>\n      </Form.Item>\n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"CODIGO POSTAL\" required>\n      <Input style={{ width: 400 }} placeholder=\"C.P\" id=\"cp\" name=\"cp\" type=\"number\" onChange={this.onChangeInput} value={this.state.cp} />\n      </Form.Item> \n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"COLONIA\" required>\n      <Input style={{ width: 400 }} placeholder=\"centro\" id=\"colonia\" name=\"colonia\" type=\"text\" onChange={this.onChangeInput} value={this.state.colonia} />\n      </Form.Item>\n      </MDBCol> \n        <MDBCol>\n        <Form.Item label=\"ESTADO\" required>\n                  <Select\n                   onChange={this.handleChange1}\n                   showSearch\n                   style={{ width: 400 }}\n                   optionFilterProp=\"children\"\n                   filterOption={(input, option) =>\n                   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                   }\n                   filterSort={(optionA, optionB) =>\n                   optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                   }   \n                  >\n                      { this.state.tablaEstados.map(rows=>{\n                          return (\n                          <option value  = {rows.nombreEntidad}>{rows.nombreEntidad}</option>\n                          )\n                        })}\n                  </Select>\n               </Form.Item>\n        </MDBCol>      \n        <MDBCol>\n      <Form.Item label=\"MUNICIPIO/ALCALDIA\" required>\n      <Input style={{ width: 400 }} placeholder=\"cuidad de mexico\" id=\"ciudad\" name=\"ciudad\" type=\"text\" onChange={this.onChangeInput} value={this.state.ciudad} />\n      </Form.Item>\n      </MDBCol>      \n        <MDBCol>\n      <Form.Item label=\"TELEFONO 1\" required>\n      <Input style={{ width: 400 }} placeholder=\"5510002000\" id=\"telefono1\" name=\"telefono1\" type=\"number\" onChange={this.onChangeInput} value={this.state.telefono1} />\n      </Form.Item> \n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"TELEFONO 2\" >\n      <Input style={{ width: 400 }} placeholder=\"5510002000\" id=\"telefono2\" name=\"telefono2\" type=\"number\" onChange={this.onChangeInput} value={this.state.telefono2} />\n      </Form.Item> \n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"TELEFONO 3\" >\n      <Input style={{ width: 400 }} placeholder=\"5510002000\" id=\"telefono3\" name=\"telefono3\" type=\"number\" onChange={this.onChangeInput} value={this.state.telefono3} />\n      </Form.Item> \n      </MDBCol>\n      <MDBCol>\n      <Form.Item label=\"TELEFONO 4\" >\n      <Input style={{ width: 400 }} placeholder=\"5510002000\" id=\"telefono4\" name=\"telefono4\" type=\"number\" onChange={this.onChangeInput} value={this.state.telefono4} />\n      </Form.Item>\n      </MDBCol>\n      <MDBCol> \n      <Form.Item label=\"TELEFONO 5\" >\n      <Input style={{ width: 400 }} placeholder=\"5510002000\" id=\"telefono5\" name=\"telefono5\" type=\"number\" onChange={this.onChangeInput} value={this.state.telefono5} />\n      </Form.Item> \n      </MDBCol>\n      <MDBCol>\n      <div className=\"form-group\">\n        <label htmlFor=\"exampleFormControlTextarea1\">REFERENCIA DEL DOMICILIO</label>\n        <textarea\n          className=\"form-control\"\n          id=\"exampleFormControlTextarea1\"\n          // rows=\"\"\n          onChange={this.onChangeInput}\n          value={this.state.referencia}\n          style={{ width: 400 }}\n        />\n      </div>\n      </MDBCol> \n        <div className=\"text-center\" style={{marginTop:\"3%\"}} >                   \n          <Button className='ant-btnText' onClick={e=>this.onSubmitBtn()} style={{ background: \"#73d13d\" }}>GUARDAR</Button> &nbsp;&nbsp;&nbsp;\n          <Button className='ant-btnText' onClick={e=>this.onClear()} style={{background:\"#40a9ff\"}} >CANCELAR</Button>\n        </div> \n      <MDBCol>\n      </MDBCol>\n      </MDBRow> \n    </Form>\n    </Form> \n        </Card>\n      }\n\n      const columns = [\"ID\",\"OFICINA\",\"CALLE\",\"NO. EXTERIOR\",\"C.P.\",\"MUNICIPIO/ALCALDIA\",\"ESTADO\",\"EDITAR\"]\n      let data = this.state.tablaOficina.map((rows)=>{ \n        botonEditar = <div>            \n        <Button type=\"link\" shape=\"circle\" size=\"large\"\n          onClick={(e)=>this.editar(rows)}\n          >\n        <MDBIcon icon=\"user-edit\" />\n        </Button>\n      </div>\n        return([rows.id_oficina,rows.nombreOficina,rows.calle,rows.numExterior,rows.codigoPostal,rows.ciudad,rows.estado,botonEditar])\n      })\n\n      if(this.state.tablarenderOficina === true){\n      tablaFormulario=\n        <Card>\n        <MUIDataTable    \n        title={\"OFICINAS REGISTRADAS\" }\n        data={data}\n        columns={columns}\n        options={options}\n        />\n      </Card>\n      }\n      modal=\n      <div>\n        <MDBContainer >\n      <MDBModal isOpen={this.state.modal} toggle={this.toggle} size=\"lg\" >\n        <MDBModalHeader toggle={this.toggle}>EDITAR OFICINA</MDBModalHeader>\n        <MDBModalBody>\n        <MDBContainer>\n        <form onSubmit={this.onSubmitBtn2}>\n          <Row>\n            <Col xs=\"6\">\n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>NOMBRE OFICINA:</strong></label>\n                       <input                                              \n                            id=\"nombreOficinaUpdate\"\n                            type=\"text\"\n                            name=\"nombreOficinaUpdate\"\n                            onChange={this.onChangeInput2}\n                            value={this.state.nombreOficinaUpdate}\n                            className=\"form-control\"                            \n                            />\n              \n              </Col>\n              <Col xs=\"6\">       \n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>CALLE:</strong></label>\n                        <input                                          \n                              id=\"calleUpdate\"\n                              type=\"text\"\n                              name=\"calleUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.calleUpdate }\n                              className=\"form-control\"                              \n                              />\n            </Col> \n          </Row>\n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>NO.EXTERIOR:</strong></label>\n              <input                                          \n                              id=\"numExteriorUpdate\"\n                              type=\"text\"\n                              name=\"numExteriorUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.numExteriorUpdate }\n                              className=\"form-control\"                              \n                              />\n            </Col>       \n            <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>NO.INTERIOR:</strong></label>\n              <input                                          \n                              id=\"numInteriorUpdate\"\n                              type=\"text\"\n                              name=\"numInteriorUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.numInteriorUpdate }\n                              className=\"form-control\"                              \n                              />\n            </Col>          \n          </Row> \n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>CODIGO POSTAL:</strong></label>\n              <input                                          \n                              id=\"cpUpdate\"\n                              type=\"number\"\n                              name=\"cpUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.cpUpdate }\n                              className=\"form-control\"                              \n                              />\n            </Col> \n            <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>COLONIA:</strong></label>\n              <input                                          \n                              id=\"numInteriorUpdate\"\n                              type=\"text\"\n                              name=\"numInteriorUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.coloniaUpdate }\n                              className=\"form-control\"                              \n                              />\n            </Col>  \n            </Row>  \n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" ><strong>ESTADO:</strong></label>\n               <select\n                    className=\"browser-default custom-select\"\n                    type=\"text\"\n                    name=\"estadoUpdate\"\n                    id=\"estadoUpdate\"\n                    onChange={this.onChangeInput2}\n                    value={this.state.estadoUpdate}\n                >\n                 { this.state.tablaEstados.map(rows=>{\n                          return (\n                          <option value  = {rows.nombreEntidad}>{rows.nombreEntidad}</option>\n                          )\n                        })}\n                </select> \n            </Col>  \n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>MUNICIPIO/ALCALDIA: </strong></label>\n              <input                                          \n                              id=\"numExteriorUpdate\"\n                              type=\"text\"\n                              name=\"numExteriorUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.ciudadUpdate }\n                              className=\"form-control\"                                                           \n                              />\n            </Col>       \n        \n          </Row> \n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>TELEFONO 1</strong></label>\n              <input                                          \n                              id=\"telefono1Update\"\n                              type=\"text\"\n                              name=\"telefono1Update\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.telefono1Update }\n                              className=\"form-control\"                              \n                              />\n            </Col>       \n            <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>TELEFONO 2</strong></label>\n              <input                                          \n                              id=\"telefono2Update\"\n                              type=\"text\"\n                              name=\"telefono2Update\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.telefono2Update }\n                              className=\"form-control\"                              \n                              />\n            </Col>          \n          </Row>\n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>TELEFONO 3 </strong></label>\n              <input                                          \n                              id=\"telefono3Update\"\n                              type=\"text\"\n                              name=\"telefono3Update\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.telefono3Update }\n                              className=\"form-control\"                              \n                              />\n            </Col>       \n            <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>TELEFONO 4</strong></label>\n              <input                                          \n                              id=\"telefono4Update\"\n                              type=\"text\"\n                              name=\"telefono4Update\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.telefono4Update }\n                              className=\"form-control\"                              \n                              />\n            </Col>          \n          </Row>\n          <Row>\n          <Col xs=\"6\">\n              <label htmlFor=\"defaultFormLoginPasswordEx\" > <strong>TELEFONO 5 </strong></label>\n              <input                                          \n                              id=\"telefono5Update\"\n                              type=\"text\"\n                              name=\"telefono5Update\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.telefono5Update }\n                              className=\"form-control\"                              \n                              />\n            </Col>\n            <MDBCol>\n            <div className=\"form-group\">\n              <label htmlFor=\"exampleFormControlTextarea1\">REFERENCIA DEL DOMICILIO</label>\n              <textarea\n                className=\"form-control\"\n                id=\"referenciaUpdate\"\n                name=\"referenciaUpdate\"               \n                onChange={this.onChangeInput2}\n                value={this.state.referenciaUpdate}                \n              />\n            </div>\n          </MDBCol>\n         </Row>        \n            <div  className=\"text-center\">\n              <MDBBtn outline color=\"secondary\" size='sm' type=\"submit\"> GUARDAR </MDBBtn>\n              <MDBBtn outline color=\"danger\" size='sm' onClick={e=>this.toggle()}>CANCELAR</MDBBtn>                   \n            </div>\n      </form>\n    </MDBContainer>  \n           \n        </MDBModalBody>\n        <MDBModalFooter>\n        </MDBModalFooter>\n      </MDBModal>\n    </MDBContainer>\n      </div>\n        return(\n              <React.Fragment>   \n              <Menu mode=\"horizontal\" className='menuSide' defaultSelectedKeys={['mail']}>\n                <Menu.Item key=\"mail\"  icon={<EditOutlined />} onClick={e=>this.tablainicio()}>\n                REGISTRAR OFICINA\n                </Menu.Item>\n                <Menu.Item key=\"mail\" icon={<IssuesCloseOutlined />} onClick={e=>this.tablaOficina()}>\n                INF. OFICINAS\n                </Menu.Item>\n                </Menu>\n                {formulario}\n                {tablaFormulario}\n                {modal}\n              </React.Fragment>\n        )\n    }\n    \n}export default catalogoOficina","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\changePassword.js",["446","447","448","449","450","451","452","453","454","455","456"],"import axios from 'axios'\nimport React,{Component} from 'react'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n import'bootstrap-css-only/css/bootstrap.min.css'; \nimport'mdbreact/dist/css/mdb.css';\nimport {  MDBRow,MDBIcon, MDBCol, MDBInput, MDBBtn, MDBCard,MDBCardBody, MDBView} from 'mdbreact';\nimport { Form } from 'reactstrap';\n// import './index.css'\nimport {API} from '../Graphql/Graphql'\nimport { Avatar,Card } from 'antd';\nimport { Form as form, Input, Button, Checkbox,Select,Col } from 'antd';\nimport { UserOutlined} from '@ant-design/icons';\n\nclass ChangePass extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            user:\"\",\n            pass:\"\",\n            dataEmpleados:[]\n        }\n    }\n    \n    onChangeInput =(e)=>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    \n    validacion(){\n        if(this.state.user){\n            axios({\n                url:API,\n                method:'post',\n                data:{\n                    query:`\n                    query{\n                        getEmpleadosByCorreo(data:\"${[this.state.user]}\"){\n                            id_empleado\n                            nombre\n                            apellidos\n                            correo                            \n                       } \n                    }\n                    `\n                }   \n                 }).then(datos=>{\n                     if(datos.data.data.getEmpleadosByCorreo[0]){\n                         this.setState({dataEmpleados:datos.data.data.getEmpleadosByCorreo[0]})\n                     }else{\n                         alert(\"El correo proporcionado no ha sido encontrado\")\n                     }\n                 })\n                 .catch(err=>{\n                     console.log('error',err)\n                     console.log('error',err.response)\n           })\n        }else{\n            alert(\"Por favor ingrese un correo electrónico\")\n        }\n     \n    }\n\n    onSubmitBtn = ()=>{ \n        if(this.state.pass){\n            axios({\n                url:API,\n                method:'post',\n                data:{                    \n                    query:`                    \n                    mutation{                        \n                        updatePasswordEmpleados(data:\"${[this.state.dataEmpleados.id_empleado,this.state.pass]}\"){\n                           message \n                       } \n                    }\n                    `\n                }   \n                 }).then(datos=>{\n                     if(datos.data.data.updatePasswordEmpleados.message === \"actualización exitosa\"){\n                        alert(`Contraseña para ${this.state.dataEmpleados.correo} Actualizada`);\n                        window.location.reload()\n                     }else{\n                         alert(\"Algo salió mal, por favor inténtelo nuevamente\")\n                     }\n                 })\n                 .catch(err=>{\n                     console.log('error',err)\n                     console.log('error',err.response)\n           })\n        }else{\n            alert(\"Por favor ingrese una contraseña válida\")\n\n        }\n \n    }\n    cancelar(){\n        this.props.history.push(\"/\")\n    }\n  \n\n     render(){\n\n\n         let datosClientes;\n         if(this.state.dataEmpleados.id_empleado){\n        let rfc =  <strong>RFC</strong>\n           datosClientes =  <Card style={{width:\"70%\"}}>\n            <table>\n                <tr>\n                    <th><strong>Nombre:</strong></th>\n                    <td>{this.state.dataEmpleados.nombre}&nbsp;{this.state.dataEmpleados.apellidos}</td>\n                </tr>\n            </table>   \n            <center>\n            <MDBBtn  style={{marginTop:\"10%\"}} color='success' size=\"sm\" onClick={e=> this.onSubmitBtn()}>\n             Actualizar contraseña                        \n            </MDBBtn>\n            </center>\n            </Card>\n         }\n         let titulo = <center><strong><h4>Actualizar contraseña</h4></strong></center>\n         return(\n            <React.Fragment>\n                <div id=\"apppages2\">\n               <MDBView>\n                <div style={{marginTop:\"3%\", marginLeft:\"8%\"}} >\n                <MDBCol md=\"5\">\n                <Card title = {titulo} style={{width:\"70%\"}}>       \n                          \n                <div className=\"h5 text-center mb-2\">            \n                </div>\n                                \n                <Form onSubmit={this.onSubmitBtn}  ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n                    <center>\n                <Col span={20}>\n                        \n                        <label><strong>correo</strong></label>                        \n                            <Input id=\"user\" type=\"email\" name=\"user\" onChange={this.onChangeInput} value={this.state.user} required/>\n                      \n                        <label><strong>contraseña</strong></label>\n                            <Input.Password  id=\"pass\" type=\"password\" name=\"contrasena\" onChange={this.onChangeInput} value={this.state.pass} required/>\n                        \n                      \n                </Col> \n                 \n                        <div   style= {{marginTop:\"3%\",marginLeft:\"6%\",display:\"flex\",alignContent:\"space-between\"}}>\n                        {/* <MDBBtn color='primary' size=\"sm\" onClick={e=> this.validacion()}>\n                         Avanzar                            \n                        </MDBBtn>\n                        <MDBBtn  color='danger' size=\"sm\" onClick={e=> this.cancelar()}>\n                          Salir                        \n                        </MDBBtn> */}\n                        <Button className='ant-btnText' onClick={e=> this.validacion()} style={{ background: \"#73d13d\" }}>Validar</Button> &nbsp;&nbsp;&nbsp;\n                        <Button className='ant-btnText' onClick={e=> this.cancelar()} style={{background:\"#40a9ff\"}} >Cancelar</Button>\n\n                        </div>   \n                        </center>         \n                </Form> \n              \n            </Card>\n            </MDBCol> \n            <MDBCol md=\"5\">\n            {datosClientes}     \n            </MDBCol>    \n            </div>\n            </MDBView>            \n            </div> \n                      \n        </React.Fragment>\n        )\n    }\n}\nexport default ChangePass","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\panelConexion\\panelConexion.js",["457","458","459","460","461","462"],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\resolvers\\checkTokenEmpleados.js",["463"],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\signUpCatPuesto.js",["464"],"import React,{Component} from 'react'\nimport { Card,Form,  Input, Button,Select } from 'antd'\nimport axios from 'axios';\nimport {API} from '../Graphql/Graphql'\nimport swal from 'sweetalert';\nimport {MDBIcon,MDBRow,MDBCol}     from 'mdbreact'\nimport MUIDataTable from \"mui-datatables\";\nimport { Menu } from 'antd';\nimport { EditOutlined,IssuesCloseOutlined } from '@ant-design/icons';\nimport './sideNavAdmin.css'\nimport {Row,Col,Form as form} from 'reactstrap'\nimport { MDBContainer,MDBBtn,MDBModal,MDBModalBody,MDBModalHeader,MDBModalFooter } from 'mdbreact';\n\n\n\nclass catalogoPuesto extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      nombrePuesto:'',\n      fk_Puesto:'',\n      nivel:'',\n      tablaPuesto:[],\n      inicioPuesto:true,\n      inicioNiveles:false,\n      tablarenderPuesto:false,      \n      ArrayPuesto:[],\n      modal:false,\n      id_puestoUpdate:\"\",\n      nombrepuestoUpdate:\"\",\n      idUpdate:\"\",\n      nivelUpdate:\"\",\n      tablaPuestoANDNiveles:[]\n    }\n    this.toggle = this.toggle.bind(this)\n    this.onChangeInput2 = this.onChangeInput2.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n   \n  }\n\n componentDidMount(){\n    axios({\n      url:API,\n      method:'post',\n      data:{\n        query:`\n          query{   \n            getTablaPuesto(data:\"${[]}\"){\n              id_puesto\n              puesto\n              message\n              } \n          }\n          `  }           \n       })\n     .then(response => { \n        this.setState({tablaPuesto:response.data.data.getTablaPuesto}) \n      })\n      .catch(err=>{\n         console.log('error' ,err.response)\n      }) \n\n      axios({\n        url:API,\n        method:'post',\n        data:{\n          query:`\n            query{   \n              getTablaPuestoAndNivel(data:\"${[]}\"){\n                id_puesto\n                puesto\n                id\n                nivel\n                fk_puesto\n                message\n                } \n            }\n            `  }           \n         })\n       .then(response => { \n          this.setState({tablaPuestoANDNiveles:response.data.data.getTablaPuestoAndNivel}) \n        })\n        .catch(err=>{\n           console.log('error' ,err.response)\n        }) \n    }\n\n  onChangeInput = (e) =>{\n\n    const {id,value} = e.target;\n    this.setState({\n        [id]:value\n    })\n}\nonChangeInput2 = (e) =>{\n\n  const {id,value} = e.target;\n  this.setState({\n      [id]:value\n  })\n}\nonChangeInput3 = (e) =>{  \n  const {id,value} = e.target;\n  this.setState({\n      [id]:value\n  })\n}\n  handleChange(value){\n    this.setState({fk_Puesto:value})\n  }\n  onClear = ()=>{\n    this.setState = {\n      nombrePuesto:''\n    }       \n  }\n  editar(id){ \n    this.setState({ArrayPuesto:id})  \n    this.setState({\n      id_puestoUpdate:id.id_puesto,\n      nombrepuestoUpdate:id.puesto,\n      idUpdate:id.id,\n      nivelUpdate:id.nivel,\n      mandoUpdate:id.mando,\n    })\n        this.setState({\n          modal:!this.state.modal\n        });   \n  }\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }   \n\n  tablainicio(){\n    this.setState({inicioPuesto:true})\n    this.setState({inicioNiveles:false})\n    this.setState({tablarenderPuesto:false})\n  }\n  tablaNiveles(){\n    this.setState({inicioPuesto:false})\n    this.setState({inicioNiveles:true})\n    this.setState({tablarenderPuesto:false})\n  }\n tablaPuesto(){\n  this.setState({inicioPuesto:false})\n  this.setState({inicioNiveles:false})\n  this.setState({tablarenderPuesto:true})\n }\n  onSubmitBtn =(e)=>{\n    let nombrePuesto = this.state.nombrePuesto.toUpperCase()\n   if(nombrePuesto ){  \n       axios({\n      url: API,\n      method: \"post\",\n      data: {\n        query: `\n                mutation{\n                  signupCatPuesto(data:\"${[nombrePuesto]}\"){  \n                    message\n                     } \n                }\n                `\n      }\n    })\n      .then((response) => { \n       if(response.data.data.signupCatPuesto.message === \"registro exitoso\"){\n           swal({              \n          title: \"\", \n          text:\"Registro exitoso!\",              \n          icon: \"success\",\n          button:false,\n          timer: 1500\n        });  \n        this.setState({nombrePuesto:[]}) \n        setTimeout(function(){\n          window.location.reload()\n           }, 1500);         \n      }else{\n       swal({\n          title:\"Error!\",\n          text: \"Algo salio mal, intentalo nuevamente\",\n          icon: \"error\",\n          button:false\n        }); \n      }          \n      }).catch((err) => {\n        console.log(\"error\", err.response);\n      });     \n\n    }else{\n       swal({\n        title:\"Notificación del sistema\",\n        text: \"Por favor llene los campos obligatorios *\",\n        icon: \"warning\",             \n        button:false\n      }); \n    }        \n  };\n\n\n//  UPDATE DE NIVEL Y PUESTO\nonSubmitBtn2 = async (e)=>{ \n    let id_puestoUpdate = this.state.id_puestoUpdate\n    let nombrepuestoUpdate = this.state.nombrepuestoUpdate.toUpperCase()\n    let idUpdate = this.state.idUpdate\n    let nivelUpdate = this.state.nivelUpdate\n   \n    \n if(nombrepuestoUpdate && nivelUpdate){  \n  await   axios({\n    url: API,\n    method: \"post\",\n    data: {\n      query: `\n              mutation{\n                updatePuesto(data:\"${[id_puestoUpdate,nombrepuestoUpdate]}\"){  \n                  message\n                   } \n              }\n              `\n    }\n  })\n    .then((response) => {     \n    }).catch((err) => {\n      console.log(\"error\", err.response);\n    }); \n    axios({\n      url: API,\n      method: \"post\",\n      data: {\n        query: `\n                mutation{\n                  updateNivel(data:\"${[idUpdate,nivelUpdate]}\"){  \n                    message\n                    } \n                }\n                `\n      }\n    })\n      .then(response => {  \n      // if(response){\n          swal({              \n          title: \"Registro exitoso!\",               \n          icon: \"success\",\n          button:false,\n          timer: 3000\n        });  \n      }).catch((err) => {\n        console.log(\"error\", err.response);\n      });   \n        window.location.reload() \n           \n  }else{\n      swal({\n          text:\"complete los campos requeridos\",\n          icon:\"warning\"\n      })\n  }\n};\n\n\n   onSubmitBtn3 =(e)=>{\n    let fk_puesto = this.state.fk_Puesto\n    let nivel = this.state.nivel.toUpperCase()\n   if(fk_puesto && nivel ){  \n       axios({\n      url: API,\n      method: \"post\",\n      data: {\n        query: `\n                mutation{\n                  sigupCatNiveles(data:\"${[nivel,fk_puesto]}\"){  \n                    message\n                     } \n                }\n                `\n      }\n    })\n      .then((response) => { \n       if(response.data.data.sigupCatNiveles.message === \"registro exitoso\"){\n           swal({              \n          title: \"\", \n          text:\"Registro exitoso!\",              \n          icon: \"success\",\n          button:false,          \n        });  \n        this.setState({nivel:[]})    \n        setTimeout(function(){\n          window.location.reload()\n           }, 1500);    \n      }else{\n       swal({\n          title:\"Error!\",\n          text: \"Algo salio mal, intentalo nuevamente\",\n          icon: \"error\",\n          button:false\n        }); \n      }          \n      }).catch((err) => {\n        console.log(\"error\", err.response);\n      });     \n\n    }else{\n       swal({\n        title:\"Notificación del sistema\",\n        text: \"Por favor llene los campos obligatorios *\",\n        icon: \"warning\",             \n        button:false\n      }); \n    }        \n  };\n\n\n    render(){ \n      const { Option } = Select; \n      let formulario;\n      let formularioNiveles;\n      let tablaFormulario;\n      let botonEditar;\n      let modal;\n      const options={ \n        filterType:\"drowpdawn\",\n        responsive: \"stacked\",\n        print:false,\n        download:false,\n        viewColumns:false,\n        filter: false,\n        elevation:1,\n        selectableRows:\"none\",\n        rowsPerPage:5,\n        textLabels:{\n        body: {\n          noMatch: \"Lo sentimos, no se encontraron registros coincidentes\",\n          toolTip: \" Ordenar\",\n          columnHeaderTooltip: column => `Sort for ${column.label}`\n        },\n        pagination: {\n          next: \"Página siguiente\",\n          previous: \"Página anterior\",\n          rowsPerPage: \"Filas por página:\",\n          displayRows: \"de\",\n        },\n        toolbar: {\n          search: \"Buscar\",\n          downloadCsv: \" Descargar CSV\",\n          print: \"Imprimir \",\n          viewColumns: \"Ver columnas\",\n          filterTable: \"Tabla de filtros\",\n        },\n        filter: {\n          all: \"Todos\",\n          title: \"FILTROS\",\n          reset: \"RESET\",\n        },\n        viewColumns: {\n          title: \"Mostrar columnas\",\n          titleAria: \"Mostrar / Ocultar columnas de tabla\",\n        },\n        selectedRows: {\n          text: \"fila (s) seleccionadas\",\n          delete: \"Eliminar\",\n          deleteAria: \"Eliminar filas seleccionadas\",\n        },      \n      }        \n      } \n\n      let titulo=<h5><strong>PUESTOS CEAV</strong></h5>\n     \n             if(this.state.inicioPuesto === true) {\n              formulario =\n              <Card title={titulo} style={{marginTop:\"2%\", width:\"95%\",marginLeft:\"3%\"}}>\n                <Form\n                  labelCol={{ span: 4 }}\n                  wrapperCol={{ span: 14 }}\n                  layout=\"horizontal\"\n                  >\n                    <Form onSubmitBtn={this.onSubmitBtn}>\n                  <Form.Item label=\" NOMBRE DEL PUESTO\" required >\n                    <Input style={{ width: 400 }} placeholder=\"puesto\" id=\"nombrePuesto\" name=\"nombrePuesto\" type=\"text\" onChange={this.onChangeInput} value={this.state.nombrePuesto}/>\n                  </Form.Item> \n                  <Form.Item>\n                    <div className=\"text-center\">                   \n                            <Button className='ant-btnText' onClick={e=>this.onSubmitBtn()} style={{ background: \"#73d13d\" }}>GUARDAR</Button> &nbsp;&nbsp;&nbsp;\n                            <Button className='ant-btnText' onClick={e=>this.onClear()} style={{background:\"#40a9ff\"}} >CANCELAR</Button>\n                        </div> \n                    </Form.Item>\n                    </Form>\n                </Form> \n              </Card>\n             }      \n            if(this.state.inicioNiveles === true){\n              formularioNiveles=\n              <Card title={titulo} style={{marginTop:\"2%\", width:\"95%\",marginLeft:\"3%\"}}>\n              <Form\n                labelCol={{ span: 4 }}\n                wrapperCol={{ span: 14 }}\n                layout=\"horizontal\"\n                >\n                  <Form onSubmitBtn={this.onSubmitBtn3}>\n                <Form.Item label=\"NOMBRE DEL PUESTO\" required>\n                  <Select\n                   onChange={this.handleChange}\n                   showSearch\n                   style={{ width: 400 }}\n                   placeholder=\"SELECCIONE un puesto\"\n                   optionFilterProp=\"children\"\n                   filterOption={(input, option) =>\n                   option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                   }\n                   filterSort={(optionA, optionB) =>\n                   optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                   }   \n                  >\n                      { this.state.tablaPuesto.map(rows=>{\n                          return (\n                          <option value  = {rows.id_puesto} >{rows.puesto}</option>\n                          )\n                        })}\n                  </Select>\n               </Form.Item>\n\n\n                <Form.Item label=\"NIVEL\" required >\n                  <Input style={{ width: 400 }} placeholder=\"nivel del puesto\" id=\"nivel\" name=\"nivel\" type=\"text\" onChange={this.onChangeInput3} value={this.state.nivel}/>\n                </Form.Item> \n                <Form.Item>\n                  <div className=\"text-center\">                   \n                          <Button className='ant-btnText' onClick={e=>this.onSubmitBtn3()} style={{ background: \"#73d13d\" }}>GUARDAR</Button> &nbsp;&nbsp;&nbsp;\n                          <Button className='ant-btnText' onClick={e=>this.onClear()} style={{background:\"#40a9ff\"}} >CANCELAR</Button>\n                      </div> \n                  </Form.Item>\n                  </Form>\n              </Form> \n            </Card>\n            }\n         \n         const columns = [\"ID\",\"PUESTO\",\"NIVEL\",\"EDITAR\"]\n       \n     \n \n         let data = this.state.tablaPuestoANDNiveles.map((rows)=>{\n           botonEditar = <div>            \n           <Button type=\"link\" shape=\"circle\" size=\"large\"\n             onClick={(e)=>this.editar(rows)}\n             >\n           <MDBIcon icon=\"user-edit\" />\n           </Button>\n         </div>\n           return([rows.id_puesto,rows.puesto,rows.nivel,botonEditar])\n         })\n\n         if(this.state.tablarenderPuesto === true){\n            tablaFormulario=\n              <Card>\n                {/* <Table columns={columns} dataSource={data} /> */}\n                <MUIDataTable    \n                title={\"PUESTOS Y NIVELES REGISTRADOS \" }\n                data={data}\n                columns={columns}\n                options={options}\n                />\n              </Card>\n            }\n            modal=\n            <div>\n              <MDBContainer>\n            <MDBModal isOpen={this.state.modal} toggle={this.toggle}>\n              <MDBModalHeader toggle={this.toggle}>EDITAR PUESTO</MDBModalHeader>\n              <MDBModalBody>\n              <MDBContainer>\n              <form onSubmit={this.onSubmitBtn2}>\n                  <MDBRow>\n                    <MDBCol style={{marginTop:\"5%\", marginBotton:\"5%\"}}>\n                    {/* <form onSubmit={this.onSubmitBtn2}> */}\n                <Row>\n                  <Col xs=\"6\">\n                  <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>PUESTO:</strong></label>\n                             <input                                              \n                                  id=\"nombrepuestoUpdate\"\n                                  type=\"text\"\n                                  name=\"nombrepuestoUpdate\"\n                                  onChange={this.onChangeInput2}\n                                  value={this.state.nombrepuestoUpdate}\n                                  className=\"form-control\"\n                                  />\n                    \n                    </Col>\n                    <Col xs=\"6\">       \n                  <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>NIVEL:</strong></label>\n                              <input                                          \n                                    id=\"nivelUpdate\"\n                                    type=\"text\"\n                                    name=\"nivelUpdate\"\n                                    onChange={this.onChangeInput2}\n                                    value={this.state.nivelUpdate }\n                                    className=\"form-control\"\n                                    \n                                    />\n                  </Col> \n                </Row>  \n               \n                <div style={{marginTop:\"3%\"}} className=\"text-center\">\n                    <MDBBtn outline color=\"secondary\" size='sm' type=\"submit\" >                   \n                      Guardar\n                    </MDBBtn>\n                    <MDBBtn\n                      outline color=\"danger\"\n                      size='sm'\n                      onClick={e=>this.toggle()}                >\n                    Cancelar\n                    </MDBBtn>                   \n                </div>           \n               \n              </MDBCol>\n            </MDBRow>\n            </form>\n          </MDBContainer>             \n              </MDBModalBody>\n              <MDBModalFooter>\n              </MDBModalFooter>\n            </MDBModal>\n          </MDBContainer>\n            </div>\n\n        return(\n          <React.Fragment>   \n         <Menu mode=\"horizontal\" className='menuSide' defaultSelectedKeys={['mail']}>\n          <Menu.Item key=\"mail\"  icon={<EditOutlined />} onClick={e=>this.tablainicio()}>\n          REGISTRAR PUESTO \n          </Menu.Item>\n          <Menu.Item key=\"mail\"  icon={<EditOutlined />} onClick={e=>this.tablaNiveles()}>\n          REGISTRAR NIVELES \n          </Menu.Item>\n          <Menu.Item key=\"mail\" icon={<IssuesCloseOutlined />} onClick={e=>this.tablaPuesto()}>\n          INF. PUESTO\n          </Menu.Item>\n          </Menu>\n          {formulario}\n          {formularioNiveles}\n          {tablaFormulario}\n          {modal}\n         </React.Fragment>\n        )\n    }\n   \n}export default catalogoPuesto;","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\usuarioCEAV\\changePAssword.js",["465","466","467","468","469","470","471","472","473","474"],"import axios from 'axios'\nimport React,{Component} from 'react'\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n import'bootstrap-css-only/css/bootstrap.min.css'; \nimport'mdbreact/dist/css/mdb.css';\nimport {  MDBRow,MDBIcon, MDBCol, MDBInput, MDBBtn, MDBCard,MDBCardBody, MDBView} from 'mdbreact';\nimport { Form } from 'reactstrap';\n// import './index.css'\nimport {API} from '../Graphql/Graphql'\nimport { Avatar,Card } from 'antd';\nimport { Form as form, Input, Button, Checkbox,Select,Col } from 'antd';\n\nclass loginAdminAlfa extends Component{\n    constructor(props){\n        super(props)\n        this.state ={\n            user:\"\",\n            pass:\"\",\n            dataEmpleados:[]\n        }\n    }\n    //  componentWillMount(){\n     \n    // }\n    \n    onChangeInput =(e)=>{\n        const {id,value} = e.target;\n        this.setState({\n            [id]:value\n        })\n    }\n    \n    validacion(){\n        if(this.state.user){\n            axios({\n                url:API,\n                method:'post',\n                data:{\n                    query:`\n                    query{\n                        getEmpleadosByCorreo(data:\"${[this.state.user]}\"){\n                            id_empleado\n                            nombre\n                            apellidos\n                            correo\n                            telefono\n                            ext\n                            area\n                            ubicacion\n                       } \n                    }\n                    `\n                }   \n                 }).then(datos=>{\n                     if(datos.data.data.getEmpleadosByCorreo[0]){\n                         this.setState({dataEmpleados:datos.data.data.getEmpleadosByCorreo[0]})\n                     }else{\n                         alert(\"El correo proporcionado no ha sido encontrado\")\n                     }\n                 })\n                 .catch(err=>{\n                     console.log('error',err)\n                     console.log('error',err.response)\n           })\n        }else{\n            alert(\"Por favor ingrese un correo electrónico\")\n        }\n     \n    }\n\n    onSubmitBtn = ()=>{ \n        // console.log.log(\"estado de dataEmpleados.id_empleado\", this.state.dataEmpleados) \n        if(this.state.pass){\n            axios({\n                url:API,\n                method:'post',\n                data:{                    \n                    query:`                    \n                    mutation{                        \n                        updatePasswordEmpleados(data:\"${[this.state.dataEmpleados.id_empleado,this.state.pass]}\"){\n                           message \n                       } \n                    }\n                    `\n                }   \n                 }).then(datos=>{\n                     if(datos.data.data.updatePasswordEmpleados.message === \"actualización exitosa\"){\n                        alert(`Contraseña para ${this.state.dataEmpleados.correo} Actualizada`);\n                        window.location.reload()\n                     }else{\n                         alert(\"Algo salió mal, por favor inténtelo nuevamente\")\n                     }\n                 })\n                 .catch(err=>{\n                     console.log('error',err)\n                     console.log('error',err.response)\n           })\n        }else{\n            alert(\"Por favor ingrese una contraseña válida\")\n\n        }\n \n    }\n    cancelar(){\n        this.props.history.push(\"/\")\n    }\n  \n\n     render(){\n        // const layout = {\n        //     labelCol: { span: 20 },\n        //     wrapperCol: { span: 16 },\n        //   };\n        //   const { Option} = Select;\n\n         let datosClientes;\n         if(this.state.dataEmpleados.id_empleado){\n        let rfc =  <strong>RFC</strong>\n           datosClientes =  <Card style={{width:\"70%\"}}>\n            <table>\n                <tr>\n                    <th width=\"30%\"><strong>Correo:</strong></th>\n                    <td width=\"70%\">{this.state.dataEmpleados.area}</td>\n                </tr>\n                <tr>\n                    <th><strong>Nombre:</strong></th>\n                    <td>{this.state.dataEmpleados.nombre}&nbsp;{this.state.dataEmpleados.apellidos}</td>\n                </tr>\n            </table>   \n            <center>\n            <MDBBtn  style={{marginTop:\"10%\"}} color='success' size=\"sm\" onClick={e=> this.onSubmitBtn()}>\n             Actualizar contraseña                        \n            </MDBBtn>\n            </center>\n            </Card>\n         }\n         let titulo = <center><strong><h4>Actualizar contraseña</h4></strong></center>\n         return(\n            <React.Fragment>\n                <div id=\"apppages2\">\n               <MDBView>\n                <div style={{marginTop:\"3%\", marginLeft:\"8%\"}} >\n                <MDBCol md=\"5\">\n                <Card title = {titulo} style={{width:\"70%\"}}>       \n                          \n                <div className=\"h5 text-center mb-2\">            \n                    <MDBIcon far icon=\"user-circle\" size='4x' style= {{color:\"#626263\"}} />\n                </div>\n                                \n                <Form onSubmit={this.onSubmitBtn}  ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\n                    <center>\n                <Col span={20}>\n                        \n                        <label><strong>correo</strong></label>                        \n                            <Input id=\"user\" type=\"email\" name=\"user\" onChange={this.onChangeInput} value={this.state.user} required/>\n                      \n                        <label><strong>contraseña</strong></label>\n                            <Input.Password  id=\"pass\" type=\"password\" name=\"contrasena\" onChange={this.onChangeInput} value={this.state.pass} required/>\n                        \n                      \n                </Col> \n                 \n                        <div   style= {{marginTop:\"3%\",marginLeft:\"6%\",display:\"flex\",alignContent:\"space-between\"}}>\n                        <MDBBtn color='primary' size=\"sm\" onClick={e=> this.validacion()}>\n                         Avanzar                            \n                        </MDBBtn>\n                        <MDBBtn  color='danger' size=\"sm\" onClick={e=> this.cancelar()}>\n                          Salir                        \n                        </MDBBtn>\n                        </div>   \n                        </center>         \n                </Form> \n              \n            </Card>\n            </MDBCol> \n            <MDBCol md=\"5\">\n            {datosClientes}     \n            </MDBCol>    \n            </div>\n            </MDBView>            \n            </div> \n                      \n        </React.Fragment>\n        )\n    }\n}\nexport default loginAdminAlfa","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\resolvers\\checkTokenAdmin.js",["475"],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\Graphql\\Graphql.js",[],"D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\tablaDataEmpleados.js",["476","477","478","479"],"import  React, {Component} from \"react\"\nimport {  Button,  Card, Form as form,Avatar} from 'antd';\nimport {MDBIcon,MDBContainer,MDBModal,MDBModalHeader,MDBRow,MDBBtn,MDBCol,MDBModalBody,MDBModalFooter,\n         MDBCard,MDBCardBody,MDBCardImage,MDBCardTitle,MDBCardText} from 'mdbreact'\nimport axios from 'axios'\nimport {API} from '../Graphql/Graphql';\nimport MUIDataTable from \"mui-datatables\";\nimport swal from 'sweetalert'\nimport {Row,Col,Form,input} from 'reactstrap';\nimport { UserOutlined} from '@ant-design/icons';\n\nclass tablaDataEmpleado extends Component{\n  constructor(props){\n    super(props)\n    this.state={\n      tablaEmpledos:[],\n      modal:false,\n      tablaInicio:true,\n      dataID:[],\n      arrayEmpleados:[],\n      modal:false,\n      modal2:false,\n      informacionEmpleado:[],\n      id_empleadoUpdate:'',\n      nombreUpdate:'',\n      apellidosUpdate:'',\n      curpUpdate:'',\n      rfcUpdate:'',\n      correoUpdate:'',\n      numEmpleadoUpdate:'',\n      telefonoUpdate:'',\n      extUpdate:'',\n      idUpdate:'',\n      nivelUpdate:'',\n      departamentoUpdate:'',\n      statusEmpleadoUpdate:'',\n      id_oficinaUpdate:'',\n      nombreOficinaUpdate:'',\n      id_areaUpdate:'', \n      nombreAreaUpdate:'',\n      id_puestoUpdate:'',\n      puestoUpdate:'',\n      id_personalUpdate:'',\n      tipoPersonalUpdate:'',\n      id_nivelUpdate:'',\n      nombreNivelUpdate:'',\n      fk_puesto:'',\n      arrayOficina:[],\n      arrayArea:[],\n      arrayPersonal:[],\n      arrayPuesto:[],\n      getTablaNivel:[],\n      fk_nivelUpdate:'',\n      tablaFilterEmpledos:[],\n      filtro:[]\n      \n    }\n    this.toggle = this.toggle.bind(this) \n    this.toggle2 = this.toggle2.bind(this) \n  }\n  toggle = () => {\n    this.setState({\n      modal: !this.state.modal\n    });\n  }\n  toggle2 = () => {\n    this.setState({\n      modal2: !this.state.modal2\n    });\n  } \n  componentDidMount()  {\n    let filtro=[] \n      axios({\n            url:API,\n            method:'post',\n            data:{\n              query:`\n                query{   \n                  getTablaDataEmpleado(data:\"${[\"\"]}\"){\n                    id_empleado\n                    nombre\n                    apellidos\n                    curp\n                    rfc\n                    correo\n                    numEmpleado\n                    telefono\n                    ext\n                    dependencia\n                    statusEmpleado\n                    departamento\n                    nombreOficina\n                    calle\n                    numExterior\n                    numInterior\n                    colonia\n                    codigoPostal\n                    ciudad\n                    estado\n                    telefono1\n                    telefono2\n                    telefono3\n                    telefono4\n                    telefono5\n                    referencia\n                    id_roles\n                    usuarios\n                    id_area\n                    nomeclatura\n                    numSerie\n                    nombreArea\n                    id_puesto\n                    puesto\n                    id\n                    nivel\n                    fk_puesto\n                    id_personal\n                    tipoPersonal\n                    id_fecha\n                    fechaAlta\n                    fechaBaja\n                    fechaNotificacionAlta\n                    fechaNotificacionBaja\n                    fk_oficinas\n                    fk_rol\n                    fk_area\n                    fk_puesto\n                    fk_nivel\n                    fk_personal\n                    id_oficina\n                    message \n                    } \n                }\n                `  }           \n             })\n           .then(response => { \n              this.setState({tablaEmpledos:response.data.data.getTablaDataEmpleado})\n\n            })\n            .catch(err=>{\n               console.log('error' ,err.response)\n            }) \n            axios({\n              url:API,\n              method:'post',\n              data:{\n                query:`\n                  query{   \n                    getTablaArea(data:\"${[]}\"){\n                      id_area\n                      nombreArea\n                      message\n                      } \n                  }\n                  `  }           \n                })\n              .then(response => { \n              this.setState({arrayArea:response.data.data.getTablaArea}) \n              })\n              .catch(err=>{\n                  console.log('error' ,err.response)\n              }) \n            axios({\n              url:API,\n              method:'post',\n              data:{\n                query:`\n                  query{   \n                    getTablaPersonal(data:\"${[]}\"){\n                      id_personal\n                      tipoPersonal\n                      message\n                      } \n                  }\n                  `  }           \n                })\n              .then(response => { \n              this.setState({arrayPersonal:response.data.data.getTablaPersonal}) \n              })\n              .catch(err=>{\n                  console.log('error' ,err.response)\n              }) \n            axios({\n              url:API,\n              method:'post',\n              data:{\n                query:`\n                  query{   \n                    getTablaPuesto(data:\"${[]}\"){\n                      id_puesto\n                      puesto\n                      message\n                      } \n                  }\n                  `  }           \n              })\n            .then(response => { \n              this.setState({arrayPuesto:response.data.data.getTablaPuesto}) \n              })\n              .catch(err=>{\n                console.log('error',err.response)\n              }) \n              axios({\n                url:API,\n                method:'post',\n                data:{\n                  query:`\n                    query{   \n                      getTablaOficinas(data:\"${[]}\"){\n                        id_oficina\n                        nombreOficina\n                        message\n                        } \n                    }\n                    `  }           \n                 })\n               .then(response => { \n                this.setState({arrayOficina:response.data.data.getTablaOficinas}) \n                })\n                .catch(err=>{\n                   console.log('error' ,err.response)\n                }) \n              \n             axios({\n                  url:API,\n                  method:'post',\n                  data:{\n                    query:`\n                      query{   \n                        getTablalistaNivel(data:\"${[]}\"){\n                          id\n                          nivel                                               \n                          message\n                          } \n                      }\n                      `  }           \n                   })\n                 .then(response => { \n                    this.setState({getTablaNivel:response.data.data.getTablalistaNivel}) \n                  })\n                  .catch(err=>{\n                     console.log('error' ,err.response)\n                  }) \n    }\n\n    onChangeInput2 =(e)=>{\n      const {id,value} = e.target;\n      this.setState({\n          [id]:value\n      })\n    } \n\n    editar(id){\n      this.setState({arrayEmpleados:id})\n      this.setState({\n        id_empleadoUpdate:id.id_empleado,\n        nombreUpdate:id.nombre,\n        apellidosUpdate:id.apellidos,\n        curpUpdate:id.curp,\n        rfcUpdate:id.rfc,\n        correoUpdate:id.correo,\n        numEmpleadoUpdate:id.numEmpleado,\n        telefonoUpdate:id.telefono,\n        extUpdate:id.ext,\n        statusEmpleadoUpdate:id.statusEmpleado,\n        id_oficinaUpdate:id.id_oficina,\n        nombreOficinaUpdate:id.nombreOficina,       \n        id_areaUpdate:id.id_area,\n        nombreAreaUpdate:id.nombreArea,\n        id_puestoUpdate:id.id_puesto,\n        puestoUpdate:id.puesto,\n        id_personalUpdate:id.id_personal,\n        tipoPersonalUpdate:id.tipoPersonal,\n        fk_puesto:id.fk_puesto,\n        fk_nivelUpdate:id.fk_nivel,\n        id_nivelUpdate:id.id,\n        departamentoUpdate:id.departamento\n        // fk_nivelUpdate:id.nivel\n      })   \n      this.setState({\n        modal:!this.state.modal\n      })\n      \n    }\n\n    informacion(id){\n      this.setState({informacionEmpleado:id})    \n      this.setState({\n        modal2:!this.state.modal2\n      })\n    }\n\n\n    onSubmitBtn2 = (e)=>{  \n      e.preventDefault(); \n      let id_empleado = this.state.id_empleadoUpdate\n      let nombre = this.state.nombreUpdate.toUpperCase()\n      let apellidos = this.state.apellidosUpdate.toUpperCase()\n      let curp = this.state.curpUpdate.toUpperCase()\n      let rfc = this.state.rfcUpdate.toUpperCase()\n      let correo = this.state.correoUpdate\n      let numEmpleado = this.state.numEmpleadoUpdate\n      let telefono = this.state.telefonoUpdate\n      let ext = this.state.extUpdate \n      let statusEmpleado = this.state.statusEmpleadoUpdate\n      let departamento = this.state.departamentoUpdate\n      let fk_oficinas = this.state.id_oficinaUpdate\n      let fk_area = this.state.id_areaUpdate\n      let fk_puesto = this.state.id_puestoUpdate\n      let fk_personal = this.state.id_personalUpdate\n      let fk_nivel = this.state.fk_nivelUpdate\n      if( nombre && apellidos  &&  correo && numEmpleado && telefono  && statusEmpleado ){  \n          axios({\n         url: API,\n         method: \"post\",\n         data: {\n           query: `\n                   mutation{\n                    updateEmpleados(data:\"${[id_empleado,nombre,apellidos,curp,rfc,correo,numEmpleado,telefono,ext,statusEmpleado,departamento,fk_oficinas,fk_area,fk_puesto,fk_nivel,fk_personal]}\"){  \n                       message\n                        } \n                   }\n                   `\n         }\n       })\n         .then((response) => {\n          if(response.data.data.updateEmpleados.message === \"actualizacion exitosa\"){\n             swal({              \n             title:\"Registro exitoso!\",   \n             text:\"los datos se actualizaron correctamente\",          \n             icon:\"success\",\n             button:true\n           }); \n           setTimeout(function(){\n             window.location.reload()\n              }, 1500); \n         }else{\n          swal({\n             title:\"Notificación del sistema\",\n             text: \"Algo salio mal, intentalo nuevamente\",\n             icon: \"error\",\n             button:false\n           }); \n         }          \n         }).catch((err) => {\n           console.log(\"error\", err.response);\n         });\n       } else{\n        swal({\n          title:\"\",\n          text:\"Por favor complete los campos requeridos *\",\n          icon:\"warning\",\n          buttons:false,\n          timer:1000\n        })\n      }      \n     };\n\n// **************************************\n// onSubmitBtn =  (e)=>{ \n//   e.preventDefault(); \n//   let id_empleado = this.state.id_empleadoUpdate\n//   let nombre = this.state.nombreUpdate.toUpperCase()\n//   let apellidos = this.state.apellidosUpdate.toUpperCase()\n//   let curp = this.state.curpUpdate.toUpperCase()\n//   let rfc = this.state.rfcUpdate.toUpperCase()\n//   let correo = this.state.correoUpdate\n//   let numEmpleado = this.state.numEmpleadoUpdate\n//   let telefono = this.state.telefonoUpdate\n//   let ext = this.state.extUpdate \n//   let statusEmpleado = this.state.statusEmpleadoUpdate\n//   let departamento = this.state.departamentoUpdate\n//   let fk_oficinas = this.state.id_oficinaUpdate\n//   let fk_area = this.state.id_areaUpdate\n//   let fk_puesto = this.state.id_puestoUpdate\n//   let fk_personal = this.state.id_personalUpdate\n//   let fk_nivel = this.state.fk_nivelUpdate\n//   if( nombre && apellidos  &&  correo && numEmpleado && telefono  && statusEmpleado ){  \n//     if(statusEmpleado ===\"false\"){\n//       axios({\n//         url: API,\n//         method: \"post\",\n//         data: {\n//           query: `\n//                   mutation{\n//                    updateEmpleados(data:\"${[id_empleado,nombre,apellidos,curp,rfc,correo,numEmpleado,telefono,ext,statusEmpleado,departamento,fk_oficinas,fk_area,fk_puesto,fk_nivel,fk_personal]}\"){  \n//                       message\n//                        } \n//                   }\n//                   `\n//         }\n//       })\n//     .then((response) => {   \n//       console.log(\"response\",response)  \n//     }).catch((err) => {\n//       console.log(\"error\", err.response);\n//     }); \n    \n//       axios({\n//         url: API,\n//         method: \"post\",\n//         data: {\n//           query: `\n//                   mutation{\n//                   signupDataFechanotificaciones(data:\"${[fechaAlta,fechaBaja,fechaNotificacionAlta,fechaNotificacionBaja,numEmpleado]}\"){  \n//                       message\n//                       } \n//                   }\n//                   `\n//         }\n//       })\n//         .then(response => {     \n//             swal({              \n//             title: \"Registro exitoso!\",               \n//             icon: \"success\",\n//             button:false,\n//             timer: 3000\n//           });  \n//         }).catch((err) => {\n//           console.log(\"error\", err.response);\n//         });   \n//           window.location.reload() \n//     } \n// }\n// else{\n//     swal({\n//         text:\"complete los campos requeridos\",\n//         icon:\"warning\"\n//     })\n// }\n// };\n\n\n    \n    render(){   \n\n       let botonEditar;   \n       let botonInformacion; \n       let modal;\n       let modal2;\n       let infEmpleado = this.state.informacionEmpleado;\n      const options={ \n        filterType:\"drowpdawn\",\n        responsive: \"stacked\",\n        print:false,\n        download:false,\n        viewColumns:false,\n        elevation:0,\n        selectableRows:\"none\",\n        rowsPerPage:5,\n        textLabels:{\n        body: {\n          noMatch: \"Lo sentimos, no se encontraron registros coincidentes\",\n          toolTip: \" Ordenar\",\n          columnHeaderTooltip: column => `Sort for ${column.label}`\n        },\n        pagination: {\n          next: \"Página siguiente\",\n          previous: \"Página anterior\",\n          rowsPerPage: \"Filas por página:\",\n          displayRows: \"de\",\n        },\n        toolbar: {\n          search: \"Buscar\",\n          downloadCsv: \" Descargar CSV\",\n          print: \"Imprimir \",\n          viewColumns: \"Ver columnas\",\n          filterTable: \"Tabla de filtros\",\n        },\n        filter: {\n          all: \"Todos\",\n          title: \"FILTROS\",\n          reset: \"RESET\",\n        },\n        viewColumns: {\n          title: \"Mostrar columnas\",\n          titleAria: \"Mostrar / Ocultar columnas de tabla\",\n        },\n        selectedRows: {\n          text: \"fila (s) seleccionadas\",\n          delete: \"Eliminar\",\n          deleteAria: \"Eliminar filas seleccionadas\",\n        },      \n      }        \n      } \n\n      modal=\n      <div>\n        <MDBContainer>\n      <MDBModal isOpen={this.state.modal} toggle={this.toggle} size=\"lg\">\n        <MDBModalHeader toggle={this.toggle} >EDITAR INFORMACIÓN</MDBModalHeader>\n        <MDBModalBody>\n        <MDBContainer>\n        <form onSubmit={this.onSubmitBtn2}>\n            <MDBRow>\n              <MDBCol style={{marginTop:\"5%\", marginBotton:\"5%\"}}>\n          <Row>\n            <Col xs=\"6\">\n          <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>NÚMERO DE EMPLEADO: *</strong></label>\n                    <input                                              \n                          id=\"numEmpleadoUpdate\"\n                          type=\"text\"\n                          name=\"numEmpleadoUpdate\"\n                          onChange={this.onChangeInput2}\n                          value={this.state.numEmpleadoUpdate}\n                          className=\"form-control\"         \n                          />\n            \n            </Col>\n           <Col xs=\"6\">\n            <label htmlFor=\"defaultFormLoginPasswordEx\">STATUS EMPLEADO: *</label>\n            <select\n             className=\"browser-default custom-select \"\n             type=\"select\"\n             name=\"statusEmpleadoUpdate\"\n             id=\"statusEmpleadoUpdate\"\n             onChange={this.onChangeInput2}\n             value={this.state.statusEmpleadoUpdate}             \n              >\n             <option value=\"true\">Alta</option>\n             <option value=\"false\" >Baja</option>\n            </select>   \n            </Col> \n          </Row>\n          <br></br>\n          <Row>\n            <Col xs=\"6\">\n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>NOMBRE: *</strong></label>\n                       <input                                              \n                            id=\"nombreUpdate\"\n                            type=\"text\"\n                            name=\"nombreUpdate\"\n                            onChange={this.onChangeInput2}\n                            value={this.state.nombreUpdate}\n                            className=\"form-control\"            \n                            />\n              \n              </Col>\n              <Col xs=\"6\">       \n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>APELLIDOS: *</strong></label>\n                        <input                                          \n                              id=\"apellidosUpdate\"\n                              type=\"text\"\n                              name=\"apellidosUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.apellidosUpdate}\n                              className=\"form-control\"             \n                              />\n            </Col> \n          </Row>\n          <br></br>\n          <Row>\n          <Col xs=\"6\">       \n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>CURP: </strong></label>\n                        <input                                          \n                              id=\"curpUpdate\"\n                              type=\"text\"\n                              name=\"curpUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.curpUpdate }\n                              className=\"form-control\"             \n                              />\n            </Col>  \n            <Col xs=\"6\">       \n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>RFC: </strong></label>\n                        <input                                          \n                              id=\"rfcUpdate\"\n                              type=\"text\"\n                              name=\"rfcUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.rfcUpdate }\n                              className=\"form-control\"             \n                              />\n            </Col>        \n          </Row> \n          <br></br>\n          <Row>\n          <Col xs=\"6\">       \n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>CORREO: *</strong></label>\n                        <input                                          \n                              id=\"correoUpdate\"\n                              type=\"text\"\n                              name=\"correoUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.correoUpdate }\n                              className=\"form-control\"           \n                              />\n            </Col>  \n            <Col xs=\"6\">       \n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>TELEFONO: *</strong></label>\n                        <input                                          \n                              id=\"telefonoUpdate\"\n                              type=\"text\"\n                              name=\"telefonoUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.telefonoUpdate }\n                              className=\"form-control\"            \n                              />\n            </Col>      \n          </Row>  \n          <br></br>\n          <Row>\n          <Col xs=\"6\">       \n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>Ext: </strong></label>\n                        <input                                          \n                              id=\"extUpdate\"\n                              type=\"text\"\n                              name=\"extUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.extUpdate }\n                              className=\"form-control\"             \n                              />\n            </Col>\n            <Col xs=\"6\">       \n            <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>DEPARTAMENTO: </strong></label>\n                        <input                                          \n                              id=\"departamentoUpdate\"\n                              type=\"text\"\n                              name=\"departamentoUpdate\"\n                              onChange={this.onChangeInput2}\n                              value={this.state.departamentoUpdate}\n                              className=\"form-control\"             \n                              />\n            </Col>\n          </Row> \n          <br></br> \n          <Row>\n          <Col xs=\"6\">\n            <label htmlFor=\"defaultFormLoginPasswordEx\">OFICINA: *</label>\n            <select\n             className=\"browser-default custom-select \"\n             type=\"select\"\n             name=\"id_oficinaUpdate\"\n             id=\"id_oficinaUpdate\"\n             onChange={this.onChangeInput2}\n             value={this.state.id_oficinaUpdate}\n             required\n                  >\n              { this.state.arrayOficina.map(rows=>{\n                return (\n                <option value={rows.id_oficina}>{rows.nombreOficina }</option>\n                )\n              })} \n            </select>   \n            </Col> \n            <Col xs=\"6\">\n            <label htmlFor=\"defaultFormLoginPasswordEx\">ÁREA: *</label>\n            <select\n             className=\"browser-default custom-select \"\n             type=\"select\"\n             name=\"id_areaUpdate\"\n             id=\"id_areaUpdate\"\n             onChange={this.onChangeInput2}\n             value={this.state.id_areaUpdate}\n             required\n              >\n              { this.state.arrayArea.map(rows=>{\n                return (\n                <option value={rows.id_area}>{rows.nombreArea }</option>\n                )\n              })} \n            </select>   \n            </Col> \n          </Row> \n          <br></br>\n          <Row>\n            <Col xs=\"6\">\n            <label htmlFor=\"defaultFormLoginPasswordEx\">PUESTO: *</label>\n            <select\n             className=\"browser-default custom-select \"\n             type=\"select\"\n             name=\"id_puestoUpdate\"\n             id=\"id_puestoUpdate\"\n            //  onClick={(e)=>this.nivel()}\n             onChange={this.onChangeInput2}\n             value={this.state.id_puestoUpdate}\n             required\n              >\n              { this.state.arrayPuesto.map(rows=>{\n                return (\n                <option value={rows.id_puesto}>{rows.puesto}</option>\n                )\n              })} \n            </select>   \n            </Col> \n            <Col xs=\"6\">\n            <label htmlFor=\"defaultFormLoginPasswordEx\">NIVEL: *</label>\n            <select\n             className=\"browser-default custom-select \"\n             type=\"select\"\n             name=\"fk_nivelUpdate\"\n             id=\"fk_nivelUpdate\"\n             onChange={this.onChangeInput2}\n             value={this.state.fk_nivelUpdate}\n             \n\n            //  required\n              >\n              { this.state.getTablaNivel.map(rows=>{            \n                return (\n                <option value={rows.id}>{rows.nivel}</option>\n                )\n              })} \n            </select>   \n            </Col> \n          </Row> \n          <Row>\n          <Col xs=\"6\">\n            <label htmlFor=\"defaultFormLoginPasswordEx\">TIPO PERSONAL: *</label>\n            <select\n             className=\"browser-default custom-select \"\n             type=\"select\"\n             name=\"id_personalUpdate\"\n             id=\"id_personalUpdate\"\n             onChange={this.onChangeInput2}\n             value={this.state.id_personalUpdate}\n             required\n              >\n              {this.state.arrayPersonal.map(rows=>{\n                return (\n                <option value={rows.id_personal}>{rows.tipoPersonal }</option>\n                )\n              })} \n            </select>   \n            </Col>\n          </Row>       \n         \n          <div style={{marginTop:\"3%\"}} className=\"text-center\">\n              <MDBBtn outline color=\"secondary\" size='sm' type=\"submit\">                   \n                GUARDAR\n              </MDBBtn>\n              <MDBBtn\n                outline color=\"danger\"\n                size='sm'\n                onClick={e=>this.toggle()} >\n              CANCELAR\n              </MDBBtn>                   \n          </div>  \n        </MDBCol>\n      </MDBRow>\n      </form>\n    </MDBContainer>             \n        </MDBModalBody>\n        <MDBModalFooter>\n        </MDBModalFooter>\n      </MDBModal>\n    </MDBContainer>\n      </div>\n\n          const columns = [\"ID\",\"NO. EMPLEADO\",\"NOMBRE\",\"UNIDAD ADMINISTRATIVA\",\"PUESTO\",\"CORREO\",\"EXT.\",\"EDITA\",\"INF.\"];  \n          let data1  \n          let array=[]        \n\n          \n           this.state.tablaEmpledos.map((rows)=>{ \n            if(rows.statusEmpleado ===\"true\") {\n              array.push(rows)\n            }\n          })\n\n      data1 = array.map((rows)=>{      \n                botonEditar =\n                 <div>            \n                  <Button  style={{backgroundColor:\"#95de64\"}} shape=\"circle\" size=\"large\" onClick={(e)=>this.editar(rows)}>\n                  <MDBIcon  far icon=\"edit\" />\n                  </Button>\n                </div>\n  \n                botonInformacion =\n                 <div>            \n                <Button type=\"primary\" shape=\"circle\" size=\"large\"\n                  onClick={(e)=>this.informacion(rows)}\n                  >\n                <MDBIcon  icon=\"info\"/>\n                </Button>\n                </div> \n               return([rows.id_empleado,rows.numEmpleado,rows.nombre +\" \"+ rows.apellidos,rows.nombreArea,rows.departamento,rows.correo,rows.ext,botonEditar,botonInformacion])\n              })\n          \n     \n         let tablaInicio = \n         <div>\n           <Card  style={{marginTop:\"1%\",width:\"95%\" }}>  \n           <MUIDataTable    \n           title={\"DIRECTORIO CEAV\" }\n           data={data1}\n           columns={columns}\n           options={options}\n           />\n           </Card> \n           </div>\n\n\n       let statusEmpleado \n       if(infEmpleado.statusEmpleado === \"true\"){\n        \n        statusEmpleado = <strong><font color = \"#118BDF\">ACTIVO</font></strong>\n       }\n       if(infEmpleado.statusEmpleado === \"false\"){\n        statusEmpleado = <strong><font color = \"#ED2110\">BAJA</font></strong>\n       } \n\n\n          modal2=\n          <div>\n            <MDBContainer>\n          <MDBModal isOpen={this.state.modal2} toggle={this.toggle2} size=\"fluid\">\n            <MDBModalHeader toggle={this.toggle2}><center>INFORMACIÓN DEL USARIO</center></MDBModalHeader>\n            <MDBModalBody>\n            <MDBContainer>\n              <MDBRow >\n                <MDBCol md=\"8\"><h6>NO.Empleado:&nbsp;<strong><font color = \"#000\">{infEmpleado.numEmpleado}</font></strong></h6></MDBCol>\n                <MDBCol md=\"4\"><h6>Status:&nbsp;<strong color=\"red\">{statusEmpleado}</strong></h6 ></MDBCol>\n              </MDBRow>         \n            </MDBContainer>\n              <MDBContainer style={{marginTop:\"2%\", marginBottom:\"5%\"}} >\n                <MDBRow>\n                <MDBCol md=\"4\">\n                <MDBCol style={{width:\"100%\"}} >\n                <MDBCard>          \n                  <MDBCardBody>\n                    <center>\n                    <Avatar   className='useLogo' size={64}  style={{ backgroundColor: '#87d068' }} icon={<UserOutlined />} />           \n                      <br></br>               \n                    <MDBCardTitle>{infEmpleado.nombre}&nbsp;{infEmpleado.apellidos}</MDBCardTitle>\n                    <MDBCardText><MDBIcon far icon=\"envelope\" />&nbsp;{infEmpleado.correo}</MDBCardText>\n                    <MDBCardText><MDBIcon icon=\"phone\" />&nbsp;{infEmpleado.telefono}&nbsp; Ext:{infEmpleado.ext}</MDBCardText>\n                    <MDBCardText>CURP:&nbsp;{infEmpleado.curp}</MDBCardText>\n                    <MDBCardText>RFC:&nbsp;{infEmpleado.rfc}</MDBCardText>   \n                    </center>\n                  </MDBCardBody>\n                </MDBCard>\n              </MDBCol> \n                </MDBCol>\n                  <MDBCol md=\"8\">\n                    <MDBCard>          \n                    <MDBCardBody>\n                      <center>\n                      <MDBCardTitle>CENTRO DE TRABAJO</MDBCardTitle>\n                      <MDBIcon  far icon=\"building\"  size=\"4x\" style={{marginTop:\"1%\",marginBottom:\"3%\"}}/>\n                      <MDBRow>\n                        <MDBCol size=\"4\"><strong>Oficina</strong><MDBCardText>{infEmpleado.nombreOficina}</MDBCardText></MDBCol>\n                        <MDBCol size=\"4\"><strong>Dirección</strong><MDBCardText>{infEmpleado.calle}</MDBCardText></MDBCol>\n                        <MDBCol size=\"4\"><strong>No.Exterior</strong><MDBCardText>{infEmpleado.numExterior} </MDBCardText></MDBCol>\n                      </MDBRow>\n                       <br></br>\n                      <MDBRow>\n                        <MDBCol sm=\"4\"><strong>C.P.</strong><MDBCardText>{infEmpleado.codigoPostal}</MDBCardText></MDBCol>\n                        <MDBCol sm=\"4\"><strong>Colonia</strong><MDBCardText>{infEmpleado.colonia}</MDBCardText></MDBCol>\n                        <MDBCol sm=\"4\"><strong>Municipio/Alcaldia</strong><MDBCardText>{infEmpleado.ciudad}</MDBCardText></MDBCol>\n                      </MDBRow>\n                       <br></br>\n                      <MDBRow>\n                        <MDBCol md=\"4\"><strong>Estado</strong><MDBCardText>{infEmpleado.estado}</MDBCardText></MDBCol>\n                      </MDBRow>\n                      </center>\n                    </MDBCardBody>\n                  </MDBCard>                 \n                  </MDBCol>                                 \n                </MDBRow>\n                <br></br>\n                <MDBRow  align=\"center\">\n                <MDBCol size=\"6\" sm=\"4\"></MDBCol>\n                <MDBCol size=\"6\" sm=\"8\">\n                  <MDBCard >\n                    <MDBCardImage className=\"img-fluid\"  waves />\n                    <MDBCardBody>\n                      <MDBCardTitle>ÁREA Y PUESTO</MDBCardTitle>\n                      <MDBIcon  icon=\"chalkboard-teacher\"  size=\"4x\" style={{marginTop:\"1%\",marginBottom:\"3%\"}}/>\n                      <MDBRow>\n                        <MDBCol size=\"12\"><strong>Dirección Géneral</strong><MDBCardText>{infEmpleado.nombreArea}</MDBCardText></MDBCol>\n                      </MDBRow>\n                      <MDBRow>\n                        <MDBCol size=\"12\"><strong>Dirección</strong><MDBCardText>{infEmpleado.departamento}</MDBCardText></MDBCol>\n                      </MDBRow>\n                      <br></br>\n                      <MDBRow>\n                        <MDBCol size=\"4\"><strong>Puesto</strong><MDBCardText>{infEmpleado.puesto}</MDBCardText></MDBCol>\n                        <MDBCol size=\"4\"><strong>Nivel</strong><MDBCardText>{infEmpleado.nivel} </MDBCardText></MDBCol>\n                        <MDBCol size=\"4\"><strong>Personal</strong><MDBCardText>{infEmpleado.tipoPersonal} </MDBCardText></MDBCol>                      </MDBRow>\n                    </MDBCardBody>\n                  </MDBCard>                  \n                  </MDBCol>\n                </MDBRow>  \n              </MDBContainer>                    \n            </MDBModalBody>\n            <MDBModalFooter>\n            </MDBModalFooter>\n          </MDBModal>\n          </MDBContainer>\n          </div>\n\n        return(            \n      <React.Fragment>\n            {tablaInicio}           \n            {modal}\n            {modal2}\n      </React.Fragment>\n        )\n    }\n}export default tablaDataEmpleado;","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\fechaNotificaciones.js",["480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496"],"import React, {Component} from 'react'\r\nimport {Card,Button} from 'antd'\r\nimport axios from 'axios';\r\nimport {API} from '../Graphql/Graphql'\r\nimport {MDBIcon} from 'mdbreact'\r\nimport MUIDataTable from \"mui-datatables\";\r\nimport {MDBRow,MDBCol,MDBBtn,MDBModal,MDBContainer,MDBModalBody,MDBModalHeader,MDBModalFooter} from 'mdbreact'\r\nimport { Row,Col,Input } from 'reactstrap'\r\nimport { Select,Space,DatePicker, Form  } from 'antd';\r\nimport swal from 'sweetalert';\r\nimport { MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\n\r\nclass FechaNotificaciones extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            tablaFecha:[],\r\n            ArrayNotiFechas:[],\r\n            modal:false,\r\n            tablarenderNOtificacionFechas:true,            \r\n            id_empleadoUpdate:'',\r\n            nombreUpdate:'',\r\n            apellidosUpdate:'',\r\n            id_fechaUpdate:'',\r\n            fechaAltaUpdate:'',\r\n            fechaBajaUpdate:'',\r\n            fechaNotificacionAltaUpdate:'',\r\n            fechaNotificacionBajaUpdate:'',\r\n            numEmpleadoUpdate:'',   \r\n            fechaAlta1:'',\r\n            fechaBaja1:'',\r\n            fechaNotificacionAlta1:'',\r\n            fechaNotificacionBaja1:'',\r\n            valor1:'', \r\n            valor2:'',\r\n            valor3:'',\r\n            valor4:'',\r\n\r\n        }\r\n        this.handleChange1 = this.handleChange1.bind(this)\r\n         this.handleChange2 = this.handleChange2.bind(this)\r\n         this.handleChange3 = this.handleChange3.bind(this)\r\n         this.handleChange4 = this.handleChange4.bind(this)\r\n         this.toggle = this.toggle.bind(this)\r\n    }\r\n    componentDidMount(){\r\n        axios({\r\n          url:API,\r\n          method:'post',\r\n          data:{\r\n            query:`\r\n              query{   \r\n                getTablaFechaNotificaciones(data:\"${[]}\"){\r\n                    id_empleado\r\n                    nombre\r\n                    apellidos\r\n                    id_fecha\r\n                    fechaAlta\r\n                    fechaBaja\r\n                    fechaNotificacionAlta\r\n                    fechaNotificacionBaja\r\n                    numEmpleado\r\n                    message\r\n                  } \r\n              }\r\n              `  }           \r\n           })\r\n         .then(response => { \r\n            // console.log(\"response\",response)\r\n            this.setState({tablaFecha:response.data.data.getTablaFechaNotificaciones}) \r\n          })\r\n          .catch(err=>{\r\n             console.log('error' ,err.response)\r\n          }) \r\n          this.toggle = this.toggle.bind(this)\r\n      }\r\n\r\n      editar(id){ \r\n        console.log(\"esto es id\",id)\r\n        this.setState({ArrayNotiFechas:id})  \r\n        this.setState({\r\n          id_empleadoUpdate:id.id_empleado,\r\n          nombreUpdate:id.nombre,\r\n          apellidosUpdate:id.apellidos,\r\n          id_fechaUpdate:id.id_fecha,\r\n          fechaAltaUpdate:id.fechaAlta,\r\n          fechaBajaUpdate:id.fechaBaja,\r\n          fechaNotificacionAltaUpdate:id.fechaNotificacionAlta,\r\n          fechaNotificacionBajaUpdate:id.fechaNotificacionBaja,\r\n          numEmpleadoUpdate:id.numEmpleado,        \r\n        })\r\n            this.setState({\r\n              modal:!this.state.modal\r\n            });   \r\n      }\r\n      toggle = () => {\r\n        this.setState({\r\n          modal: !this.state.modal\r\n        });\r\n      } \r\n\r\n      handleChange1(e){\r\n        // console.log(\"e\",e)\r\n        if(e){\r\n          let fecha1 = e._d.toString();\r\n          this.setState({valor1:fecha1})\r\n          // console.log(\"e1\",this.state.fechaAlta1)\r\n        }\r\n      }\r\n      handleChange2(e){\r\n        // console.log(\"e\",e)\r\n        if(e){\r\n          let fecha2 = e._d.toString()\r\n          this.setState({valor2:fecha2})\r\n          console.log(\"e2\",fecha2)\r\n          console.log(\"e2V\",this.state.valor2)\r\n        }\r\n      }\r\n      handleChange3(e){\r\n        if(e){\r\n          let fecha3 = e._d.toString();\r\n          this.setState({valor3:fecha3})\r\n          console.log(\"e3\",fecha3)\r\n        }\r\n      }\r\n      handleChange4(e){\r\n        if(e){\r\n          let fecha4 = e._d.toString();\r\n          this.setState({valor4:fecha4})\r\n          console.log(\"e4\",fecha4)\r\n        }\r\n      }\r\n\r\n      onSubmitBtn =(e)=>{\r\n        // e.preventDefault(); \r\n      let id_fecha = this.state.id_fechaUpdate\r\n      let fechaAlta = this.state.valor1      \r\n      let fechaBaja = this.state.valor2      \r\n      let fechaNotificacionAlta = this.state.valor3 \r\n      let fechaNotificacionBaja = this.state.valor4      \r\n      let fechaAltaUpdate = this.state.fechaAltaUpdate\r\n      let fechaBajaUpdate = this.state.fechaBajaUpdate  \r\n      let fechaNotificacionAltaUpdate = this.state.fechaNotificacionAltaUpdater\n      let fechaNotificacionBajaUpdate = this.state.fechaNotificacionBajaUpdate\r\n       if(id_fecha ){  \r\n           axios({\r\n          url: API,\r\n          method: \"post\",\r\n          data: {\r\n            query: `\r\n                    mutation{\r\n                      updatefechasNotificaciones(data:\"${[id_fecha,fechaAlta || fechaAltaUpdate,fechaBaja || fechaBajaUpdate,fechaNotificacionAlta || fechaNotificacionAltaUpdate,fechaNotificacionBaja || fechaNotificacionBajaUpdate]}\"){  \r\n                        message\r\n                         } \r\n                    }\r\n                    `\r\n          }\r\n        })\r\n          .then((response) => { \r\n            // console.log(\"response\",response)\r\n           if(response.data.data.updatefechasNotificaciones.message === \"actualizacion exitosa\"){\r\n              swal({              \r\n              title:\"actualizacion exitosa\",                            \r\n              icon: \"success\",\r\n              button:false,\r\n              timer: 1500\r\n            });  \r\n            // this.setState({area:[],nomeclatura:[],numSerie:[]})     \r\n            setTimeout(function(){\r\n             window.location.reload()\r\n              }, 1500);     \r\n          }else{\r\n           swal({\r\n              title:\"Error!\",\r\n              text: \"Algo salio mal, intentalo nuevamente\",\r\n              icon: \"error\",\r\n              button:false\r\n            }); \r\n          }          \r\n          }).catch((err) => {\r\n            console.log(\"error\", err.response);\r\n          });     \r\n    \r\n        }\r\n        // else{\r\n        //    swal({\r\n        //     title:\"Notificación del sistema\",\r\n        //     text: \"Por favor llene los campos obligatorios *\",\r\n        //     icon: \"warning\",             \r\n        //     button:false\r\n        //   }); \r\n        // }        \r\n      };\r\n    render(){\r\n      const dateFormatList = ['DD/MM/YYYY', 'DD/MM/YY'];\r\n      const { Option } = Select;\r\n        let botonEditar;\r\n        let tablaFormulario;\r\n        let modal;\r\n        const options={ \r\n            filterType:\"drowpdawn\",\r\n            responsive: \"stacked\",\r\n            print:false,\r\n            download:false,\r\n            viewColumns:false,\r\n            filter: false,\r\n            elevation:1,\r\n            selectableRows:\"none\",\r\n            rowsPerPage:5,\r\n            textLabels:{\r\n            body: {\r\n              noMatch: \"Lo sentimos, no se encontraron registros coincidentes\",\r\n              toolTip: \" Ordenar\",\r\n              columnHeaderTooltip: column => `Sort for ${column.label}`\r\n            },\r\n            pagination: {\r\n              next: \"Página siguiente\",\r\n              previous: \"Página anterior\",\r\n              rowsPerPage: \"Filas por página:\",\r\n              displayRows: \"de\",\r\n            },\r\n            toolbar: {\r\n              search: \"Buscar\",\r\n              downloadCsv: \" Descargar CSV\",\r\n              print: \"Imprimir \",\r\n              viewColumns: \"Ver columnas\",\r\n              filterTable: \"Tabla de filtros\",\r\n            },\r\n            filter: {\r\n              all: \"Todos\",\r\n              title: \"FILTROS\",\r\n              reset: \"RESET\",\r\n            },\r\n            viewColumns: {\r\n              title: \"Mostrar columnas\",\r\n              titleAria: \"Mostrar / Ocultar columnas de tabla\",\r\n            },\r\n            selectedRows: {\r\n              text: \"fila (s) seleccionadas\",\r\n              delete: \"Eliminar\",\r\n              deleteAria: \"Eliminar filas seleccionadas\",\r\n            },      \r\n          }        \r\n          }\r\n          \r\n          const columns = [\"ID\",\"NOMBRE\",\"APELLIDOS\",\"FECHA ALTA\",\"FECHA BAJA\",\"NOTIFICACION ALTA\",\"NOTIFICACION BAJA\",\"EDITAR\"]\r\n            let data = this.state.tablaFecha.map((rows)=>{\r\n            // ****fechaAlta******* \r\n            let dataFechaAlta;\r\n            if(rows.fechaAlta === \"\"){\r\n              dataFechaAlta= \"NO ASIGNADO\"\r\n            }else if(rows.fechaAlta){\r\n              let fechaAlta=rows.fechaAlta       \r\n              const fechaA = new Date(fechaAlta); \r\n              var letrasM1 = new Array (\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"); \r\n              let diaAlta = fechaA.getDate()\r\n              let MesSubstringA = fechaA.getMonth() +1\r\n              let numeroPosicionMesA = parseInt(MesSubstringA,10)\r\n              let mesA  = letrasM1[numeroPosicionMesA - 1] \r\n              let añoA = fechaA.getFullYear()  \r\n               dataFechaAlta = diaAlta +\"/\"+mesA+\"/\"+añoA\r\n            } \r\n            // ****fechaBaja*******\r\n            let dataFechaBaja;\r\n            if(rows.fechaBaja === \"\") {\r\n              dataFechaBaja = \"NO ASIGNADO\"\r\n            }else if (rows.fechaBaja){\r\n              let fechaBaja=rows.fechaBaja       \r\n              const fechaB = new Date(fechaBaja); \r\n              var letrasM2 = new Array (\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"); \r\n              let diaBaja = fechaB.getDate()\r\n              let MesSubstringB = fechaB.getMonth() +1\r\n              let numeroPosicionMesB = parseInt(MesSubstringB,10)\r\n              let mesB  = letrasM2[numeroPosicionMesB - 1] \r\n              let añoB = fechaB.getFullYear()  \r\n              dataFechaBaja = diaBaja +\"/\"+mesB+\"/\"+añoB \r\n            }           \r\n            // ****fechanotificacionAlta*******\r\n            let dataFechaNotificacionAlta;\r\n            if(rows.fechaNotificacionAlta === \"\") {\r\n              dataFechaBaja = \"NO ASIGNADO\"\r\n            }else if (rows.fechaNotificacionAlta){\r\n              let fechaNotAlta=rows.fechaNotificacionAlta       \r\n              const fechaNotA = new Date(fechaNotAlta); \r\n              var letrasM3 = new Array (\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"); \r\n              let diaNotAlta = fechaNotA.getDate()\r\n              let MesSubstringNotA = fechaNotA.getMonth() +1\r\n              let numeroPosicionMesNotA = parseInt(MesSubstringNotA,10)\r\n              let mesNotA  = letrasM3[numeroPosicionMesNotA - 1] \r\n              let añoNotA = fechaNotA.getFullYear()  \r\n              dataFechaNotificacionAlta = diaNotAlta +\"/\"+mesNotA+\"/\"+añoNotA \r\n            }\r\n            // ****fechanotificacionBaja*******\r\n            let dataFechaNotificacionBAja;\r\n            if(rows.fechaNotificacionBaja === \"\") {\r\n              dataFechaNotificacionBAja = \"NO ASIGNADO\"\r\n            }else if (rows.fechaNotificacionBaja){\r\n              console.log(\"esto es rows.fechaNotificacionBaja\",rows.fechaNotificacionBaja)\r\n              let fechaNotBaja=rows.fechaNotificacionBaja       \r\n              const fechaNotB = new Date(fechaNotBaja); \r\n              var letrasM4 = new Array (\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"); \r\n              let diaNotBaja = fechaNotB.getDate()\r\n              let MesSubstringNotB = fechaNotB.getMonth() +1\r\n              let numeroPosicionMesNotB = parseInt(MesSubstringNotB,10)\r\n              let mesNotB  = letrasM4[numeroPosicionMesNotB - 1] \r\n              let añoNotaB = fechaNotB.getFullYear()  \r\n              dataFechaNotificacionBAja = diaNotBaja +\"/\"+mesNotB+\"/\"+añoNotaB \r\n            }\r\n             botonEditar = <div>            \r\n                    <Button type=\"link\" shape=\"circle\" size=\"large\"\r\n                      onClick={(e)=>this.editar(rows)}\r\n                      >\r\n                    <MDBIcon icon=\"user-edit\" />\r\n                    </Button>\r\n                  </div>\r\n              return([rows.id_fecha,rows.nombre,rows.apellidos,dataFechaAlta,dataFechaBaja,dataFechaNotificacionAlta,dataFechaNotificacionBAja,botonEditar])\r\n            })\r\n            if(this.state.tablarenderNOtificacionFechas === true){\r\n            tablaFormulario=\r\n            <Card>\r\n              <MUIDataTable    \r\n               title={\"FECHAS DE ALTAS, BAJA Y NOTIFICACIONES\"}\r\n               data={data}\r\n               columns={columns}\r\n               options={options}\r\n               />\r\n            </Card>\r\n            }\r\n             // ****fechaAlta******* \r\n             let dataFechaAlta;\r\n             if(this.state.fechaAltaUpdate === \"\"){\r\n               dataFechaAlta= \"\"\r\n             }else if(this.state.fechaAltaUpdate){\r\n               let fechaAlta=this.state.fechaAltaUpdate       \r\n               const fechaA = new Date(fechaAlta); \r\n               var letrasM1 = new Array (\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"); \r\n               let diaAlta = fechaA.getDate()\r\n               let MesSubstringA = fechaA.getMonth() +1\r\n               let numeroPosicionMesA = parseInt(MesSubstringA,10)\r\n               let mesA  = letrasM1[numeroPosicionMesA - 1] \r\n               let añoA = fechaA.getFullYear()  \r\n                dataFechaAlta = diaAlta +\"/\"+mesA+\"/\"+añoA\r\n             } \r\n             // ****fechaBaja*******\r\n             let dataFechaBaja;\r\n             if(this.state.fechaBajaUpdate === \"\") {\r\n               dataFechaBaja = \"\"\r\n             }else if (this.state.fechaBajaUpdate){\r\n               let fechaBaja=this.state.fechaBajaUpdate       \r\n               const fechaB = new Date(fechaBaja); \r\n               var letrasM2 = new Array (\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"); \r\n               let diaBaja = fechaB.getDate()\r\n               let MesSubstringB = fechaB.getMonth() +1\r\n               let numeroPosicionMesB = parseInt(MesSubstringB,10)\r\n               let mesB  = letrasM2[numeroPosicionMesB - 1] \r\n               let añoB = fechaB.getFullYear()  \r\n               dataFechaBaja = diaBaja +\"/\"+mesB+\"/\"+añoB \r\n             }\r\n             // ****fechanotificacionAlta*******\r\n             let dataFechaNotificacionAlta;\r\n             if(this.state.fechaNotificacionAltaUpdate === \"\") {\r\n               dataFechaBaja = \"\"\r\n             }else if (this.state.fechaNotificacionAltaUpdate){\r\n               let fechaNotAlta=this.state.fechaNotificacionAltaUpdate      \r\n               const fechaNotA = new Date(fechaNotAlta); \r\n               var letrasM3 = new Array (\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"); \r\n               let diaNotAlta = fechaNotA.getDate()\r\n               let MesSubstringNotA = fechaNotA.getMonth() +1\r\n               let numeroPosicionMesNotA = parseInt(MesSubstringNotA,10)\r\n               let mesNotA  = letrasM3[numeroPosicionMesNotA - 1] \r\n               let añoNotA = fechaNotA.getFullYear()  \r\n               dataFechaNotificacionAlta = diaNotAlta +\"/\"+mesNotA+\"/\"+añoNotA \r\n             }\r\n             // ****fechanotificacionBaja*******\r\n             let dataFechaNotificacionBAja;\r\n             if(this.state.fechaNotificacionBajaUpdate === \"\") {\r\n               dataFechaNotificacionBAja = \"\"\r\n             }else if (this.state.fechaNotificacionBajaUpdate){\r\n               // console.log(\"esto es rows.fechaNotificacionBaja\",rows.fechaNotificacionBaja)\r\n               let fechaNotBaja = this.state.fechaNotificacionBajaUpdate       \r\n               const fechaNotB = new Date(fechaNotBaja); \r\n               var letrasM4 = new Array (\"Enero\",\"Febrero\",\"Marzo\",\"Abril\",\"Mayo\",\"Junio\",\"Julio\",\"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"); \r\n               let diaNotBaja = fechaNotB.getDate()\r\n               let MesSubstringNotB = fechaNotB.getMonth() +1\r\n               let numeroPosicionMesNotB = parseInt(MesSubstringNotB,10)\r\n               let mesNotB  = letrasM4[numeroPosicionMesNotB - 1] \r\n               let añoNotaB = fechaNotB.getFullYear()                \r\n               dataFechaNotificacionBAja = diaNotBaja +\"/\"+mesNotB+\"/\"+añoNotaB\r\n               }\r\n             modal= \r\n             <div>\r\n              {/* <MDBBtn color=\"secondary\" onClick={this.toggle}>Top right</MDBBtn> */}\r\n        <MDBModal isOpen={this.state.modal} toggle={this.toggle} size=\"lg\">\r\n          <MDBModalHeader toggle={this.toggle}><center>{this.state.nombreUpdate}&nbsp;{this.state.apellidosUpdate}</center></MDBModalHeader>\r\n          <MDBModalBody>\r\n            <Form onSubmit={this.onSubmitBtn}> \r\n  <Row>\r\n    <Col xs=\"6\">\r\n    <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>FECHA DE ALTA:</strong></label>\r\n    <br></br>\r\n         <DatePicker style={{ width: 370 }} placeholder={dataFechaAlta}  onChange={this.handleChange1} format={dateFormatList}  size=\"large\"/>\r\n    </Col >\r\n    <Col xs=\"6\">\r\n    <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>FECHA DE BAJA:</strong></label>\r\n         <DatePicker style={{ width: 370 }} placeholder={dataFechaBaja} onChange={this.handleChange2} format={dateFormatList} size=\"large\" />\r\n    </Col >\r\n    <br></br>\r\n    <Col xs=\"6\">\r\n    <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>FECHA NOTIFICACIÓN ALTA:</strong></label>\r\n         <DatePicker style={{ width: 370 }} placeholder={dataFechaNotificacionAlta} onChange={this.handleChange3} format={dateFormatList} size=\"large\" />\r\n    </Col >\r\n    <Col xs=\"6\">\r\n    <label htmlFor=\"defaultFormLoginPasswordEx\"> <strong>FECHA NOTIFICACIÓN BAJA:</strong></label>\r\n         <DatePicker style={{ width: 370 }} placeholder={dataFechaNotificacionBAja}  onChange={this.handleChange4} format={dateFormatList} size=\"large\" />\r\n    </Col >\r\n  </Row>\r\n            <div style={{marginTop:\"3%\"}} className=\"text-center\">\r\n                <MDBBtn outline color=\"secondary\"  onClick={e=>this.onSubmitBtn()} size='sm'>GUARDAR</MDBBtn>\r\n                <MDBBtn outline color=\"danger\" size='sm' onClick={e=>this.toggle()} >CANCELAR</MDBBtn>\r\n            </div>\r\n            </Form>\r\n          </MDBModalBody>\r\n          <MDBModalFooter>           \r\n          </MDBModalFooter>\r\n        </MDBModal>\r\n             </div>\r\n        return(\r\n            <React.Fragment>\r\n                {tablaFormulario}\r\n                {modal}\r\n            </React.Fragment>\r\n\r\n        )         \r\n        \r\n    }\r\n\r\n}export default FechaNotificaciones","D:\\Users\\lizbeth.cuevas\\liz\\respaldoProyecto_ceav-master\\src\\components\\adminCEAV\\tablaDataBAjasEmpleado.js",["497","498","499","500"],{"ruleId":"501","replacedBy":"502"},{"ruleId":"503","replacedBy":"504"},{"ruleId":"505","severity":1,"message":"506","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":13},{"ruleId":"505","severity":1,"message":"509","line":7,"column":8,"nodeType":"507","messageId":"508","endLine":7,"endColumn":14},{"ruleId":"505","severity":1,"message":"510","line":12,"column":8,"nodeType":"507","messageId":"508","endLine":12,"endColumn":21},{"ruleId":"505","severity":1,"message":"511","line":11,"column":3,"nodeType":"507","messageId":"508","endLine":11,"endColumn":15},{"ruleId":"505","severity":1,"message":"512","line":12,"column":3,"nodeType":"507","messageId":"508","endLine":12,"endColumn":9},{"ruleId":"505","severity":1,"message":"513","line":13,"column":3,"nodeType":"507","messageId":"508","endLine":13,"endColumn":11},{"ruleId":"505","severity":1,"message":"514","line":14,"column":3,"nodeType":"507","messageId":"508","endLine":14,"endColumn":15},{"ruleId":"505","severity":1,"message":"515","line":15,"column":3,"nodeType":"507","messageId":"508","endLine":15,"endColumn":17},{"ruleId":"505","severity":1,"message":"516","line":16,"column":3,"nodeType":"507","messageId":"508","endLine":16,"endColumn":17},{"ruleId":"505","severity":1,"message":"517","line":17,"column":3,"nodeType":"507","messageId":"508","endLine":17,"endColumn":13},{"ruleId":"505","severity":1,"message":"518","line":18,"column":3,"nodeType":"507","messageId":"508","endLine":18,"endColumn":17},{"ruleId":"505","severity":1,"message":"519","line":19,"column":3,"nodeType":"507","messageId":"508","endLine":19,"endColumn":19},{"ruleId":"505","severity":1,"message":"520","line":20,"column":3,"nodeType":"507","messageId":"508","endLine":20,"endColumn":13},{"ruleId":"505","severity":1,"message":"521","line":23,"column":29,"nodeType":"507","messageId":"508","endLine":23,"endColumn":44},{"ruleId":"505","severity":1,"message":"522","line":24,"column":9,"nodeType":"507","messageId":"508","endLine":24,"endColumn":15},{"ruleId":"523","severity":1,"message":"524","line":90,"column":3,"nodeType":"525","endLine":90,"endColumn":27},{"ruleId":"526","severity":1,"message":"527","line":131,"column":25,"nodeType":"525","messageId":"528","endLine":131,"endColumn":75,"fix":"529"},{"ruleId":"526","severity":1,"message":"527","line":134,"column":38,"nodeType":"525","messageId":"528","endLine":134,"endColumn":97,"fix":"530"},{"ruleId":"526","severity":1,"message":"527","line":135,"column":39,"nodeType":"525","messageId":"528","endLine":135,"endColumn":99,"fix":"531"},{"ruleId":"505","severity":1,"message":"532","line":7,"column":10,"nodeType":"507","messageId":"508","endLine":7,"endColumn":23},{"ruleId":"505","severity":1,"message":"533","line":8,"column":15,"nodeType":"507","messageId":"508","endLine":8,"endColumn":18},{"ruleId":"505","severity":1,"message":"534","line":12,"column":27,"nodeType":"507","messageId":"508","endLine":12,"endColumn":32},{"ruleId":"535","severity":1,"message":"536","line":146,"column":26,"nodeType":"525","endLine":146,"endColumn":59},{"ruleId":"505","severity":1,"message":"537","line":164,"column":11,"nodeType":"507","messageId":"508","endLine":164,"endColumn":19},{"ruleId":"505","severity":1,"message":"538","line":165,"column":11,"nodeType":"507","messageId":"508","endLine":165,"endColumn":14},{"ruleId":"505","severity":1,"message":"539","line":166,"column":11,"nodeType":"507","messageId":"508","endLine":166,"endColumn":15},{"ruleId":"505","severity":1,"message":"540","line":167,"column":11,"nodeType":"507","messageId":"508","endLine":167,"endColumn":17},{"ruleId":"505","severity":1,"message":"541","line":168,"column":11,"nodeType":"507","messageId":"508","endLine":168,"endColumn":20},{"ruleId":"505","severity":1,"message":"542","line":216,"column":13,"nodeType":"507","messageId":"508","endLine":216,"endColumn":16},{"ruleId":"505","severity":1,"message":"543","line":217,"column":12,"nodeType":"507","messageId":"508","endLine":217,"endColumn":25},{"ruleId":"505","severity":1,"message":"544","line":6,"column":11,"nodeType":"507","messageId":"508","endLine":6,"endColumn":17},{"ruleId":"505","severity":1,"message":"545","line":6,"column":35,"nodeType":"507","messageId":"508","endLine":6,"endColumn":43},{"ruleId":"505","severity":1,"message":"546","line":6,"column":53,"nodeType":"507","messageId":"508","endLine":6,"endColumn":60},{"ruleId":"505","severity":1,"message":"547","line":6,"column":61,"nodeType":"507","messageId":"508","endLine":6,"endColumn":72},{"ruleId":"505","severity":1,"message":"548","line":10,"column":10,"nodeType":"507","messageId":"508","endLine":10,"endColumn":16},{"ruleId":"505","severity":1,"message":"549","line":11,"column":18,"nodeType":"507","messageId":"508","endLine":11,"endColumn":22},{"ruleId":"505","severity":1,"message":"550","line":11,"column":31,"nodeType":"507","messageId":"508","endLine":11,"endColumn":37},{"ruleId":"505","severity":1,"message":"551","line":11,"column":39,"nodeType":"507","messageId":"508","endLine":11,"endColumn":47},{"ruleId":"505","severity":1,"message":"552","line":11,"column":48,"nodeType":"507","messageId":"508","endLine":11,"endColumn":54},{"ruleId":"505","severity":1,"message":"542","line":120,"column":13,"nodeType":"507","messageId":"508","endLine":120,"endColumn":16},{"ruleId":"505","severity":1,"message":"553","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":15},{"ruleId":"505","severity":1,"message":"554","line":2,"column":17,"nodeType":"507","messageId":"508","endLine":2,"endColumn":22},{"ruleId":"505","severity":1,"message":"550","line":2,"column":24,"nodeType":"507","messageId":"508","endLine":2,"endColumn":30},{"ruleId":"505","severity":1,"message":"555","line":2,"column":32,"nodeType":"507","messageId":"508","endLine":2,"endColumn":37},{"ruleId":"505","severity":1,"message":"556","line":2,"column":38,"nodeType":"507","messageId":"508","endLine":2,"endColumn":41},{"ruleId":"505","severity":1,"message":"549","line":2,"column":57,"nodeType":"507","messageId":"508","endLine":2,"endColumn":61},{"ruleId":"505","severity":1,"message":"557","line":3,"column":9,"nodeType":"507","messageId":"508","endLine":3,"endColumn":16},{"ruleId":"505","severity":1,"message":"544","line":3,"column":54,"nodeType":"507","messageId":"508","endLine":3,"endColumn":60},{"ruleId":"505","severity":1,"message":"558","line":3,"column":68,"nodeType":"507","messageId":"508","endLine":3,"endColumn":74},{"ruleId":"505","severity":1,"message":"559","line":7,"column":8,"nodeType":"507","messageId":"508","endLine":7,"endColumn":12},{"ruleId":"505","severity":1,"message":"533","line":8,"column":9,"nodeType":"507","messageId":"508","endLine":8,"endColumn":12},{"ruleId":"505","severity":1,"message":"560","line":8,"column":13,"nodeType":"507","messageId":"508","endLine":8,"endColumn":16},{"ruleId":"505","severity":1,"message":"561","line":8,"column":17,"nodeType":"507","messageId":"508","endLine":8,"endColumn":21},{"ruleId":"505","severity":1,"message":"562","line":10,"column":9,"nodeType":"507","messageId":"508","endLine":10,"endColumn":15},{"ruleId":"505","severity":1,"message":"563","line":12,"column":7,"nodeType":"507","messageId":"508","endLine":12,"endColumn":13},{"ruleId":"505","severity":1,"message":"564","line":118,"column":12,"nodeType":"507","messageId":"508","endLine":118,"endColumn":25},{"ruleId":"505","severity":1,"message":"565","line":119,"column":12,"nodeType":"507","messageId":"508","endLine":119,"endColumn":23},{"ruleId":"505","severity":1,"message":"549","line":2,"column":23,"nodeType":"507","messageId":"508","endLine":2,"endColumn":27},{"ruleId":"505","severity":1,"message":"566","line":2,"column":44,"nodeType":"507","messageId":"508","endLine":2,"endColumn":49},{"ruleId":"505","severity":1,"message":"567","line":3,"column":10,"nodeType":"507","messageId":"508","endLine":3,"endColumn":28},{"ruleId":"505","severity":1,"message":"555","line":4,"column":17,"nodeType":"507","messageId":"508","endLine":4,"endColumn":22},{"ruleId":"505","severity":1,"message":"512","line":8,"column":9,"nodeType":"507","messageId":"508","endLine":8,"endColumn":15},{"ruleId":"505","severity":1,"message":"562","line":219,"column":15,"nodeType":"507","messageId":"508","endLine":219,"endColumn":21},{"ruleId":"505","severity":1,"message":"562","line":195,"column":15,"nodeType":"507","messageId":"508","endLine":195,"endColumn":21},{"ruleId":"505","severity":1,"message":"568","line":9,"column":10,"nodeType":"507","messageId":"508","endLine":9,"endColumn":22},{"ruleId":"569","severity":1,"message":"570","line":212,"column":97,"nodeType":"571","messageId":"572","endLine":212,"endColumn":98},{"ruleId":"505","severity":1,"message":"562","line":327,"column":15,"nodeType":"507","messageId":"508","endLine":327,"endColumn":21},{"ruleId":"505","severity":1,"message":"573","line":4,"column":10,"nodeType":"507","messageId":"508","endLine":4,"endColumn":25},{"ruleId":"505","severity":1,"message":"574","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":13},{"ruleId":"505","severity":1,"message":"575","line":6,"column":9,"nodeType":"507","messageId":"508","endLine":6,"endColumn":12},{"ruleId":"505","severity":1,"message":"576","line":19,"column":10,"nodeType":"507","messageId":"508","endLine":19,"endColumn":17},{"ruleId":"505","severity":1,"message":"577","line":20,"column":79,"nodeType":"507","messageId":"508","endLine":20,"endColumn":91},{"ruleId":"505","severity":1,"message":"578","line":23,"column":8,"nodeType":"507","messageId":"508","endLine":23,"endColumn":25},{"ruleId":"579","severity":1,"message":"580","line":37,"column":13,"nodeType":"581","messageId":"582","endLine":37,"endColumn":35},{"ruleId":"505","severity":1,"message":"583","line":142,"column":40,"nodeType":"507","messageId":"508","endLine":142,"endColumn":47},{"ruleId":"523","severity":1,"message":"524","line":241,"column":21,"nodeType":"525","endLine":241,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":242,"column":21,"nodeType":"525","endLine":242,"endColumn":82},{"ruleId":"526","severity":1,"message":"527","line":266,"column":35,"nodeType":"525","messageId":"528","endLine":266,"endColumn":85,"fix":"584"},{"ruleId":"526","severity":1,"message":"527","line":269,"column":48,"nodeType":"525","messageId":"528","endLine":269,"endColumn":107,"fix":"585"},{"ruleId":"526","severity":1,"message":"527","line":270,"column":49,"nodeType":"525","messageId":"528","endLine":270,"endColumn":109,"fix":"586"},{"ruleId":"505","severity":1,"message":"532","line":7,"column":10,"nodeType":"507","messageId":"508","endLine":7,"endColumn":23},{"ruleId":"505","severity":1,"message":"533","line":8,"column":15,"nodeType":"507","messageId":"508","endLine":8,"endColumn":18},{"ruleId":"505","severity":1,"message":"534","line":12,"column":27,"nodeType":"507","messageId":"508","endLine":12,"endColumn":32},{"ruleId":"535","severity":1,"message":"536","line":137,"column":26,"nodeType":"525","endLine":137,"endColumn":59},{"ruleId":"505","severity":1,"message":"549","line":2,"column":23,"nodeType":"507","messageId":"508","endLine":2,"endColumn":27},{"ruleId":"505","severity":1,"message":"566","line":2,"column":44,"nodeType":"507","messageId":"508","endLine":2,"endColumn":49},{"ruleId":"505","severity":1,"message":"567","line":3,"column":10,"nodeType":"507","messageId":"508","endLine":3,"endColumn":28},{"ruleId":"505","severity":1,"message":"555","line":4,"column":17,"nodeType":"507","messageId":"508","endLine":4,"endColumn":22},{"ruleId":"505","severity":1,"message":"587","line":4,"column":23,"nodeType":"507","messageId":"508","endLine":4,"endColumn":33},{"ruleId":"505","severity":1,"message":"512","line":8,"column":9,"nodeType":"507","messageId":"508","endLine":8,"endColumn":15},{"ruleId":"588","severity":1,"message":"589","line":50,"column":9,"nodeType":"590","messageId":"591","endLine":50,"endColumn":13},{"ruleId":"505","severity":1,"message":"562","line":130,"column":15,"nodeType":"507","messageId":"508","endLine":130,"endColumn":21},{"ruleId":"592","severity":1,"message":"593","line":1,"column":1,"nodeType":"594","endLine":9,"endColumn":2},{"ruleId":"592","severity":1,"message":"593","line":1,"column":1,"nodeType":"594","endLine":9,"endColumn":2},{"ruleId":"505","severity":1,"message":"562","line":317,"column":15,"nodeType":"507","messageId":"508","endLine":317,"endColumn":21},{"ruleId":"505","severity":1,"message":"550","line":2,"column":9,"nodeType":"507","messageId":"508","endLine":2,"endColumn":15},{"ruleId":"505","severity":1,"message":"595","line":2,"column":17,"nodeType":"507","messageId":"508","endLine":2,"endColumn":21},{"ruleId":"505","severity":1,"message":"596","line":4,"column":63,"nodeType":"507","messageId":"508","endLine":4,"endColumn":74},{"ruleId":"505","severity":1,"message":"597","line":9,"column":10,"nodeType":"507","messageId":"508","endLine":9,"endColumn":22},{"ruleId":"523","severity":1,"message":"598","line":73,"column":21,"nodeType":"525","endLine":73,"endColumn":32},{"ruleId":"535","severity":1,"message":"536","line":77,"column":25,"nodeType":"525","endLine":77,"endColumn":65},{"ruleId":"505","severity":1,"message":"544","line":6,"column":11,"nodeType":"507","messageId":"508","endLine":6,"endColumn":17},{"ruleId":"505","severity":1,"message":"557","line":6,"column":18,"nodeType":"507","messageId":"508","endLine":6,"endColumn":25},{"ruleId":"505","severity":1,"message":"545","line":6,"column":35,"nodeType":"507","messageId":"508","endLine":6,"endColumn":43},{"ruleId":"505","severity":1,"message":"546","line":6,"column":53,"nodeType":"507","messageId":"508","endLine":6,"endColumn":60},{"ruleId":"505","severity":1,"message":"547","line":6,"column":61,"nodeType":"507","messageId":"508","endLine":6,"endColumn":72},{"ruleId":"505","severity":1,"message":"548","line":10,"column":10,"nodeType":"507","messageId":"508","endLine":10,"endColumn":16},{"ruleId":"505","severity":1,"message":"549","line":11,"column":18,"nodeType":"507","messageId":"508","endLine":11,"endColumn":22},{"ruleId":"505","severity":1,"message":"551","line":11,"column":39,"nodeType":"507","messageId":"508","endLine":11,"endColumn":47},{"ruleId":"505","severity":1,"message":"552","line":11,"column":48,"nodeType":"507","messageId":"508","endLine":11,"endColumn":54},{"ruleId":"505","severity":1,"message":"597","line":12,"column":10,"nodeType":"507","messageId":"508","endLine":12,"endColumn":22},{"ruleId":"505","severity":1,"message":"542","line":107,"column":13,"nodeType":"507","messageId":"508","endLine":107,"endColumn":16},{"ruleId":"505","severity":1,"message":"561","line":9,"column":17,"nodeType":"507","messageId":"508","endLine":9,"endColumn":21},{"ruleId":"579","severity":1,"message":"599","line":21,"column":7,"nodeType":"581","messageId":"582","endLine":21,"endColumn":12},{"ruleId":"505","severity":1,"message":"600","line":2,"column":18,"nodeType":"507","messageId":"508","endLine":2,"endColumn":22},{"ruleId":"505","severity":1,"message":"548","line":2,"column":24,"nodeType":"507","messageId":"508","endLine":2,"endColumn":30},{"ruleId":"505","severity":1,"message":"552","line":2,"column":31,"nodeType":"507","messageId":"508","endLine":2,"endColumn":37},{"ruleId":"505","severity":1,"message":"544","line":3,"column":18,"nodeType":"507","messageId":"508","endLine":3,"endColumn":24},{"ruleId":"505","severity":1,"message":"558","line":3,"column":25,"nodeType":"507","messageId":"508","endLine":3,"endColumn":31},{"ruleId":"505","severity":1,"message":"549","line":10,"column":25,"nodeType":"507","messageId":"508","endLine":10,"endColumn":29},{"ruleId":"505","severity":1,"message":"522","line":12,"column":9,"nodeType":"507","messageId":"508","endLine":12,"endColumn":15},{"ruleId":"579","severity":1,"message":"601","line":22,"column":11,"nodeType":"581","messageId":"582","endLine":22,"endColumn":22},{"ruleId":"523","severity":1,"message":"524","line":137,"column":17,"nodeType":"525","endLine":137,"endColumn":41},{"ruleId":"526","severity":1,"message":"527","line":147,"column":25,"nodeType":"525","messageId":"528","endLine":147,"endColumn":75,"fix":"602"},{"ruleId":"526","severity":1,"message":"527","line":150,"column":38,"nodeType":"525","messageId":"528","endLine":150,"endColumn":97,"fix":"603"},{"ruleId":"526","severity":1,"message":"527","line":151,"column":39,"nodeType":"525","messageId":"528","endLine":151,"endColumn":99,"fix":"604"},{"ruleId":"501","replacedBy":"605"},{"ruleId":"503","replacedBy":"606"},{"ruleId":"505","severity":1,"message":"506","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":13},{"ruleId":"505","severity":1,"message":"509","line":7,"column":8,"nodeType":"507","messageId":"508","endLine":7,"endColumn":14},{"ruleId":"505","severity":1,"message":"510","line":12,"column":8,"nodeType":"507","messageId":"508","endLine":12,"endColumn":21},{"ruleId":"505","severity":1,"message":"511","line":11,"column":3,"nodeType":"507","messageId":"508","endLine":11,"endColumn":15},{"ruleId":"505","severity":1,"message":"512","line":12,"column":3,"nodeType":"507","messageId":"508","endLine":12,"endColumn":9},{"ruleId":"505","severity":1,"message":"513","line":13,"column":3,"nodeType":"507","messageId":"508","endLine":13,"endColumn":11},{"ruleId":"505","severity":1,"message":"514","line":14,"column":3,"nodeType":"507","messageId":"508","endLine":14,"endColumn":15},{"ruleId":"505","severity":1,"message":"515","line":15,"column":3,"nodeType":"507","messageId":"508","endLine":15,"endColumn":17},{"ruleId":"505","severity":1,"message":"516","line":16,"column":3,"nodeType":"507","messageId":"508","endLine":16,"endColumn":17},{"ruleId":"505","severity":1,"message":"517","line":17,"column":3,"nodeType":"507","messageId":"508","endLine":17,"endColumn":13},{"ruleId":"505","severity":1,"message":"518","line":18,"column":3,"nodeType":"507","messageId":"508","endLine":18,"endColumn":17},{"ruleId":"505","severity":1,"message":"519","line":19,"column":3,"nodeType":"507","messageId":"508","endLine":19,"endColumn":19},{"ruleId":"505","severity":1,"message":"520","line":20,"column":3,"nodeType":"507","messageId":"508","endLine":20,"endColumn":13},{"ruleId":"505","severity":1,"message":"521","line":23,"column":29,"nodeType":"507","messageId":"508","endLine":23,"endColumn":44},{"ruleId":"505","severity":1,"message":"522","line":24,"column":9,"nodeType":"507","messageId":"508","endLine":24,"endColumn":15},{"ruleId":"523","severity":1,"message":"524","line":90,"column":3,"nodeType":"525","endLine":90,"endColumn":27},{"ruleId":"526","severity":1,"message":"527","line":131,"column":25,"nodeType":"525","messageId":"528","endLine":131,"endColumn":75,"fix":"607"},{"ruleId":"526","severity":1,"message":"527","line":134,"column":38,"nodeType":"525","messageId":"528","endLine":134,"endColumn":97,"fix":"608"},{"ruleId":"526","severity":1,"message":"527","line":135,"column":39,"nodeType":"525","messageId":"528","endLine":135,"endColumn":99,"fix":"609"},{"ruleId":"505","severity":1,"message":"532","line":7,"column":10,"nodeType":"507","messageId":"508","endLine":7,"endColumn":23},{"ruleId":"505","severity":1,"message":"533","line":8,"column":15,"nodeType":"507","messageId":"508","endLine":8,"endColumn":18},{"ruleId":"505","severity":1,"message":"534","line":12,"column":27,"nodeType":"507","messageId":"508","endLine":12,"endColumn":32},{"ruleId":"535","severity":1,"message":"536","line":145,"column":26,"nodeType":"525","endLine":145,"endColumn":59},{"ruleId":"505","severity":1,"message":"537","line":161,"column":11,"nodeType":"507","messageId":"508","endLine":161,"endColumn":19},{"ruleId":"505","severity":1,"message":"538","line":162,"column":11,"nodeType":"507","messageId":"508","endLine":162,"endColumn":14},{"ruleId":"505","severity":1,"message":"539","line":163,"column":11,"nodeType":"507","messageId":"508","endLine":163,"endColumn":15},{"ruleId":"505","severity":1,"message":"540","line":164,"column":11,"nodeType":"507","messageId":"508","endLine":164,"endColumn":17},{"ruleId":"505","severity":1,"message":"541","line":165,"column":11,"nodeType":"507","messageId":"508","endLine":165,"endColumn":20},{"ruleId":"505","severity":1,"message":"542","line":213,"column":13,"nodeType":"507","messageId":"508","endLine":213,"endColumn":16},{"ruleId":"505","severity":1,"message":"543","line":214,"column":12,"nodeType":"507","messageId":"508","endLine":214,"endColumn":25},{"ruleId":"505","severity":1,"message":"600","line":2,"column":18,"nodeType":"507","messageId":"508","endLine":2,"endColumn":22},{"ruleId":"505","severity":1,"message":"548","line":2,"column":24,"nodeType":"507","messageId":"508","endLine":2,"endColumn":30},{"ruleId":"505","severity":1,"message":"552","line":2,"column":31,"nodeType":"507","messageId":"508","endLine":2,"endColumn":37},{"ruleId":"505","severity":1,"message":"544","line":3,"column":18,"nodeType":"507","messageId":"508","endLine":3,"endColumn":24},{"ruleId":"505","severity":1,"message":"558","line":3,"column":25,"nodeType":"507","messageId":"508","endLine":3,"endColumn":31},{"ruleId":"505","severity":1,"message":"549","line":10,"column":25,"nodeType":"507","messageId":"508","endLine":10,"endColumn":29},{"ruleId":"505","severity":1,"message":"522","line":13,"column":9,"nodeType":"507","messageId":"508","endLine":13,"endColumn":15},{"ruleId":"579","severity":1,"message":"601","line":22,"column":11,"nodeType":"581","messageId":"582","endLine":22,"endColumn":22},{"ruleId":"610","severity":1,"message":"611","line":117,"column":46,"nodeType":"612","messageId":"613","endLine":117,"endColumn":48},{"ruleId":"523","severity":1,"message":"524","line":145,"column":17,"nodeType":"525","endLine":145,"endColumn":41},{"ruleId":"526","severity":1,"message":"527","line":155,"column":25,"nodeType":"525","messageId":"528","endLine":155,"endColumn":75,"fix":"614"},{"ruleId":"526","severity":1,"message":"527","line":156,"column":66,"nodeType":"525","messageId":"528","endLine":156,"endColumn":109,"fix":"615"},{"ruleId":"505","severity":1,"message":"553","line":2,"column":10,"nodeType":"507","messageId":"508","endLine":2,"endColumn":15},{"ruleId":"505","severity":1,"message":"554","line":2,"column":17,"nodeType":"507","messageId":"508","endLine":2,"endColumn":22},{"ruleId":"505","severity":1,"message":"550","line":2,"column":24,"nodeType":"507","messageId":"508","endLine":2,"endColumn":30},{"ruleId":"505","severity":1,"message":"555","line":2,"column":32,"nodeType":"507","messageId":"508","endLine":2,"endColumn":37},{"ruleId":"505","severity":1,"message":"556","line":2,"column":38,"nodeType":"507","messageId":"508","endLine":2,"endColumn":41},{"ruleId":"505","severity":1,"message":"549","line":2,"column":57,"nodeType":"507","messageId":"508","endLine":2,"endColumn":61},{"ruleId":"505","severity":1,"message":"557","line":3,"column":9,"nodeType":"507","messageId":"508","endLine":3,"endColumn":16},{"ruleId":"505","severity":1,"message":"544","line":3,"column":54,"nodeType":"507","messageId":"508","endLine":3,"endColumn":60},{"ruleId":"505","severity":1,"message":"558","line":3,"column":68,"nodeType":"507","messageId":"508","endLine":3,"endColumn":74},{"ruleId":"505","severity":1,"message":"559","line":7,"column":8,"nodeType":"507","messageId":"508","endLine":7,"endColumn":12},{"ruleId":"505","severity":1,"message":"533","line":8,"column":9,"nodeType":"507","messageId":"508","endLine":8,"endColumn":12},{"ruleId":"505","severity":1,"message":"560","line":8,"column":13,"nodeType":"507","messageId":"508","endLine":8,"endColumn":16},{"ruleId":"505","severity":1,"message":"561","line":8,"column":17,"nodeType":"507","messageId":"508","endLine":8,"endColumn":21},{"ruleId":"505","severity":1,"message":"562","line":10,"column":9,"nodeType":"507","messageId":"508","endLine":10,"endColumn":15},{"ruleId":"505","severity":1,"message":"563","line":12,"column":7,"nodeType":"507","messageId":"508","endLine":12,"endColumn":13},{"ruleId":"505","severity":1,"message":"564","line":117,"column":12,"nodeType":"507","messageId":"508","endLine":117,"endColumn":25},{"ruleId":"505","severity":1,"message":"565","line":118,"column":12,"nodeType":"507","messageId":"508","endLine":118,"endColumn":23},{"ruleId":"610","severity":1,"message":"611","line":190,"column":46,"nodeType":"612","messageId":"613","endLine":190,"endColumn":48},{"ruleId":"505","severity":1,"message":"532","line":7,"column":10,"nodeType":"507","messageId":"508","endLine":7,"endColumn":23},{"ruleId":"505","severity":1,"message":"533","line":8,"column":15,"nodeType":"507","messageId":"508","endLine":8,"endColumn":18},{"ruleId":"505","severity":1,"message":"534","line":12,"column":27,"nodeType":"507","messageId":"508","endLine":12,"endColumn":32},{"ruleId":"535","severity":1,"message":"536","line":133,"column":26,"nodeType":"525","endLine":133,"endColumn":59},{"ruleId":"505","severity":1,"message":"573","line":4,"column":10,"nodeType":"507","messageId":"508","endLine":4,"endColumn":25},{"ruleId":"505","severity":1,"message":"574","line":5,"column":8,"nodeType":"507","messageId":"508","endLine":5,"endColumn":13},{"ruleId":"505","severity":1,"message":"575","line":6,"column":9,"nodeType":"507","messageId":"508","endLine":6,"endColumn":12},{"ruleId":"505","severity":1,"message":"576","line":19,"column":10,"nodeType":"507","messageId":"508","endLine":19,"endColumn":17},{"ruleId":"505","severity":1,"message":"577","line":20,"column":79,"nodeType":"507","messageId":"508","endLine":20,"endColumn":91},{"ruleId":"505","severity":1,"message":"578","line":23,"column":8,"nodeType":"507","messageId":"508","endLine":23,"endColumn":25},{"ruleId":"579","severity":1,"message":"580","line":40,"column":13,"nodeType":"581","messageId":"582","endLine":40,"endColumn":35},{"ruleId":"505","severity":1,"message":"583","line":188,"column":40,"nodeType":"507","messageId":"508","endLine":188,"endColumn":47},{"ruleId":"523","severity":1,"message":"524","line":306,"column":21,"nodeType":"525","endLine":306,"endColumn":24},{"ruleId":"535","severity":1,"message":"536","line":307,"column":21,"nodeType":"525","endLine":307,"endColumn":82},{"ruleId":"526","severity":1,"message":"527","line":334,"column":35,"nodeType":"525","messageId":"528","endLine":334,"endColumn":85,"fix":"616"},{"ruleId":"526","severity":1,"message":"527","line":335,"column":76,"nodeType":"525","messageId":"528","endLine":335,"endColumn":119,"fix":"617"},{"ruleId":"505","severity":1,"message":"549","line":2,"column":23,"nodeType":"507","messageId":"508","endLine":2,"endColumn":27},{"ruleId":"505","severity":1,"message":"566","line":2,"column":44,"nodeType":"507","messageId":"508","endLine":2,"endColumn":49},{"ruleId":"505","severity":1,"message":"567","line":3,"column":10,"nodeType":"507","messageId":"508","endLine":3,"endColumn":28},{"ruleId":"505","severity":1,"message":"555","line":4,"column":17,"nodeType":"507","messageId":"508","endLine":4,"endColumn":22},{"ruleId":"505","severity":1,"message":"512","line":8,"column":9,"nodeType":"507","messageId":"508","endLine":8,"endColumn":15},{"ruleId":"505","severity":1,"message":"562","line":195,"column":15,"nodeType":"507","messageId":"508","endLine":195,"endColumn":21},{"ruleId":"505","severity":1,"message":"562","line":218,"column":15,"nodeType":"507","messageId":"508","endLine":218,"endColumn":21},{"ruleId":"505","severity":1,"message":"549","line":2,"column":23,"nodeType":"507","messageId":"508","endLine":2,"endColumn":27},{"ruleId":"505","severity":1,"message":"566","line":2,"column":44,"nodeType":"507","messageId":"508","endLine":2,"endColumn":49},{"ruleId":"505","severity":1,"message":"567","line":3,"column":10,"nodeType":"507","messageId":"508","endLine":3,"endColumn":28},{"ruleId":"505","severity":1,"message":"555","line":4,"column":17,"nodeType":"507","messageId":"508","endLine":4,"endColumn":22},{"ruleId":"505","severity":1,"message":"587","line":4,"column":23,"nodeType":"507","messageId":"508","endLine":4,"endColumn":33},{"ruleId":"505","severity":1,"message":"512","line":8,"column":9,"nodeType":"507","messageId":"508","endLine":8,"endColumn":15},{"ruleId":"588","severity":1,"message":"589","line":50,"column":9,"nodeType":"590","messageId":"591","endLine":50,"endColumn":13},{"ruleId":"505","severity":1,"message":"562","line":130,"column":15,"nodeType":"507","messageId":"508","endLine":130,"endColumn":21},{"ruleId":"505","severity":1,"message":"568","line":9,"column":10,"nodeType":"507","messageId":"508","endLine":9,"endColumn":22},{"ruleId":"569","severity":1,"message":"570","line":208,"column":97,"nodeType":"571","messageId":"572","endLine":208,"endColumn":98},{"ruleId":"505","severity":1,"message":"562","line":322,"column":15,"nodeType":"507","messageId":"508","endLine":322,"endColumn":21},{"ruleId":"505","severity":1,"message":"544","line":6,"column":11,"nodeType":"507","messageId":"508","endLine":6,"endColumn":17},{"ruleId":"505","severity":1,"message":"557","line":6,"column":18,"nodeType":"507","messageId":"508","endLine":6,"endColumn":25},{"ruleId":"505","severity":1,"message":"545","line":6,"column":35,"nodeType":"507","messageId":"508","endLine":6,"endColumn":43},{"ruleId":"505","severity":1,"message":"546","line":6,"column":53,"nodeType":"507","messageId":"508","endLine":6,"endColumn":60},{"ruleId":"505","severity":1,"message":"547","line":6,"column":61,"nodeType":"507","messageId":"508","endLine":6,"endColumn":72},{"ruleId":"505","severity":1,"message":"548","line":10,"column":10,"nodeType":"507","messageId":"508","endLine":10,"endColumn":16},{"ruleId":"505","severity":1,"message":"549","line":11,"column":18,"nodeType":"507","messageId":"508","endLine":11,"endColumn":22},{"ruleId":"505","severity":1,"message":"551","line":11,"column":39,"nodeType":"507","messageId":"508","endLine":11,"endColumn":47},{"ruleId":"505","severity":1,"message":"552","line":11,"column":48,"nodeType":"507","messageId":"508","endLine":11,"endColumn":54},{"ruleId":"505","severity":1,"message":"597","line":12,"column":10,"nodeType":"507","messageId":"508","endLine":12,"endColumn":22},{"ruleId":"505","severity":1,"message":"542","line":107,"column":13,"nodeType":"507","messageId":"508","endLine":107,"endColumn":16},{"ruleId":"505","severity":1,"message":"550","line":2,"column":9,"nodeType":"507","messageId":"508","endLine":2,"endColumn":15},{"ruleId":"505","severity":1,"message":"595","line":2,"column":17,"nodeType":"507","messageId":"508","endLine":2,"endColumn":21},{"ruleId":"505","severity":1,"message":"596","line":4,"column":63,"nodeType":"507","messageId":"508","endLine":4,"endColumn":74},{"ruleId":"505","severity":1,"message":"597","line":9,"column":10,"nodeType":"507","messageId":"508","endLine":9,"endColumn":22},{"ruleId":"523","severity":1,"message":"598","line":73,"column":21,"nodeType":"525","endLine":73,"endColumn":32},{"ruleId":"535","severity":1,"message":"536","line":77,"column":25,"nodeType":"525","endLine":77,"endColumn":65},{"ruleId":"592","severity":1,"message":"593","line":1,"column":1,"nodeType":"594","endLine":9,"endColumn":2},{"ruleId":"505","severity":1,"message":"562","line":316,"column":15,"nodeType":"507","messageId":"508","endLine":316,"endColumn":21},{"ruleId":"505","severity":1,"message":"544","line":6,"column":11,"nodeType":"507","messageId":"508","endLine":6,"endColumn":17},{"ruleId":"505","severity":1,"message":"545","line":6,"column":35,"nodeType":"507","messageId":"508","endLine":6,"endColumn":43},{"ruleId":"505","severity":1,"message":"546","line":6,"column":53,"nodeType":"507","messageId":"508","endLine":6,"endColumn":60},{"ruleId":"505","severity":1,"message":"547","line":6,"column":61,"nodeType":"507","messageId":"508","endLine":6,"endColumn":72},{"ruleId":"505","severity":1,"message":"548","line":10,"column":10,"nodeType":"507","messageId":"508","endLine":10,"endColumn":16},{"ruleId":"505","severity":1,"message":"549","line":11,"column":18,"nodeType":"507","messageId":"508","endLine":11,"endColumn":22},{"ruleId":"505","severity":1,"message":"550","line":11,"column":31,"nodeType":"507","messageId":"508","endLine":11,"endColumn":37},{"ruleId":"505","severity":1,"message":"551","line":11,"column":39,"nodeType":"507","messageId":"508","endLine":11,"endColumn":47},{"ruleId":"505","severity":1,"message":"552","line":11,"column":48,"nodeType":"507","messageId":"508","endLine":11,"endColumn":54},{"ruleId":"505","severity":1,"message":"542","line":118,"column":13,"nodeType":"507","messageId":"508","endLine":118,"endColumn":16},{"ruleId":"592","severity":1,"message":"593","line":1,"column":1,"nodeType":"594","endLine":9,"endColumn":2},{"ruleId":"505","severity":1,"message":"561","line":9,"column":17,"nodeType":"507","messageId":"508","endLine":9,"endColumn":21},{"ruleId":"579","severity":1,"message":"599","line":21,"column":7,"nodeType":"581","messageId":"582","endLine":21,"endColumn":12},{"ruleId":"505","severity":1,"message":"618","line":72,"column":9,"nodeType":"507","messageId":"508","endLine":72,"endColumn":15},{"ruleId":"610","severity":1,"message":"611","line":755,"column":47,"nodeType":"612","messageId":"613","endLine":755,"endColumn":49},{"ruleId":"505","severity":1,"message":"544","line":7,"column":9,"nodeType":"507","messageId":"508","endLine":7,"endColumn":15},{"ruleId":"505","severity":1,"message":"558","line":7,"column":16,"nodeType":"507","messageId":"508","endLine":7,"endColumn":22},{"ruleId":"505","severity":1,"message":"511","line":7,"column":39,"nodeType":"507","messageId":"508","endLine":7,"endColumn":51},{"ruleId":"505","severity":1,"message":"554","line":8,"column":18,"nodeType":"507","messageId":"508","endLine":8,"endColumn":23},{"ruleId":"505","severity":1,"message":"555","line":9,"column":17,"nodeType":"507","messageId":"508","endLine":9,"endColumn":22},{"ruleId":"505","severity":1,"message":"619","line":11,"column":10,"nodeType":"507","messageId":"508","endLine":11,"endColumn":18},{"ruleId":"505","severity":1,"message":"620","line":11,"column":20,"nodeType":"507","messageId":"508","endLine":11,"endColumn":32},{"ruleId":"505","severity":1,"message":"621","line":11,"column":34,"nodeType":"507","messageId":"508","endLine":11,"endColumn":46},{"ruleId":"505","severity":1,"message":"562","line":196,"column":15,"nodeType":"507","messageId":"508","endLine":196,"endColumn":21},{"ruleId":"622","severity":1,"message":"623","line":255,"column":30,"nodeType":"624","messageId":"625","endLine":255,"endColumn":154},{"ruleId":"622","severity":1,"message":"623","line":270,"column":30,"nodeType":"624","messageId":"625","endLine":270,"endColumn":154},{"ruleId":"622","severity":1,"message":"623","line":285,"column":30,"nodeType":"624","messageId":"625","endLine":285,"endColumn":154},{"ruleId":"622","severity":1,"message":"623","line":301,"column":30,"nodeType":"624","messageId":"625","endLine":301,"endColumn":154},{"ruleId":"622","severity":1,"message":"623","line":336,"column":31,"nodeType":"624","messageId":"625","endLine":336,"endColumn":155},{"ruleId":"622","severity":1,"message":"623","line":351,"column":31,"nodeType":"624","messageId":"625","endLine":351,"endColumn":155},{"ruleId":"622","severity":1,"message":"623","line":366,"column":31,"nodeType":"624","messageId":"625","endLine":366,"endColumn":155},{"ruleId":"622","severity":1,"message":"623","line":382,"column":31,"nodeType":"624","messageId":"625","endLine":382,"endColumn":155},{"ruleId":"505","severity":1,"message":"561","line":9,"column":17,"nodeType":"507","messageId":"508","endLine":9,"endColumn":21},{"ruleId":"579","severity":1,"message":"599","line":21,"column":7,"nodeType":"581","messageId":"582","endLine":21,"endColumn":12},{"ruleId":"505","severity":1,"message":"618","line":72,"column":9,"nodeType":"507","messageId":"508","endLine":72,"endColumn":15},{"ruleId":"610","severity":1,"message":"611","line":677,"column":47,"nodeType":"612","messageId":"613","endLine":677,"endColumn":49},"no-native-reassign",["626"],"no-negated-in-lhs",["627"],"no-unused-vars","'login' is defined but never used.","Identifier","unusedVar","'singUp' is defined but never used.","'panelConexion' is defined but never used.","'MDBContainer' is defined but never used.","'MDBBtn' is defined but never used.","'MDBModal' is defined but never used.","'MDBModalBody' is defined but never used.","'MDBModalHeader' is defined but never used.","'MDBModalFooter' is defined but never used.","'MDBPopover' is defined but never used.","'MDBPopoverBody' is defined but never used.","'MDBPopoverHeader' is defined but never used.","'MDBTooltip' is defined but never used.","'SettingOutlined' is defined but never used.","'Header' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"628","text":"629"},{"range":"630","text":"629"},{"range":"631","text":"629"},"'DialogUtility' is defined but never used.","'Row' is defined but never used.","'Boton' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'telefono' is assigned a value but never used.","'ext' is assigned a value but never used.","'area' is assigned a value but never used.","'puesto' is assigned a value but never used.","'ubicacion' is assigned a value but never used.","'rfc' is assigned a value but never used.","'datosClientes' is assigned a value but never used.","'MDBRow' is defined but never used.","'MDBInput' is defined but never used.","'MDBCard' is defined but never used.","'MDBCardBody' is defined but never used.","'Avatar' is defined but never used.","'form' is defined but never used.","'Button' is defined but never used.","'Checkbox' is defined but never used.","'Select' is defined but never used.","'Table' is defined but never used.","'Input' is defined but never used.","'Space' is defined but never used.","'Tag' is defined but never used.","'MDBIcon' is defined but never used.","'MDBCol' is defined but never used.","'swal' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'Option' is assigned a value but never used.","'layout' is assigned a value but never used.","'botonEliminar' is defined but never used.","'botonEditar' is defined but never used.","'Radio' is defined but never used.","'InfoCircleOutlined' is defined but never used.","'MailOutlined' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'DesktopOutlined' is defined but never used.","'axios' is defined but never used.","'API' is defined but never used.","'GrGroup' is defined but never used.","'BankOutlined' is defined but never used.","'tablaDataEmpleado' is defined but never used.","no-dupe-keys","Duplicate key 'sideNavTablaDirectorio'.","ObjectExpression","unexpected","'Content' is assigned a value but never used.",{"range":"632","text":"629"},{"range":"633","text":"629"},{"range":"634","text":"629"},"'DatePicker' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","ThisExpression","noDirectMutation","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Card' is defined but never used.","'MDBCardText' is defined but never used.","'UserOutlined' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Duplicate key 'modal'.","'Menu' is defined but never used.","Duplicate key 'tablaInicio'.",{"range":"635","text":"629"},{"range":"636","text":"629"},{"range":"637","text":"629"},["626"],["627"],{"range":"638","text":"629"},{"range":"639","text":"629"},{"range":"640","text":"629"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",{"range":"641","text":"629"},{"range":"642","text":"629"},{"range":"643","text":"629"},{"range":"644","text":"629"},"'filtro' is assigned a value but never used.","'MDBTable' is defined but never used.","'MDBTableBody' is defined but never used.","'MDBTableHead' is defined but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","no-global-assign","no-unsafe-negation",[3887,3887]," rel=\"noreferrer\"",[4322,4322],[4464,4464],[10088,10088],[10553,10553],[10705,10705],[4624,4624],[5062,5062],[5205,5205],[3887,3887],[4322,4322],[4464,4464],[4814,4814],[4973,4973],[13180,13180],[13349,13349]]